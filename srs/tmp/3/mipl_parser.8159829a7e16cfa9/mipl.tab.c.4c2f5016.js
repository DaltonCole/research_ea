var data = {lines:[
{"lineNum":"    1","line":"/* A Bison parser, made by GNU Bison 3.0.4.  */"},
{"lineNum":"    2","line":""},
{"lineNum":"    3","line":"/* Bison implementation for Yacc-like parsers in C"},
{"lineNum":"    4","line":""},
{"lineNum":"    5","line":"   Copyright (C) 1984, 1989-1990, 2000-2015 Free Software Foundation, Inc."},
{"lineNum":"    6","line":""},
{"lineNum":"    7","line":"   This program is free software: you can redistribute it and/or modify"},
{"lineNum":"    8","line":"   it under the terms of the GNU General Public License as published by"},
{"lineNum":"    9","line":"   the Free Software Foundation, either version 3 of the License, or"},
{"lineNum":"   10","line":"   (at your option) any later version."},
{"lineNum":"   11","line":""},
{"lineNum":"   12","line":"   This program is distributed in the hope that it will be useful,"},
{"lineNum":"   13","line":"   but WITHOUT ANY WARRANTY; without even the implied warranty of"},
{"lineNum":"   14","line":"   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the"},
{"lineNum":"   15","line":"   GNU General Public License for more details."},
{"lineNum":"   16","line":""},
{"lineNum":"   17","line":"   You should have received a copy of the GNU General Public License"},
{"lineNum":"   18","line":"   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */"},
{"lineNum":"   19","line":""},
{"lineNum":"   20","line":"/* As a special exception, you may create a larger work that contains"},
{"lineNum":"   21","line":"   part or all of the Bison parser skeleton and distribute that work"},
{"lineNum":"   22","line":"   under terms of your choice, so long as that work isn\'t itself a"},
{"lineNum":"   23","line":"   parser generator using the skeleton or a modified version thereof"},
{"lineNum":"   24","line":"   as a parser skeleton.  Alternatively, if you modify or redistribute"},
{"lineNum":"   25","line":"   the parser skeleton itself, you may (at your option) remove this"},
{"lineNum":"   26","line":"   special exception, which will cause the skeleton and the resulting"},
{"lineNum":"   27","line":"   Bison output files to be licensed under the GNU General Public"},
{"lineNum":"   28","line":"   License without this special exception."},
{"lineNum":"   29","line":""},
{"lineNum":"   30","line":"   This special exception was added by the Free Software Foundation in"},
{"lineNum":"   31","line":"   version 2.2 of Bison.  */"},
{"lineNum":"   32","line":""},
{"lineNum":"   33","line":"/* C LALR(1) parser skeleton written by Richard Stallman, by"},
{"lineNum":"   34","line":"   simplifying the original so-called \"semantic\" parser.  */"},
{"lineNum":"   35","line":""},
{"lineNum":"   36","line":"/* All symbols defined below should begin with yy or YY, to avoid"},
{"lineNum":"   37","line":"   infringing on user name space.  This should be done even for local"},
{"lineNum":"   38","line":"   variables, as they might otherwise be expanded by user macros."},
{"lineNum":"   39","line":"   There are some unavoidable exceptions within include files to"},
{"lineNum":"   40","line":"   define necessary library symbols; they are noted \"INFRINGES ON"},
{"lineNum":"   41","line":"   USER NAME SPACE\" below.  */"},
{"lineNum":"   42","line":""},
{"lineNum":"   43","line":"/* Identify Bison output.  */"},
{"lineNum":"   44","line":"#define YYBISON 1"},
{"lineNum":"   45","line":""},
{"lineNum":"   46","line":"/* Bison version.  */"},
{"lineNum":"   47","line":"#define YYBISON_VERSION \"3.0.4\""},
{"lineNum":"   48","line":""},
{"lineNum":"   49","line":"/* Skeleton name.  */"},
{"lineNum":"   50","line":"#define YYSKELETON_NAME \"yacc.c\""},
{"lineNum":"   51","line":""},
{"lineNum":"   52","line":"/* Pure parsers.  */"},
{"lineNum":"   53","line":"#define YYPURE 0"},
{"lineNum":"   54","line":""},
{"lineNum":"   55","line":"/* Push parsers.  */"},
{"lineNum":"   56","line":"#define YYPUSH 0"},
{"lineNum":"   57","line":""},
{"lineNum":"   58","line":"/* Pull parsers.  */"},
{"lineNum":"   59","line":"#define YYPULL 1"},
{"lineNum":"   60","line":""},
{"lineNum":"   61","line":""},
{"lineNum":"   62","line":""},
{"lineNum":"   63","line":""},
{"lineNum":"   64","line":"/* Copy the first part of user declarations.  */"},
{"lineNum":"   65","line":"#line 9 \"mipl.y\" /* yacc.c:339  */"},
{"lineNum":"   66","line":""},
{"lineNum":"   67","line":""},
{"lineNum":"   68","line":"#include <stdio.h>"},
{"lineNum":"   69","line":"#include <stdlib.h>"},
{"lineNum":"   70","line":"#include <iostream>"},
{"lineNum":"   71","line":"#include <string>"},
{"lineNum":"   72","line":"#include <ctype.h>"},
{"lineNum":"   73","line":"#include <stack>"},
{"lineNum":"   74","line":"#include <list>"},
{"lineNum":"   75","line":"#include \"SymbolTable.h\""},
{"lineNum":"   76","line":"using namespace std;"},
{"lineNum":"   77","line":""},
{"lineNum":"   78","line":"void ignoreComment();"},
{"lineNum":"   79","line":"int ckInt();"},
{"lineNum":"   80","line":"void prRule(const char*, const char*);"},
{"lineNum":"   81","line":"void printTokenInfo(const char* tokenType,"},
{"lineNum":"   82","line":"                    const char* lexeme);"},
{"lineNum":"   83","line":"void prSymbolTableAddition(const string identName,"},
{"lineNum":"   84","line":"                           const TYPE_INFO typeInfo);"},
{"lineNum":"   85","line":"void beginScope();"},
{"lineNum":"   86","line":"void endScope();"},
{"lineNum":"   87","line":"void cleanUp();"},
{"lineNum":"   88","line":"TYPE_INFO findEntryInAnyScope(const string theName);"},
{"lineNum":"   89","line":""},
{"lineNum":"   90","line":"int yyerror(const char*);"},
{"lineNum":"   91","line":""},
{"lineNum":"   92","line":"extern \"C\" {"},
{"lineNum":"   93","line":"    int yyparse(void);"},
{"lineNum":"   94","line":"    int yylex(void);"},
{"lineNum":"   95","line":"    int yywrap() {return 1;}"},
{"lineNum":"   96","line":"}"},
{"lineNum":"   97","line":""},
{"lineNum":"   98","line":"#define MAX_INT\t\"2147483647\""},
{"lineNum":"   99","line":""},
{"lineNum":"  100","line":"#define OUTPUT_TOKENS\t \t0"},
{"lineNum":"  101","line":"#define OUTPUT_PRODUCTIONS \t0"},
{"lineNum":"  102","line":"#define OUTPUT_ST_MGT      \t0"},
{"lineNum":"  103","line":""},
{"lineNum":"  104","line":"#define POSITIVE\t\t1"},
{"lineNum":"  105","line":"#define NEGATIVE\t\t-1"},
{"lineNum":"  106","line":""},
{"lineNum":"  107","line":"#define LOGICAL_OP \t\t100"},
{"lineNum":"  108","line":"#define ARITHMETIC_OP \t101"},
{"lineNum":"  109","line":""},
{"lineNum":"  110","line":"int lineNum = 1;                   // source line number"},
{"lineNum":"  111","line":""},
{"lineNum":"  112","line":"stack<SYMBOL_TABLE> scopeStack;    // stack of scope hashtables"},
{"lineNum":"  113","line":"list<string> variableNames;\t\t  // list of declared variables"},
{"lineNum":"  114","line":""},
{"lineNum":"  115","line":""},
{"lineNum":"  116","line":"#line 117 \"mipl.tab.c\" /* yacc.c:339  */"},
{"lineNum":"  117","line":""},
{"lineNum":"  118","line":"# ifndef YY_NULLPTR"},
{"lineNum":"  119","line":"#  if defined __cplusplus && 201103L <= __cplusplus"},
{"lineNum":"  120","line":"#   define YY_NULLPTR nullptr"},
{"lineNum":"  121","line":"#  else"},
{"lineNum":"  122","line":"#   define YY_NULLPTR 0"},
{"lineNum":"  123","line":"#  endif"},
{"lineNum":"  124","line":"# endif"},
{"lineNum":"  125","line":""},
{"lineNum":"  126","line":"/* Enabling verbose error messages.  */"},
{"lineNum":"  127","line":"#ifdef YYERROR_VERBOSE"},
{"lineNum":"  128","line":"# undef YYERROR_VERBOSE"},
{"lineNum":"  129","line":"# define YYERROR_VERBOSE 1"},
{"lineNum":"  130","line":"#else"},
{"lineNum":"  131","line":"# define YYERROR_VERBOSE 0"},
{"lineNum":"  132","line":"#endif"},
{"lineNum":"  133","line":""},
{"lineNum":"  134","line":""},
{"lineNum":"  135","line":"/* Debug traces.  */"},
{"lineNum":"  136","line":"#ifndef YYDEBUG"},
{"lineNum":"  137","line":"# define YYDEBUG 0"},
{"lineNum":"  138","line":"#endif"},
{"lineNum":"  139","line":"#if YYDEBUG"},
{"lineNum":"  140","line":"extern int yydebug;"},
{"lineNum":"  141","line":"#endif"},
{"lineNum":"  142","line":""},
{"lineNum":"  143","line":"/* Token type.  */"},
{"lineNum":"  144","line":"#ifndef YYTOKENTYPE"},
{"lineNum":"  145","line":"# define YYTOKENTYPE"},
{"lineNum":"  146","line":"  enum yytokentype"},
{"lineNum":"  147","line":"  {"},
{"lineNum":"  148","line":"    T_LPAREN = 258,"},
{"lineNum":"  149","line":"    T_RPAREN = 259,"},
{"lineNum":"  150","line":"    T_MULT = 260,"},
{"lineNum":"  151","line":"    T_PLUS = 261,"},
{"lineNum":"  152","line":"    T_COMMA = 262,"},
{"lineNum":"  153","line":"    T_MINUS = 263,"},
{"lineNum":"  154","line":"    T_DOT = 264,"},
{"lineNum":"  155","line":"    T_DOTDOT = 265,"},
{"lineNum":"  156","line":"    T_COLON = 266,"},
{"lineNum":"  157","line":"    T_ASSIGN = 267,"},
{"lineNum":"  158","line":"    T_SCOLON = 268,"},
{"lineNum":"  159","line":"    T_LT = 269,"},
{"lineNum":"  160","line":"    T_LE = 270,"},
{"lineNum":"  161","line":"    T_NE = 271,"},
{"lineNum":"  162","line":"    T_EQ = 272,"},
{"lineNum":"  163","line":"    T_GT = 273,"},
{"lineNum":"  164","line":"    T_GE = 274,"},
{"lineNum":"  165","line":"    T_LBRACK = 275,"},
{"lineNum":"  166","line":"    T_RBRACK = 276,"},
{"lineNum":"  167","line":"    T_DO = 277,"},
{"lineNum":"  168","line":"    T_AND = 278,"},
{"lineNum":"  169","line":"    T_ARRAY = 279,"},
{"lineNum":"  170","line":"    T_BEGIN = 280,"},
{"lineNum":"  171","line":"    T_BOOL = 281,"},
{"lineNum":"  172","line":"    T_CHAR = 282,"},
{"lineNum":"  173","line":"    T_CHARCONST = 283,"},
{"lineNum":"  174","line":"    T_DIV = 284,"},
{"lineNum":"  175","line":"    T_END = 285,"},
{"lineNum":"  176","line":"    T_FALSE = 286,"},
{"lineNum":"  177","line":"    T_IDENT = 287,"},
{"lineNum":"  178","line":"    T_IF = 288,"},
{"lineNum":"  179","line":"    T_INT = 289,"},
{"lineNum":"  180","line":"    T_INTCONST = 290,"},
{"lineNum":"  181","line":"    T_NOT = 291,"},
{"lineNum":"  182","line":"    T_OF = 292,"},
{"lineNum":"  183","line":"    T_OR = 293,"},
{"lineNum":"  184","line":"    T_PROC = 294,"},
{"lineNum":"  185","line":"    T_PROG = 295,"},
{"lineNum":"  186","line":"    T_READ = 296,"},
{"lineNum":"  187","line":"    T_TRUE = 297,"},
{"lineNum":"  188","line":"    T_VAR = 298,"},
{"lineNum":"  189","line":"    T_WHILE = 299,"},
{"lineNum":"  190","line":"    T_WRITE = 300,"},
{"lineNum":"  191","line":"    T_UNKNOWN = 301,"},
{"lineNum":"  192","line":"    ST_EOF = 302,"},
{"lineNum":"  193","line":"    T_THEN = 303,"},
{"lineNum":"  194","line":"    T_ELSE = 304"},
{"lineNum":"  195","line":"  };"},
{"lineNum":"  196","line":"#endif"},
{"lineNum":"  197","line":""},
{"lineNum":"  198","line":"/* Value type.  */"},
{"lineNum":"  199","line":"#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED"},
{"lineNum":"  200","line":""},
{"lineNum":"  201","line":"union YYSTYPE"},
{"lineNum":"  202","line":"{"},
{"lineNum":"  203","line":"#line 60 \"mipl.y\" /* yacc.c:355  */"},
{"lineNum":"  204","line":""},
{"lineNum":"  205","line":"  char* text;"},
{"lineNum":"  206","line":"  char ch;"},
{"lineNum":"  207","line":"  int num;"},
{"lineNum":"  208","line":"  bool boolean;"},
{"lineNum":"  209","line":"  TYPE_INFO typeInfo;"},
{"lineNum":"  210","line":"  int intValue;"},
{"lineNum":"  211","line":""},
{"lineNum":"  212","line":"#line 213 \"mipl.tab.c\" /* yacc.c:355  */"},
{"lineNum":"  213","line":"};"},
{"lineNum":"  214","line":""},
{"lineNum":"  215","line":"typedef union YYSTYPE YYSTYPE;"},
{"lineNum":"  216","line":"# define YYSTYPE_IS_TRIVIAL 1"},
{"lineNum":"  217","line":"# define YYSTYPE_IS_DECLARED 1"},
{"lineNum":"  218","line":"#endif"},
{"lineNum":"  219","line":""},
{"lineNum":"  220","line":""},
{"lineNum":"  221","line":"extern YYSTYPE yylval;"},
{"lineNum":"  222","line":""},
{"lineNum":"  223","line":"int yyparse (void);"},
{"lineNum":"  224","line":""},
{"lineNum":"  225","line":""},
{"lineNum":"  226","line":""},
{"lineNum":"  227","line":"/* Copy the second part of user declarations.  */"},
{"lineNum":"  228","line":""},
{"lineNum":"  229","line":"#line 230 \"mipl.tab.c\" /* yacc.c:358  */"},
{"lineNum":"  230","line":""},
{"lineNum":"  231","line":"#ifdef short"},
{"lineNum":"  232","line":"# undef short"},
{"lineNum":"  233","line":"#endif"},
{"lineNum":"  234","line":""},
{"lineNum":"  235","line":"#ifdef YYTYPE_UINT8"},
{"lineNum":"  236","line":"typedef YYTYPE_UINT8 yytype_uint8;"},
{"lineNum":"  237","line":"#else"},
{"lineNum":"  238","line":"typedef unsigned char yytype_uint8;"},
{"lineNum":"  239","line":"#endif"},
{"lineNum":"  240","line":""},
{"lineNum":"  241","line":"#ifdef YYTYPE_INT8"},
{"lineNum":"  242","line":"typedef YYTYPE_INT8 yytype_int8;"},
{"lineNum":"  243","line":"#else"},
{"lineNum":"  244","line":"typedef signed char yytype_int8;"},
{"lineNum":"  245","line":"#endif"},
{"lineNum":"  246","line":""},
{"lineNum":"  247","line":"#ifdef YYTYPE_UINT16"},
{"lineNum":"  248","line":"typedef YYTYPE_UINT16 yytype_uint16;"},
{"lineNum":"  249","line":"#else"},
{"lineNum":"  250","line":"typedef unsigned short int yytype_uint16;"},
{"lineNum":"  251","line":"#endif"},
{"lineNum":"  252","line":""},
{"lineNum":"  253","line":"#ifdef YYTYPE_INT16"},
{"lineNum":"  254","line":"typedef YYTYPE_INT16 yytype_int16;"},
{"lineNum":"  255","line":"#else"},
{"lineNum":"  256","line":"typedef short int yytype_int16;"},
{"lineNum":"  257","line":"#endif"},
{"lineNum":"  258","line":""},
{"lineNum":"  259","line":"#ifndef YYSIZE_T"},
{"lineNum":"  260","line":"# ifdef __SIZE_TYPE__"},
{"lineNum":"  261","line":"#  define YYSIZE_T __SIZE_TYPE__"},
{"lineNum":"  262","line":"# elif defined size_t"},
{"lineNum":"  263","line":"#  define YYSIZE_T size_t"},
{"lineNum":"  264","line":"# elif ! defined YYSIZE_T"},
{"lineNum":"  265","line":"#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */"},
{"lineNum":"  266","line":"#  define YYSIZE_T size_t"},
{"lineNum":"  267","line":"# else"},
{"lineNum":"  268","line":"#  define YYSIZE_T unsigned int"},
{"lineNum":"  269","line":"# endif"},
{"lineNum":"  270","line":"#endif"},
{"lineNum":"  271","line":""},
{"lineNum":"  272","line":"#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)"},
{"lineNum":"  273","line":""},
{"lineNum":"  274","line":"#ifndef YY_"},
{"lineNum":"  275","line":"# if defined YYENABLE_NLS && YYENABLE_NLS"},
{"lineNum":"  276","line":"#  if ENABLE_NLS"},
{"lineNum":"  277","line":"#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */"},
{"lineNum":"  278","line":"#   define YY_(Msgid) dgettext (\"bison-runtime\", Msgid)"},
{"lineNum":"  279","line":"#  endif"},
{"lineNum":"  280","line":"# endif"},
{"lineNum":"  281","line":"# ifndef YY_"},
{"lineNum":"  282","line":"#  define YY_(Msgid) Msgid"},
{"lineNum":"  283","line":"# endif"},
{"lineNum":"  284","line":"#endif"},
{"lineNum":"  285","line":""},
{"lineNum":"  286","line":"#ifndef YY_ATTRIBUTE"},
{"lineNum":"  287","line":"# if (defined __GNUC__                                               \\"},
{"lineNum":"  288","line":"      && (2 < __GNUC__ || (__GNUC__ == 2 && 96 <= __GNUC_MINOR__)))  \\"},
{"lineNum":"  289","line":"     || defined __SUNPRO_C && 0x5110 <= __SUNPRO_C"},
{"lineNum":"  290","line":"#  define YY_ATTRIBUTE(Spec) __attribute__(Spec)"},
{"lineNum":"  291","line":"# else"},
{"lineNum":"  292","line":"#  define YY_ATTRIBUTE(Spec) /* empty */"},
{"lineNum":"  293","line":"# endif"},
{"lineNum":"  294","line":"#endif"},
{"lineNum":"  295","line":""},
{"lineNum":"  296","line":"#ifndef YY_ATTRIBUTE_PURE"},
{"lineNum":"  297","line":"# define YY_ATTRIBUTE_PURE   YY_ATTRIBUTE ((__pure__))"},
{"lineNum":"  298","line":"#endif"},
{"lineNum":"  299","line":""},
{"lineNum":"  300","line":"#ifndef YY_ATTRIBUTE_UNUSED"},
{"lineNum":"  301","line":"# define YY_ATTRIBUTE_UNUSED YY_ATTRIBUTE ((__unused__))"},
{"lineNum":"  302","line":"#endif"},
{"lineNum":"  303","line":""},
{"lineNum":"  304","line":"#if !defined _Noreturn \\"},
{"lineNum":"  305","line":"     && (!defined __STDC_VERSION__ || __STDC_VERSION__ < 201112)"},
{"lineNum":"  306","line":"# if defined _MSC_VER && 1200 <= _MSC_VER"},
{"lineNum":"  307","line":"#  define _Noreturn __declspec (noreturn)"},
{"lineNum":"  308","line":"# else"},
{"lineNum":"  309","line":"#  define _Noreturn YY_ATTRIBUTE ((__noreturn__))"},
{"lineNum":"  310","line":"# endif"},
{"lineNum":"  311","line":"#endif"},
{"lineNum":"  312","line":""},
{"lineNum":"  313","line":"/* Suppress unused-variable warnings by \"using\" E.  */"},
{"lineNum":"  314","line":"#if ! defined lint || defined __GNUC__"},
{"lineNum":"  315","line":"# define YYUSE(E) ((void) (E))"},
{"lineNum":"  316","line":"#else"},
{"lineNum":"  317","line":"# define YYUSE(E) /* empty */"},
{"lineNum":"  318","line":"#endif"},
{"lineNum":"  319","line":""},
{"lineNum":"  320","line":"#if defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__"},
{"lineNum":"  321","line":"/* Suppress an incorrect diagnostic about yylval being uninitialized.  */"},
{"lineNum":"  322","line":"# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN \\"},
{"lineNum":"  323","line":"    _Pragma (\"GCC diagnostic push\") \\"},
{"lineNum":"  324","line":"    _Pragma (\"GCC diagnostic ignored \\\"-Wuninitialized\\\"\")\\"},
{"lineNum":"  325","line":"    _Pragma (\"GCC diagnostic ignored \\\"-Wmaybe-uninitialized\\\"\")"},
{"lineNum":"  326","line":"# define YY_IGNORE_MAYBE_UNINITIALIZED_END \\"},
{"lineNum":"  327","line":"    _Pragma (\"GCC diagnostic pop\")"},
{"lineNum":"  328","line":"#else"},
{"lineNum":"  329","line":"# define YY_INITIAL_VALUE(Value) Value"},
{"lineNum":"  330","line":"#endif"},
{"lineNum":"  331","line":"#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN"},
{"lineNum":"  332","line":"# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN"},
{"lineNum":"  333","line":"# define YY_IGNORE_MAYBE_UNINITIALIZED_END"},
{"lineNum":"  334","line":"#endif"},
{"lineNum":"  335","line":"#ifndef YY_INITIAL_VALUE"},
{"lineNum":"  336","line":"# define YY_INITIAL_VALUE(Value) /* Nothing. */"},
{"lineNum":"  337","line":"#endif"},
{"lineNum":"  338","line":""},
{"lineNum":"  339","line":""},
{"lineNum":"  340","line":"#if ! defined yyoverflow || YYERROR_VERBOSE"},
{"lineNum":"  341","line":""},
{"lineNum":"  342","line":"/* The parser invokes alloca or malloc; define the necessary symbols.  */"},
{"lineNum":"  343","line":""},
{"lineNum":"  344","line":"# ifdef YYSTACK_USE_ALLOCA"},
{"lineNum":"  345","line":"#  if YYSTACK_USE_ALLOCA"},
{"lineNum":"  346","line":"#   ifdef __GNUC__"},
{"lineNum":"  347","line":"#    define YYSTACK_ALLOC __builtin_alloca"},
{"lineNum":"  348","line":"#   elif defined __BUILTIN_VA_ARG_INCR"},
{"lineNum":"  349","line":"#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */"},
{"lineNum":"  350","line":"#   elif defined _AIX"},
{"lineNum":"  351","line":"#    define YYSTACK_ALLOC __alloca"},
{"lineNum":"  352","line":"#   elif defined _MSC_VER"},
{"lineNum":"  353","line":"#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */"},
{"lineNum":"  354","line":"#    define alloca _alloca"},
{"lineNum":"  355","line":"#   else"},
{"lineNum":"  356","line":"#    define YYSTACK_ALLOC alloca"},
{"lineNum":"  357","line":"#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS"},
{"lineNum":"  358","line":"#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */"},
{"lineNum":"  359","line":"      /* Use EXIT_SUCCESS as a witness for stdlib.h.  */"},
{"lineNum":"  360","line":"#     ifndef EXIT_SUCCESS"},
{"lineNum":"  361","line":"#      define EXIT_SUCCESS 0"},
{"lineNum":"  362","line":"#     endif"},
{"lineNum":"  363","line":"#    endif"},
{"lineNum":"  364","line":"#   endif"},
{"lineNum":"  365","line":"#  endif"},
{"lineNum":"  366","line":"# endif"},
{"lineNum":"  367","line":""},
{"lineNum":"  368","line":"# ifdef YYSTACK_ALLOC"},
{"lineNum":"  369","line":"   /* Pacify GCC\'s \'empty if-body\' warning.  */"},
{"lineNum":"  370","line":"#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (0)"},
{"lineNum":"  371","line":"#  ifndef YYSTACK_ALLOC_MAXIMUM"},
{"lineNum":"  372","line":"    /* The OS might guarantee only one guard page at the bottom of the stack,"},
{"lineNum":"  373","line":"       and a page size can be as small as 4096 bytes.  So we cannot safely"},
{"lineNum":"  374","line":"       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number"},
{"lineNum":"  375","line":"       to allow for a few compiler-allocated temporary stack slots.  */"},
{"lineNum":"  376","line":"#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */"},
{"lineNum":"  377","line":"#  endif"},
{"lineNum":"  378","line":"# else"},
{"lineNum":"  379","line":"#  define YYSTACK_ALLOC YYMALLOC"},
{"lineNum":"  380","line":"#  define YYSTACK_FREE YYFREE"},
{"lineNum":"  381","line":"#  ifndef YYSTACK_ALLOC_MAXIMUM"},
{"lineNum":"  382","line":"#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM"},
{"lineNum":"  383","line":"#  endif"},
{"lineNum":"  384","line":"#  if (defined __cplusplus && ! defined EXIT_SUCCESS \\"},
{"lineNum":"  385","line":"       && ! ((defined YYMALLOC || defined malloc) \\"},
{"lineNum":"  386","line":"             && (defined YYFREE || defined free)))"},
{"lineNum":"  387","line":"#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */"},
{"lineNum":"  388","line":"#   ifndef EXIT_SUCCESS"},
{"lineNum":"  389","line":"#    define EXIT_SUCCESS 0"},
{"lineNum":"  390","line":"#   endif"},
{"lineNum":"  391","line":"#  endif"},
{"lineNum":"  392","line":"#  ifndef YYMALLOC"},
{"lineNum":"  393","line":"#   define YYMALLOC malloc"},
{"lineNum":"  394","line":"#   if ! defined malloc && ! defined EXIT_SUCCESS"},
{"lineNum":"  395","line":"void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */"},
{"lineNum":"  396","line":"#   endif"},
{"lineNum":"  397","line":"#  endif"},
{"lineNum":"  398","line":"#  ifndef YYFREE"},
{"lineNum":"  399","line":"#   define YYFREE free"},
{"lineNum":"  400","line":"#   if ! defined free && ! defined EXIT_SUCCESS"},
{"lineNum":"  401","line":"void free (void *); /* INFRINGES ON USER NAME SPACE */"},
{"lineNum":"  402","line":"#   endif"},
{"lineNum":"  403","line":"#  endif"},
{"lineNum":"  404","line":"# endif"},
{"lineNum":"  405","line":"#endif /* ! defined yyoverflow || YYERROR_VERBOSE */"},
{"lineNum":"  406","line":""},
{"lineNum":"  407","line":""},
{"lineNum":"  408","line":"#if (! defined yyoverflow \\"},
{"lineNum":"  409","line":"     && (! defined __cplusplus \\"},
{"lineNum":"  410","line":"         || (defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))"},
{"lineNum":"  411","line":""},
{"lineNum":"  412","line":"/* A type that is properly aligned for any stack member.  */"},
{"lineNum":"  413","line":"union yyalloc"},
{"lineNum":"  414","line":"{"},
{"lineNum":"  415","line":"  yytype_int16 yyss_alloc;"},
{"lineNum":"  416","line":"  YYSTYPE yyvs_alloc;"},
{"lineNum":"  417","line":"};"},
{"lineNum":"  418","line":""},
{"lineNum":"  419","line":"/* The size of the maximum gap between one aligned stack and the next.  */"},
{"lineNum":"  420","line":"# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)"},
{"lineNum":"  421","line":""},
{"lineNum":"  422","line":"/* The size of an array large to enough to hold all stacks, each with"},
{"lineNum":"  423","line":"   N elements.  */"},
{"lineNum":"  424","line":"# define YYSTACK_BYTES(N) \\"},
{"lineNum":"  425","line":"     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE)) \\"},
{"lineNum":"  426","line":"      + YYSTACK_GAP_MAXIMUM)"},
{"lineNum":"  427","line":""},
{"lineNum":"  428","line":"# define YYCOPY_NEEDED 1"},
{"lineNum":"  429","line":""},
{"lineNum":"  430","line":"/* Relocate STACK from its old location to the new one.  The"},
{"lineNum":"  431","line":"   local variables YYSIZE and YYSTACKSIZE give the old and new number of"},
{"lineNum":"  432","line":"   elements in the stack, and YYPTR gives the new location of the"},
{"lineNum":"  433","line":"   stack.  Advance YYPTR to a properly aligned location for the next"},
{"lineNum":"  434","line":"   stack.  */"},
{"lineNum":"  435","line":"# define YYSTACK_RELOCATE(Stack_alloc, Stack)                           \\"},
{"lineNum":"  436","line":"    do                                                                  \\"},
{"lineNum":"  437","line":"      {                                                                 \\"},
{"lineNum":"  438","line":"        YYSIZE_T yynewbytes;                                            \\"},
{"lineNum":"  439","line":"        YYCOPY (&yyptr->Stack_alloc, Stack, yysize);                    \\"},
{"lineNum":"  440","line":"        Stack = &yyptr->Stack_alloc;                                    \\"},
{"lineNum":"  441","line":"        yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \\"},
{"lineNum":"  442","line":"        yyptr += yynewbytes / sizeof (*yyptr);                          \\"},
{"lineNum":"  443","line":"      }                                                                 \\"},
{"lineNum":"  444","line":"    while (0)"},
{"lineNum":"  445","line":""},
{"lineNum":"  446","line":"#endif"},
{"lineNum":"  447","line":""},
{"lineNum":"  448","line":"#if defined YYCOPY_NEEDED && YYCOPY_NEEDED"},
{"lineNum":"  449","line":"/* Copy COUNT objects from SRC to DST.  The source and destination do"},
{"lineNum":"  450","line":"   not overlap.  */"},
{"lineNum":"  451","line":"# ifndef YYCOPY"},
{"lineNum":"  452","line":"#  if defined __GNUC__ && 1 < __GNUC__"},
{"lineNum":"  453","line":"#   define YYCOPY(Dst, Src, Count) \\"},
{"lineNum":"  454","line":"      __builtin_memcpy (Dst, Src, (Count) * sizeof (*(Src)))"},
{"lineNum":"  455","line":"#  else"},
{"lineNum":"  456","line":"#   define YYCOPY(Dst, Src, Count)              \\"},
{"lineNum":"  457","line":"      do                                        \\"},
{"lineNum":"  458","line":"        {                                       \\"},
{"lineNum":"  459","line":"          YYSIZE_T yyi;                         \\"},
{"lineNum":"  460","line":"          for (yyi = 0; yyi < (Count); yyi++)   \\"},
{"lineNum":"  461","line":"            (Dst)[yyi] = (Src)[yyi];            \\"},
{"lineNum":"  462","line":"        }                                       \\"},
{"lineNum":"  463","line":"      while (0)"},
{"lineNum":"  464","line":"#  endif"},
{"lineNum":"  465","line":"# endif"},
{"lineNum":"  466","line":"#endif /* !YYCOPY_NEEDED */"},
{"lineNum":"  467","line":""},
{"lineNum":"  468","line":"/* YYFINAL -- State number of the termination state.  */"},
{"lineNum":"  469","line":"#define YYFINAL  5"},
{"lineNum":"  470","line":"/* YYLAST -- Last index in YYTABLE.  */"},
{"lineNum":"  471","line":"#define YYLAST   113"},
{"lineNum":"  472","line":""},
{"lineNum":"  473","line":"/* YYNTOKENS -- Number of terminals.  */"},
{"lineNum":"  474","line":"#define YYNTOKENS  50"},
{"lineNum":"  475","line":"/* YYNNTS -- Number of nonterminals.  */"},
{"lineNum":"  476","line":"#define YYNNTS  57"},
{"lineNum":"  477","line":"/* YYNRULES -- Number of rules.  */"},
{"lineNum":"  478","line":"#define YYNRULES  95"},
{"lineNum":"  479","line":"/* YYNSTATES -- Number of states.  */"},
{"lineNum":"  480","line":"#define YYNSTATES  155"},
{"lineNum":"  481","line":""},
{"lineNum":"  482","line":"/* YYTRANSLATE[YYX] -- Symbol number corresponding to YYX as returned"},
{"lineNum":"  483","line":"   by yylex, with out-of-bounds checking.  */"},
{"lineNum":"  484","line":"#define YYUNDEFTOK  2"},
{"lineNum":"  485","line":"#define YYMAXUTOK   304"},
{"lineNum":"  486","line":""},
{"lineNum":"  487","line":"#define YYTRANSLATE(YYX)                                                \\"},
{"lineNum":"  488","line":"  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)"},
{"lineNum":"  489","line":""},
{"lineNum":"  490","line":"/* YYTRANSLATE[TOKEN-NUM] -- Symbol number corresponding to TOKEN-NUM"},
{"lineNum":"  491","line":"   as returned by yylex, without out-of-bounds checking.  */"},
{"lineNum":"  492","line":"static const yytype_uint8 yytranslate[] ="},
{"lineNum":"  493","line":"{"},
{"lineNum":"  494","line":"       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,"},
{"lineNum":"  495","line":"       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,"},
{"lineNum":"  496","line":"       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,"},
{"lineNum":"  497","line":"       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,"},
{"lineNum":"  498","line":"       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,"},
{"lineNum":"  499","line":"       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,"},
{"lineNum":"  500","line":"       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,"},
{"lineNum":"  501","line":"       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,"},
{"lineNum":"  502","line":"       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,"},
{"lineNum":"  503","line":"       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,"},
{"lineNum":"  504","line":"       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,"},
{"lineNum":"  505","line":"       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,"},
{"lineNum":"  506","line":"       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,"},
{"lineNum":"  507","line":"       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,"},
{"lineNum":"  508","line":"       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,"},
{"lineNum":"  509","line":"       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,"},
{"lineNum":"  510","line":"       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,"},
{"lineNum":"  511","line":"       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,"},
{"lineNum":"  512","line":"       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,"},
{"lineNum":"  513","line":"       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,"},
{"lineNum":"  514","line":"       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,"},
{"lineNum":"  515","line":"       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,"},
{"lineNum":"  516","line":"       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,"},
{"lineNum":"  517","line":"       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,"},
{"lineNum":"  518","line":"       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,"},
{"lineNum":"  519","line":"       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,"},
{"lineNum":"  520","line":"       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,"},
{"lineNum":"  521","line":"      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,"},
{"lineNum":"  522","line":"      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,"},
{"lineNum":"  523","line":"      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,"},
{"lineNum":"  524","line":"      45,    46,    47,    48,    49"},
{"lineNum":"  525","line":"};"},
{"lineNum":"  526","line":""},
{"lineNum":"  527","line":"#if YYDEBUG"},
{"lineNum":"  528","line":"  /* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */"},
{"lineNum":"  529","line":"static const yytype_uint16 yyrline[] ="},
{"lineNum":"  530","line":"{"},
{"lineNum":"  531","line":"       0,   115,   115,   138,   141,   147,   158,   167,   206,   213,"},
{"lineNum":"  532","line":"     221,   230,   236,   245,   255,   263,   271,   280,   289,   297,"},
{"lineNum":"  533","line":"     331,   343,   351,   360,   374,   381,   384,   392,   398,   411,"},
{"lineNum":"  534","line":"     434,   437,   443,   463,   485,   488,   499,   521,   524,   529,"},
{"lineNum":"  535","line":"     534,   553,   556,   562,   578,   588,   587,   601,   607,   613,"},
{"lineNum":"  536","line":"     617,   621,   625,   629,   633,   639,   643,   648,   654,   662,"},
{"lineNum":"  537","line":"     670,   679,   689,   693,   697,   701,   705,   709,   713,   719,"},
{"lineNum":"  538","line":"     722,   728,   733,   742,   750,   759,   782,   785,   792,   795,"},
{"lineNum":"  539","line":"     801,   810,   820,   836,   836,   847,   854,   859,   865,   870,"},
{"lineNum":"  540","line":"     874,   879,   884,   890,   895,   899"},
{"lineNum":"  541","line":"};"},
{"lineNum":"  542","line":"#endif"},
{"lineNum":"  543","line":""},
{"lineNum":"  544","line":"#if YYDEBUG || YYERROR_VERBOSE || 0"},
{"lineNum":"  545","line":"/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM."},
{"lineNum":"  546","line":"   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */"},
{"lineNum":"  547","line":"static const char *const yytname[] ="},
{"lineNum":"  548","line":"{"},
{"lineNum":"  549","line":"  \"$end\", \"error\", \"$undefined\", \"T_LPAREN\", \"T_RPAREN\", \"T_MULT\","},
{"lineNum":"  550","line":"  \"T_PLUS\", \"T_COMMA\", \"T_MINUS\", \"T_DOT\", \"T_DOTDOT\", \"T_COLON\","},
{"lineNum":"  551","line":"  \"T_ASSIGN\", \"T_SCOLON\", \"T_LT\", \"T_LE\", \"T_NE\", \"T_EQ\", \"T_GT\", \"T_GE\","},
{"lineNum":"  552","line":"  \"T_LBRACK\", \"T_RBRACK\", \"T_DO\", \"T_AND\", \"T_ARRAY\", \"T_BEGIN\", \"T_BOOL\","},
{"lineNum":"  553","line":"  \"T_CHAR\", \"T_CHARCONST\", \"T_DIV\", \"T_END\", \"T_FALSE\", \"T_IDENT\", \"T_IF\","},
{"lineNum":"  554","line":"  \"T_INT\", \"T_INTCONST\", \"T_NOT\", \"T_OF\", \"T_OR\", \"T_PROC\", \"T_PROG\","},
{"lineNum":"  555","line":"  \"T_READ\", \"T_TRUE\", \"T_VAR\", \"T_WHILE\", \"T_WRITE\", \"T_UNKNOWN\", \"ST_EOF\","},
{"lineNum":"  556","line":"  \"T_THEN\", \"T_ELSE\", \"$accept\", \"N_START\", \"N_ADDOPLST\", \"N_ARRAY\","},
{"lineNum":"  557","line":"  \"N_ARRAYVAR\", \"N_ASSIGN\", \"N_BLOCK\", \"N_BOOLCONST\", \"N_COMPOUND\","},
{"lineNum":"  558","line":"  \"N_CONDITION\", \"N_CONST\", \"N_ENTIREVAR\", \"N_EXPR\", \"N_FACTOR\", \"N_IDENT\","},
{"lineNum":"  559","line":"  \"N_IDENTLST\", \"N_IDX\", \"N_IDXRANGE\", \"N_IDXVAR\", \"N_INPUTLST\","},
{"lineNum":"  560","line":"  \"N_INPUTVAR\", \"N_INTCONST\", \"N_MULTOPLST\", \"N_OUTPUT\", \"N_OUTPUTLST\","},
{"lineNum":"  561","line":"  \"N_PROCDEC\", \"N_PROCHDR\", \"N_PROCDECPART\", \"N_PROCIDENT\", \"N_PROCSTMT\","},
{"lineNum":"  562","line":"  \"N_PROG\", \"$@1\", \"N_PROGLBL\", \"N_READ\", \"N_RELOP\", \"N_SIGN\", \"N_SIMPLE\","},
{"lineNum":"  563","line":"  \"N_SIMPLEEXPR\", \"N_STMT\", \"N_STMTLST\", \"N_STMTPART\", \"N_TERM\", \"N_TYPE\","},
{"lineNum":"  564","line":"  \"N_VARDEC\", \"N_VARDECLST\", \"N_VARDECPART\", \"N_VARIABLE\", \"N_VARIDENT\","},
{"lineNum":"  565","line":"  \"N_WHILE\", \"$@2\", \"N_WRITE\", \"N_ADDOP\", \"N_ADD_OP_LOGICAL\","},
{"lineNum":"  566","line":"  \"N_ADD_OP_ARITHMETIC\", \"N_MULTOP\", \"N_MULT_OP_LOGICAL\","},
{"lineNum":"  567","line":"  \"N_MULT_OP_ARITHMETIC\", YY_NULLPTR"},
{"lineNum":"  568","line":"};"},
{"lineNum":"  569","line":"#endif"},
{"lineNum":"  570","line":""},
{"lineNum":"  571","line":"# ifdef YYPRINT"},
{"lineNum":"  572","line":"/* YYTOKNUM[NUM] -- (External) token number corresponding to the"},
{"lineNum":"  573","line":"   (internal) symbol number NUM (which must be that of a token).  */"},
{"lineNum":"  574","line":"static const yytype_uint16 yytoknum[] ="},
{"lineNum":"  575","line":"{"},
{"lineNum":"  576","line":"       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,"},
{"lineNum":"  577","line":"     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,"},
{"lineNum":"  578","line":"     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,"},
{"lineNum":"  579","line":"     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,"},
{"lineNum":"  580","line":"     295,   296,   297,   298,   299,   300,   301,   302,   303,   304"},
{"lineNum":"  581","line":"};"},
{"lineNum":"  582","line":"# endif"},
{"lineNum":"  583","line":""},
{"lineNum":"  584","line":"#define YYPACT_NINF -84"},
{"lineNum":"  585","line":""},
{"lineNum":"  586","line":"#define yypact_value_is_default(Yystate) \\"},
{"lineNum":"  587","line":"  (!!((Yystate) == (-84)))"},
{"lineNum":"  588","line":""},
{"lineNum":"  589","line":"#define YYTABLE_NINF -83"},
{"lineNum":"  590","line":""},
{"lineNum":"  591","line":"#define yytable_value_is_error(Yytable_value) \\"},
{"lineNum":"  592","line":"  0"},
{"lineNum":"  593","line":""},
{"lineNum":"  594","line":"  /* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing"},
{"lineNum":"  595","line":"     STATE-NUM.  */"},
{"lineNum":"  596","line":"static const yytype_int8 yypact[] ="},
{"lineNum":"  597","line":"{"},
{"lineNum":"  598","line":"     -24,   -84,    22,   -84,    -3,   -84,    24,   -84,    -4,     2,"},
{"lineNum":"  599","line":"      31,     6,   -84,    36,    37,   -84,    12,    42,    -4,    32,"},
{"lineNum":"  600","line":"       2,    38,     2,    48,     6,   -84,    21,   -84,   -84,    36,"},
{"lineNum":"  601","line":"      -9,    50,   -84,   -84,   -84,    11,     5,    61,     5,    70,"},
{"lineNum":"  602","line":"      54,   -84,   -84,   -84,    55,   -84,   -84,   -84,   -84,    63,"},
{"lineNum":"  603","line":"      65,   -84,   -84,   -84,   -84,    58,   -84,   -84,   -84,   -84,"},
{"lineNum":"  604","line":"     -84,   -84,     2,     5,   -84,   -84,   -84,   -84,     5,   -84,"},
{"lineNum":"  605","line":"     -84,   -84,    33,     9,   -84,   -11,    53,     4,    47,   -84,"},
{"lineNum":"  606","line":"       5,     5,    21,    52,     5,    20,   -84,    76,   -84,    21,"},
{"lineNum":"  607","line":"     -84,   -84,   -84,   -84,     5,   -84,   -84,   -84,   -84,   -84,"},
{"lineNum":"  608","line":"     -84,   -84,   -84,   -84,   -84,   -84,     5,   -84,   -84,   -84,"},
{"lineNum":"  609","line":"     -84,     5,   -84,   -84,    77,   -84,    64,   -84,    78,    62,"},
{"lineNum":"  610","line":"      63,   -84,   -84,    79,    66,   -84,    56,   -84,    39,     9,"},
{"lineNum":"  611","line":"     -84,     4,    47,    86,    21,     5,    88,   -84,   -84,    20,"},
{"lineNum":"  612","line":"      57,    21,   -84,   -84,    77,   -84,   -84,    78,   -84,   -84,"},
{"lineNum":"  613","line":"      -7,   -84,   -84,   -84,   -84"},
{"lineNum":"  614","line":"};"},
{"lineNum":"  615","line":""},
{"lineNum":"  616","line":"  /* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM."},
{"lineNum":"  617","line":"     Performed when YYTABLE does not specify something else to do.  Zero"},
{"lineNum":"  618","line":"     means the default is an error.  */"},
{"lineNum":"  619","line":"static const yytype_uint8 yydefact[] ="},
{"lineNum":"  620","line":"{"},
{"lineNum":"  621","line":"       0,    47,     0,     2,     0,     1,     0,    45,    78,     0,"},
{"lineNum":"  622","line":"       0,    41,    24,    25,     0,    46,     0,     0,    78,     0,"},
{"lineNum":"  623","line":"       0,     0,    76,     0,    41,    39,     0,    71,     8,    25,"},
{"lineNum":"  624","line":"       0,     0,    79,    40,    42,    43,    55,     0,    55,     0,"},
{"lineNum":"  625","line":"       0,    62,    68,    66,    80,    81,    44,    63,    64,    69,"},
{"lineNum":"  626","line":"       0,    17,    67,    65,    26,     0,    60,    59,    58,    74,"},
{"lineNum":"  627","line":"      73,    75,    76,    55,    56,    57,    15,    10,    55,     9,"},
{"lineNum":"  628","line":"      16,    21,     0,    34,    14,     0,    18,     3,     0,    83,"},
{"lineNum":"  629","line":"      55,    55,     0,     0,    55,    55,    77,     0,    23,     0,"},
{"lineNum":"  630","line":"      94,    93,    95,    72,    55,    91,    92,    82,    33,    20,"},
{"lineNum":"  631","line":"      49,    51,    54,    53,    50,    52,    55,    89,    90,    88,"},
{"lineNum":"  632","line":"      61,    55,    86,    87,    30,    32,     0,    36,    37,     0,"},
{"lineNum":"  633","line":"      69,    11,     7,     0,     0,    27,     0,    22,    12,    34,"},
{"lineNum":"  634","line":"      19,     3,     0,     0,     0,    55,     0,    29,    70,    55,"},
{"lineNum":"  635","line":"       0,     0,    35,     4,    30,    48,    84,    37,    85,    28,"},
{"lineNum":"  636","line":"       0,    13,    31,    38,     5"},
{"lineNum":"  637","line":"};"},
{"lineNum":"  638","line":""},
{"lineNum":"  639","line":"  /* YYPGOTO[NTERM-NUM].  */"},
{"lineNum":"  640","line":"static const yytype_int8 yypgoto[] ="},
{"lineNum":"  641","line":"{"},
{"lineNum":"  642","line":"     -84,   -84,   -38,   -84,   -84,   -84,    80,   -84,    81,   -84,"},
{"lineNum":"  643","line":"     -84,   -84,   -33,   -59,    75,    67,   -42,   -84,   -84,   -45,"},
{"lineNum":"  644","line":"     -31,   -83,   -27,   -32,   -43,   -84,   -84,    82,   -84,   -84,"},
{"lineNum":"  645","line":"     -84,   -84,   -84,   -84,   -84,   -79,   -41,    -1,   -82,   -13,"},
{"lineNum":"  646","line":"     -84,     0,   -84,    99,    51,   -84,   -74,   -84,   -84,   -84,"},
{"lineNum":"  647","line":"     -84,   -84,   -84,   -84,   -84,   -84,   -84"},
{"lineNum":"  648","line":"};"},
{"lineNum":"  649","line":""},
{"lineNum":"  650","line":"  /* YYDEFGOTO[NTERM-NUM].  */"},
{"lineNum":"  651","line":"static const yytype_int16 yydefgoto[] ="},
{"lineNum":"  652","line":"{"},
{"lineNum":"  653","line":"      -1,     2,   110,    59,    40,    41,    10,    70,    42,    43,"},
{"lineNum":"  654","line":"      71,    44,   117,    73,    13,    21,   123,   124,    45,   133,"},
{"lineNum":"  655","line":"     114,    74,    93,   118,   136,    17,    18,    19,    46,    47,"},
{"lineNum":"  656","line":"       3,     8,     4,    48,   106,    75,    60,    76,    49,    83,"},
{"lineNum":"  657","line":"      28,    77,    61,    31,    32,    11,    50,    51,    52,   116,"},
{"lineNum":"  658","line":"      53,   111,   112,   113,    94,    95,    96"},
{"lineNum":"  659","line":"};"},
{"lineNum":"  660","line":""},
{"lineNum":"  661","line":"  /* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If"},
{"lineNum":"  662","line":"     positive, shift that token.  If negative, reduce the rule whose"},
{"lineNum":"  663","line":"     number is the opposite.  If YYTABLE_NINF, syntax error.  */"},
{"lineNum":"  664","line":"static const yytype_int16 yytable[] ="},
{"lineNum":"  665","line":"{"},
{"lineNum":"  666","line":"     120,    99,   125,    72,   115,    79,   126,   128,    63,    88,"},
{"lineNum":"  667","line":"     107,    64,   108,    65,    90,    55,     1,    56,    57,    56,"},
{"lineNum":"  668","line":"      57,    97,     5,   -82,    98,    58,    64,    58,    65,     6,"},
{"lineNum":"  669","line":"      87,   -82,    91,    66,    12,   129,    67,     7,    92,     9,"},
{"lineNum":"  670","line":"      15,    68,   109,    20,    23,    16,    26,    69,   119,    30,"},
{"lineNum":"  671","line":"      22,   122,   146,    35,    36,    24,   125,    26,   115,   151,"},
{"lineNum":"  672","line":"     126,    33,    37,    62,    78,    38,    39,   100,   101,   102,"},
{"lineNum":"  673","line":"     103,   104,   105,    80,    81,    -6,    82,    84,    85,    97,"},
{"lineNum":"  674","line":"     127,    89,   121,   137,   132,   135,   134,   140,   141,   139,"},
{"lineNum":"  675","line":"     145,    98,   148,   143,   150,    29,    54,   149,    25,   152,"},
{"lineNum":"  676","line":"      27,   144,   142,   147,   153,   130,    34,   138,    14,   154,"},
{"lineNum":"  677","line":"       0,   131,     0,    86"},
{"lineNum":"  678","line":"};"},
{"lineNum":"  679","line":""},
{"lineNum":"  680","line":"static const yytype_int16 yycheck[] ="},
{"lineNum":"  681","line":"{"},
{"lineNum":"  682","line":"      82,    75,    85,    36,    78,    38,    85,    89,     3,    68,"},
{"lineNum":"  683","line":"       6,     6,     8,     8,     5,    24,    40,    26,    27,    26,"},
{"lineNum":"  684","line":"      27,    32,     0,    12,    35,    34,     6,    34,     8,    32,"},
{"lineNum":"  685","line":"      63,    20,    23,    28,    32,    94,    31,    13,    29,    43,"},
{"lineNum":"  686","line":"       9,    36,    38,     7,    32,    39,    25,    42,    81,    11,"},
{"lineNum":"  687","line":"      13,    84,   134,    32,    33,    13,   139,    25,   132,   141,"},
{"lineNum":"  688","line":"     139,    13,    41,    13,     3,    44,    45,    14,    15,    16,"},
{"lineNum":"  689","line":"      17,    18,    19,     3,    20,    20,    13,    12,    20,    32,"},
{"lineNum":"  690","line":"       4,    48,    30,    21,     7,     7,    22,    21,    49,    10,"},
{"lineNum":"  691","line":"       4,    35,     4,   131,    37,    20,    29,   139,    18,   144,"},
{"lineNum":"  692","line":"      19,   132,   129,   135,   147,   106,    24,   120,     9,   150,"},
{"lineNum":"  693","line":"      -1,   111,    -1,    62"},
{"lineNum":"  694","line":"};"},
{"lineNum":"  695","line":""},
{"lineNum":"  696","line":"  /* YYSTOS[STATE-NUM] -- The (internal number of the) accessing"},
{"lineNum":"  697","line":"     symbol of state STATE-NUM.  */"},
{"lineNum":"  698","line":"static const yytype_uint8 yystos[] ="},
{"lineNum":"  699","line":"{"},
{"lineNum":"  700","line":"       0,    40,    51,    80,    82,     0,    32,    13,    81,    43,"},
{"lineNum":"  701","line":"      56,    95,    32,    64,    93,     9,    39,    75,    76,    77,"},
{"lineNum":"  702","line":"       7,    65,    13,    32,    13,    56,    25,    58,    90,    64,"},
{"lineNum":"  703","line":"      11,    93,    94,    13,    77,    32,    33,    41,    44,    45,"},
{"lineNum":"  704","line":"      54,    55,    58,    59,    61,    68,    78,    79,    83,    88,"},
{"lineNum":"  705","line":"      96,    97,    98,   100,    65,    24,    26,    27,    34,    53,"},
{"lineNum":"  706","line":"      86,    92,    13,     3,     6,     8,    28,    31,    36,    42,"},
{"lineNum":"  707","line":"      57,    60,    62,    63,    71,    85,    87,    91,     3,    62,"},
{"lineNum":"  708","line":"       3,    20,    13,    89,    12,    20,    94,    62,    63,    48,"},
{"lineNum":"  709","line":"       5,    23,    29,    72,   104,   105,   106,    32,    35,    96,"},
{"lineNum":"  710","line":"      14,    15,    16,    17,    18,    19,    84,     6,     8,    38,"},
{"lineNum":"  711","line":"      52,   101,   102,   103,    70,    96,    99,    62,    73,    62,"},
{"lineNum":"  712","line":"      88,    30,    62,    66,    67,    71,    85,     4,    88,    63,"},
{"lineNum":"  713","line":"      87,    91,     7,    69,    22,     7,    74,    21,    89,    10,"},
{"lineNum":"  714","line":"      21,    49,    72,    52,    70,     4,    88,    73,     4,    66,"},
{"lineNum":"  715","line":"      37,    88,    69,    74,    86"},
{"lineNum":"  716","line":"};"},
{"lineNum":"  717","line":""},
{"lineNum":"  718","line":"  /* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */"},
{"lineNum":"  719","line":"static const yytype_uint8 yyr1[] ="},
{"lineNum":"  720","line":"{"},
{"lineNum":"  721","line":"       0,    50,    51,    52,    52,    53,    54,    55,    56,    57,"},
{"lineNum":"  722","line":"      57,    58,    59,    59,    60,    60,    60,    61,    62,    62,"},
{"lineNum":"  723","line":"      63,    63,    63,    63,    64,    65,    65,    66,    67,    68,"},
{"lineNum":"  724","line":"      69,    69,    70,    71,    72,    72,    73,    74,    74,    75,"},
{"lineNum":"  725","line":"      76,    77,    77,    78,    79,    81,    80,    82,    83,    84,"},
{"lineNum":"  726","line":"      84,    84,    84,    84,    84,    85,    85,    85,    86,    86,"},
{"lineNum":"  727","line":"      86,    87,    88,    88,    88,    88,    88,    88,    88,    89,"},
{"lineNum":"  728","line":"      89,    90,    91,    92,    92,    93,    94,    94,    95,    95,"},
{"lineNum":"  729","line":"      96,    96,    97,    99,    98,   100,   101,   101,   102,   103,"},
{"lineNum":"  730","line":"     103,   104,   104,   105,   106,   106"},
{"lineNum":"  731","line":"};"},
{"lineNum":"  732","line":""},
{"lineNum":"  733","line":"  /* YYR2[YYN] -- Number of symbols on the right hand side of rule YYN.  */"},
{"lineNum":"  734","line":"static const yytype_uint8 yyr2[] ="},
{"lineNum":"  735","line":"{"},
{"lineNum":"  736","line":"       0,     2,     1,     0,     3,     6,     1,     3,     3,     1,"},
{"lineNum":"  737","line":"       1,     4,     4,     6,     1,     1,     1,     1,     1,     3,"},
{"lineNum":"  738","line":"       2,     1,     3,     2,     1,     0,     3,     1,     3,     4,"},
{"lineNum":"  739","line":"       0,     3,     1,     2,     0,     3,     1,     0,     3,     2,"},
{"lineNum":"  740","line":"       3,     0,     3,     1,     1,     0,     6,     1,     5,     1,"},
{"lineNum":"  741","line":"       1,     1,     1,     1,     1,     0,     1,     1,     1,     1,"},
{"lineNum":"  742","line":"       1,     2,     1,     1,     1,     1,     1,     1,     1,     0,"},
{"lineNum":"  743","line":"       3,     1,     2,     1,     1,     4,     0,     3,     0,     4,"},
{"lineNum":"  744","line":"       1,     1,     1,     0,     5,     5,     1,     1,     1,     1,"},
{"lineNum":"  745","line":"       1,     1,     1,     1,     1,     1"},
{"lineNum":"  746","line":"};"},
{"lineNum":"  747","line":""},
{"lineNum":"  748","line":""},
{"lineNum":"  749","line":"#define yyerrok         (yyerrstatus = 0)"},
{"lineNum":"  750","line":"#define yyclearin       (yychar = YYEMPTY)"},
{"lineNum":"  751","line":"#define YYEMPTY         (-2)"},
{"lineNum":"  752","line":"#define YYEOF           0"},
{"lineNum":"  753","line":""},
{"lineNum":"  754","line":"#define YYACCEPT        goto yyacceptlab"},
{"lineNum":"  755","line":"#define YYABORT         goto yyabortlab"},
{"lineNum":"  756","line":"#define YYERROR         goto yyerrorlab"},
{"lineNum":"  757","line":""},
{"lineNum":"  758","line":""},
{"lineNum":"  759","line":"#define YYRECOVERING()  (!!yyerrstatus)"},
{"lineNum":"  760","line":""},
{"lineNum":"  761","line":"#define YYBACKUP(Token, Value)                                  \\"},
{"lineNum":"  762","line":"do                                                              \\"},
{"lineNum":"  763","line":"  if (yychar == YYEMPTY)                                        \\"},
{"lineNum":"  764","line":"    {                                                           \\"},
{"lineNum":"  765","line":"      yychar = (Token);                                         \\"},
{"lineNum":"  766","line":"      yylval = (Value);                                         \\"},
{"lineNum":"  767","line":"      YYPOPSTACK (yylen);                                       \\"},
{"lineNum":"  768","line":"      yystate = *yyssp;                                         \\"},
{"lineNum":"  769","line":"      goto yybackup;                                            \\"},
{"lineNum":"  770","line":"    }                                                           \\"},
{"lineNum":"  771","line":"  else                                                          \\"},
{"lineNum":"  772","line":"    {                                                           \\"},
{"lineNum":"  773","line":"      yyerror (YY_(\"syntax error: cannot back up\")); \\"},
{"lineNum":"  774","line":"      YYERROR;                                                  \\"},
{"lineNum":"  775","line":"    }                                                           \\"},
{"lineNum":"  776","line":"while (0)"},
{"lineNum":"  777","line":""},
{"lineNum":"  778","line":"/* Error token number */"},
{"lineNum":"  779","line":"#define YYTERROR        1"},
{"lineNum":"  780","line":"#define YYERRCODE       256"},
{"lineNum":"  781","line":""},
{"lineNum":"  782","line":""},
{"lineNum":"  783","line":""},
{"lineNum":"  784","line":"/* Enable debugging if requested.  */"},
{"lineNum":"  785","line":"#if YYDEBUG"},
{"lineNum":"  786","line":""},
{"lineNum":"  787","line":"# ifndef YYFPRINTF"},
{"lineNum":"  788","line":"#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */"},
{"lineNum":"  789","line":"#  define YYFPRINTF fprintf"},
{"lineNum":"  790","line":"# endif"},
{"lineNum":"  791","line":""},
{"lineNum":"  792","line":"# define YYDPRINTF(Args)                        \\"},
{"lineNum":"  793","line":"do {                                            \\"},
{"lineNum":"  794","line":"  if (yydebug)                                  \\"},
{"lineNum":"  795","line":"    YYFPRINTF Args;                             \\"},
{"lineNum":"  796","line":"} while (0)"},
{"lineNum":"  797","line":""},
{"lineNum":"  798","line":"/* This macro is provided for backward compatibility. */"},
{"lineNum":"  799","line":"#ifndef YY_LOCATION_PRINT"},
{"lineNum":"  800","line":"# define YY_LOCATION_PRINT(File, Loc) ((void) 0)"},
{"lineNum":"  801","line":"#endif"},
{"lineNum":"  802","line":""},
{"lineNum":"  803","line":""},
{"lineNum":"  804","line":"# define YY_SYMBOL_PRINT(Title, Type, Value, Location)                    \\"},
{"lineNum":"  805","line":"do {                                                                      \\"},
{"lineNum":"  806","line":"  if (yydebug)                                                            \\"},
{"lineNum":"  807","line":"    {                                                                     \\"},
{"lineNum":"  808","line":"      YYFPRINTF (stderr, \"%s \", Title);                                   \\"},
{"lineNum":"  809","line":"      yy_symbol_print (stderr,                                            \\"},
{"lineNum":"  810","line":"                  Type, Value); \\"},
{"lineNum":"  811","line":"      YYFPRINTF (stderr, \"\\n\");                                           \\"},
{"lineNum":"  812","line":"    }                                                                     \\"},
{"lineNum":"  813","line":"} while (0)"},
{"lineNum":"  814","line":""},
{"lineNum":"  815","line":""},
{"lineNum":"  816","line":"/*----------------------------------------."},
{"lineNum":"  817","line":"| Print this symbol\'s value on YYOUTPUT.  |"},
{"lineNum":"  818","line":"`----------------------------------------*/"},
{"lineNum":"  819","line":""},
{"lineNum":"  820","line":"static void"},
{"lineNum":"  821","line":"yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)"},
{"lineNum":"  822","line":"{"},
{"lineNum":"  823","line":"  FILE *yyo = yyoutput;"},
{"lineNum":"  824","line":"  YYUSE (yyo);"},
{"lineNum":"  825","line":"  if (!yyvaluep)"},
{"lineNum":"  826","line":"    return;"},
{"lineNum":"  827","line":"# ifdef YYPRINT"},
{"lineNum":"  828","line":"  if (yytype < YYNTOKENS)"},
{"lineNum":"  829","line":"    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);"},
{"lineNum":"  830","line":"# endif"},
{"lineNum":"  831","line":"  YYUSE (yytype);"},
{"lineNum":"  832","line":"}"},
{"lineNum":"  833","line":""},
{"lineNum":"  834","line":""},
{"lineNum":"  835","line":"/*--------------------------------."},
{"lineNum":"  836","line":"| Print this symbol on YYOUTPUT.  |"},
{"lineNum":"  837","line":"`--------------------------------*/"},
{"lineNum":"  838","line":""},
{"lineNum":"  839","line":"static void"},
{"lineNum":"  840","line":"yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)"},
{"lineNum":"  841","line":"{"},
{"lineNum":"  842","line":"  YYFPRINTF (yyoutput, \"%s %s (\","},
{"lineNum":"  843","line":"             yytype < YYNTOKENS ? \"token\" : \"nterm\", yytname[yytype]);"},
{"lineNum":"  844","line":""},
{"lineNum":"  845","line":"  yy_symbol_value_print (yyoutput, yytype, yyvaluep);"},
{"lineNum":"  846","line":"  YYFPRINTF (yyoutput, \")\");"},
{"lineNum":"  847","line":"}"},
{"lineNum":"  848","line":""},
{"lineNum":"  849","line":"/*------------------------------------------------------------------."},
{"lineNum":"  850","line":"| yy_stack_print -- Print the state stack from its BOTTOM up to its |"},
{"lineNum":"  851","line":"| TOP (included).                                                   |"},
{"lineNum":"  852","line":"`------------------------------------------------------------------*/"},
{"lineNum":"  853","line":""},
{"lineNum":"  854","line":"static void"},
{"lineNum":"  855","line":"yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)"},
{"lineNum":"  856","line":"{"},
{"lineNum":"  857","line":"  YYFPRINTF (stderr, \"Stack now\");"},
{"lineNum":"  858","line":"  for (; yybottom <= yytop; yybottom++)"},
{"lineNum":"  859","line":"    {"},
{"lineNum":"  860","line":"      int yybot = *yybottom;"},
{"lineNum":"  861","line":"      YYFPRINTF (stderr, \" %d\", yybot);"},
{"lineNum":"  862","line":"    }"},
{"lineNum":"  863","line":"  YYFPRINTF (stderr, \"\\n\");"},
{"lineNum":"  864","line":"}"},
{"lineNum":"  865","line":""},
{"lineNum":"  866","line":"# define YY_STACK_PRINT(Bottom, Top)                            \\"},
{"lineNum":"  867","line":"do {                                                            \\"},
{"lineNum":"  868","line":"  if (yydebug)                                                  \\"},
{"lineNum":"  869","line":"    yy_stack_print ((Bottom), (Top));                           \\"},
{"lineNum":"  870","line":"} while (0)"},
{"lineNum":"  871","line":""},
{"lineNum":"  872","line":""},
{"lineNum":"  873","line":"/*------------------------------------------------."},
{"lineNum":"  874","line":"| Report that the YYRULE is going to be reduced.  |"},
{"lineNum":"  875","line":"`------------------------------------------------*/"},
{"lineNum":"  876","line":""},
{"lineNum":"  877","line":"static void"},
{"lineNum":"  878","line":"yy_reduce_print (yytype_int16 *yyssp, YYSTYPE *yyvsp, int yyrule)"},
{"lineNum":"  879","line":"{"},
{"lineNum":"  880","line":"  unsigned long int yylno = yyrline[yyrule];"},
{"lineNum":"  881","line":"  int yynrhs = yyr2[yyrule];"},
{"lineNum":"  882","line":"  int yyi;"},
{"lineNum":"  883","line":"  YYFPRINTF (stderr, \"Reducing stack by rule %d (line %lu):\\n\","},
{"lineNum":"  884","line":"             yyrule - 1, yylno);"},
{"lineNum":"  885","line":"  /* The symbols being reduced.  */"},
{"lineNum":"  886","line":"  for (yyi = 0; yyi < yynrhs; yyi++)"},
{"lineNum":"  887","line":"    {"},
{"lineNum":"  888","line":"      YYFPRINTF (stderr, \"   $%d = \", yyi + 1);"},
{"lineNum":"  889","line":"      yy_symbol_print (stderr,"},
{"lineNum":"  890","line":"                       yystos[yyssp[yyi + 1 - yynrhs]],"},
{"lineNum":"  891","line":"                       &(yyvsp[(yyi + 1) - (yynrhs)])"},
{"lineNum":"  892","line":"                                              );"},
{"lineNum":"  893","line":"      YYFPRINTF (stderr, \"\\n\");"},
{"lineNum":"  894","line":"    }"},
{"lineNum":"  895","line":"}"},
{"lineNum":"  896","line":""},
{"lineNum":"  897","line":"# define YY_REDUCE_PRINT(Rule)          \\"},
{"lineNum":"  898","line":"do {                                    \\"},
{"lineNum":"  899","line":"  if (yydebug)                          \\"},
{"lineNum":"  900","line":"    yy_reduce_print (yyssp, yyvsp, Rule); \\"},
{"lineNum":"  901","line":"} while (0)"},
{"lineNum":"  902","line":""},
{"lineNum":"  903","line":"/* Nonzero means print parse trace.  It is left uninitialized so that"},
{"lineNum":"  904","line":"   multiple parsers can coexist.  */"},
{"lineNum":"  905","line":"int yydebug;"},
{"lineNum":"  906","line":"#else /* !YYDEBUG */"},
{"lineNum":"  907","line":"# define YYDPRINTF(Args)"},
{"lineNum":"  908","line":"# define YY_SYMBOL_PRINT(Title, Type, Value, Location)"},
{"lineNum":"  909","line":"# define YY_STACK_PRINT(Bottom, Top)"},
{"lineNum":"  910","line":"# define YY_REDUCE_PRINT(Rule)"},
{"lineNum":"  911","line":"#endif /* !YYDEBUG */"},
{"lineNum":"  912","line":""},
{"lineNum":"  913","line":""},
{"lineNum":"  914","line":"/* YYINITDEPTH -- initial size of the parser\'s stacks.  */"},
{"lineNum":"  915","line":"#ifndef YYINITDEPTH"},
{"lineNum":"  916","line":"# define YYINITDEPTH 200"},
{"lineNum":"  917","line":"#endif"},
{"lineNum":"  918","line":""},
{"lineNum":"  919","line":"/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only"},
{"lineNum":"  920","line":"   if the built-in stack extension method is used)."},
{"lineNum":"  921","line":""},
{"lineNum":"  922","line":"   Do not make this value too large; the results are undefined if"},
{"lineNum":"  923","line":"   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)"},
{"lineNum":"  924","line":"   evaluated with infinite-precision integer arithmetic.  */"},
{"lineNum":"  925","line":""},
{"lineNum":"  926","line":"#ifndef YYMAXDEPTH"},
{"lineNum":"  927","line":"# define YYMAXDEPTH 10000"},
{"lineNum":"  928","line":"#endif"},
{"lineNum":"  929","line":""},
{"lineNum":"  930","line":""},
{"lineNum":"  931","line":"#if YYERROR_VERBOSE"},
{"lineNum":"  932","line":""},
{"lineNum":"  933","line":"# ifndef yystrlen"},
{"lineNum":"  934","line":"#  if defined __GLIBC__ && defined _STRING_H"},
{"lineNum":"  935","line":"#   define yystrlen strlen"},
{"lineNum":"  936","line":"#  else"},
{"lineNum":"  937","line":"/* Return the length of YYSTR.  */"},
{"lineNum":"  938","line":"static YYSIZE_T"},
{"lineNum":"  939","line":"yystrlen (const char *yystr)"},
{"lineNum":"  940","line":"{"},
{"lineNum":"  941","line":"  YYSIZE_T yylen;"},
{"lineNum":"  942","line":"  for (yylen = 0; yystr[yylen]; yylen++)"},
{"lineNum":"  943","line":"    continue;"},
{"lineNum":"  944","line":"  return yylen;"},
{"lineNum":"  945","line":"}"},
{"lineNum":"  946","line":"#  endif"},
{"lineNum":"  947","line":"# endif"},
{"lineNum":"  948","line":""},
{"lineNum":"  949","line":"# ifndef yystpcpy"},
{"lineNum":"  950","line":"#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE"},
{"lineNum":"  951","line":"#   define yystpcpy stpcpy"},
{"lineNum":"  952","line":"#  else"},
{"lineNum":"  953","line":"/* Copy YYSRC to YYDEST, returning the address of the terminating \'\\0\' in"},
{"lineNum":"  954","line":"   YYDEST.  */"},
{"lineNum":"  955","line":"static char *"},
{"lineNum":"  956","line":"yystpcpy (char *yydest, const char *yysrc)"},
{"lineNum":"  957","line":"{"},
{"lineNum":"  958","line":"  char *yyd = yydest;"},
{"lineNum":"  959","line":"  const char *yys = yysrc;"},
{"lineNum":"  960","line":""},
{"lineNum":"  961","line":"  while ((*yyd++ = *yys++) != \'\\0\')"},
{"lineNum":"  962","line":"    continue;"},
{"lineNum":"  963","line":""},
{"lineNum":"  964","line":"  return yyd - 1;"},
{"lineNum":"  965","line":"}"},
{"lineNum":"  966","line":"#  endif"},
{"lineNum":"  967","line":"# endif"},
{"lineNum":"  968","line":""},
{"lineNum":"  969","line":"# ifndef yytnamerr"},
{"lineNum":"  970","line":"/* Copy to YYRES the contents of YYSTR after stripping away unnecessary"},
{"lineNum":"  971","line":"   quotes and backslashes, so that it\'s suitable for yyerror.  The"},
{"lineNum":"  972","line":"   heuristic is that double-quoting is unnecessary unless the string"},
{"lineNum":"  973","line":"   contains an apostrophe, a comma, or backslash (other than"},
{"lineNum":"  974","line":"   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is"},
{"lineNum":"  975","line":"   null, do not copy; instead, return the length of what the result"},
{"lineNum":"  976","line":"   would have been.  */"},
{"lineNum":"  977","line":"static YYSIZE_T"},
{"lineNum":"  978","line":"yytnamerr (char *yyres, const char *yystr)"},
{"lineNum":"  979","line":"{"},
{"lineNum":"  980","line":"  if (*yystr == \'\"\')"},
{"lineNum":"  981","line":"    {"},
{"lineNum":"  982","line":"      YYSIZE_T yyn = 0;"},
{"lineNum":"  983","line":"      char const *yyp = yystr;"},
{"lineNum":"  984","line":""},
{"lineNum":"  985","line":"      for (;;)"},
{"lineNum":"  986","line":"        switch (*++yyp)"},
{"lineNum":"  987","line":"          {"},
{"lineNum":"  988","line":"          case \'\\\'\':"},
{"lineNum":"  989","line":"          case \',\':"},
{"lineNum":"  990","line":"            goto do_not_strip_quotes;"},
{"lineNum":"  991","line":""},
{"lineNum":"  992","line":"          case \'\\\\\':"},
{"lineNum":"  993","line":"            if (*++yyp != \'\\\\\')"},
{"lineNum":"  994","line":"              goto do_not_strip_quotes;"},
{"lineNum":"  995","line":"            /* Fall through.  */"},
{"lineNum":"  996","line":"          default:"},
{"lineNum":"  997","line":"            if (yyres)"},
{"lineNum":"  998","line":"              yyres[yyn] = *yyp;"},
{"lineNum":"  999","line":"            yyn++;"},
{"lineNum":" 1000","line":"            break;"},
{"lineNum":" 1001","line":""},
{"lineNum":" 1002","line":"          case \'\"\':"},
{"lineNum":" 1003","line":"            if (yyres)"},
{"lineNum":" 1004","line":"              yyres[yyn] = \'\\0\';"},
{"lineNum":" 1005","line":"            return yyn;"},
{"lineNum":" 1006","line":"          }"},
{"lineNum":" 1007","line":"    do_not_strip_quotes: ;"},
{"lineNum":" 1008","line":"    }"},
{"lineNum":" 1009","line":""},
{"lineNum":" 1010","line":"  if (! yyres)"},
{"lineNum":" 1011","line":"    return yystrlen (yystr);"},
{"lineNum":" 1012","line":""},
{"lineNum":" 1013","line":"  return yystpcpy (yyres, yystr) - yyres;"},
{"lineNum":" 1014","line":"}"},
{"lineNum":" 1015","line":"# endif"},
{"lineNum":" 1016","line":""},
{"lineNum":" 1017","line":"/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message"},
{"lineNum":" 1018","line":"   about the unexpected token YYTOKEN for the state stack whose top is"},
{"lineNum":" 1019","line":"   YYSSP."},
{"lineNum":" 1020","line":""},
{"lineNum":" 1021","line":"   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is"},
{"lineNum":" 1022","line":"   not large enough to hold the message.  In that case, also set"},
{"lineNum":" 1023","line":"   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the"},
{"lineNum":" 1024","line":"   required number of bytes is too large to store.  */"},
{"lineNum":" 1025","line":"static int"},
{"lineNum":" 1026","line":"yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,"},
{"lineNum":" 1027","line":"                yytype_int16 *yyssp, int yytoken)"},
{"lineNum":" 1028","line":"{"},
{"lineNum":" 1029","line":"  YYSIZE_T yysize0 = yytnamerr (YY_NULLPTR, yytname[yytoken]);"},
{"lineNum":" 1030","line":"  YYSIZE_T yysize = yysize0;"},
{"lineNum":" 1031","line":"  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };"},
{"lineNum":" 1032","line":"  /* Internationalized format string. */"},
{"lineNum":" 1033","line":"  const char *yyformat = YY_NULLPTR;"},
{"lineNum":" 1034","line":"  /* Arguments of yyformat. */"},
{"lineNum":" 1035","line":"  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];"},
{"lineNum":" 1036","line":"  /* Number of reported tokens (one for the \"unexpected\", one per"},
{"lineNum":" 1037","line":"     \"expected\"). */"},
{"lineNum":" 1038","line":"  int yycount = 0;"},
{"lineNum":" 1039","line":""},
{"lineNum":" 1040","line":"  /* There are many possibilities here to consider:"},
{"lineNum":" 1041","line":"     - If this state is a consistent state with a default action, then"},
{"lineNum":" 1042","line":"       the only way this function was invoked is if the default action"},
{"lineNum":" 1043","line":"       is an error action.  In that case, don\'t check for expected"},
{"lineNum":" 1044","line":"       tokens because there are none."},
{"lineNum":" 1045","line":"     - The only way there can be no lookahead present (in yychar) is if"},
{"lineNum":" 1046","line":"       this state is a consistent state with a default action.  Thus,"},
{"lineNum":" 1047","line":"       detecting the absence of a lookahead is sufficient to determine"},
{"lineNum":" 1048","line":"       that there is no unexpected or expected token to report.  In that"},
{"lineNum":" 1049","line":"       case, just report a simple \"syntax error\"."},
{"lineNum":" 1050","line":"     - Don\'t assume there isn\'t a lookahead just because this state is a"},
{"lineNum":" 1051","line":"       consistent state with a default action.  There might have been a"},
{"lineNum":" 1052","line":"       previous inconsistent state, consistent state with a non-default"},
{"lineNum":" 1053","line":"       action, or user semantic action that manipulated yychar."},
{"lineNum":" 1054","line":"     - Of course, the expected token list depends on states to have"},
{"lineNum":" 1055","line":"       correct lookahead information, and it depends on the parser not"},
{"lineNum":" 1056","line":"       to perform extra reductions after fetching a lookahead from the"},
{"lineNum":" 1057","line":"       scanner and before detecting a syntax error.  Thus, state merging"},
{"lineNum":" 1058","line":"       (from LALR or IELR) and default reductions corrupt the expected"},
{"lineNum":" 1059","line":"       token list.  However, the list is correct for canonical LR with"},
{"lineNum":" 1060","line":"       one exception: it will still contain any token that will not be"},
{"lineNum":" 1061","line":"       accepted due to an error action in a later state."},
{"lineNum":" 1062","line":"  */"},
{"lineNum":" 1063","line":"  if (yytoken != YYEMPTY)"},
{"lineNum":" 1064","line":"    {"},
{"lineNum":" 1065","line":"      int yyn = yypact[*yyssp];"},
{"lineNum":" 1066","line":"      yyarg[yycount++] = yytname[yytoken];"},
{"lineNum":" 1067","line":"      if (!yypact_value_is_default (yyn))"},
{"lineNum":" 1068","line":"        {"},
{"lineNum":" 1069","line":"          /* Start YYX at -YYN if negative to avoid negative indexes in"},
{"lineNum":" 1070","line":"             YYCHECK.  In other words, skip the first -YYN actions for"},
{"lineNum":" 1071","line":"             this state because they are default actions.  */"},
{"lineNum":" 1072","line":"          int yyxbegin = yyn < 0 ? -yyn : 0;"},
{"lineNum":" 1073","line":"          /* Stay within bounds of both yycheck and yytname.  */"},
{"lineNum":" 1074","line":"          int yychecklim = YYLAST - yyn + 1;"},
{"lineNum":" 1075","line":"          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;"},
{"lineNum":" 1076","line":"          int yyx;"},
{"lineNum":" 1077","line":""},
{"lineNum":" 1078","line":"          for (yyx = yyxbegin; yyx < yyxend; ++yyx)"},
{"lineNum":" 1079","line":"            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR"},
{"lineNum":" 1080","line":"                && !yytable_value_is_error (yytable[yyx + yyn]))"},
{"lineNum":" 1081","line":"              {"},
{"lineNum":" 1082","line":"                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)"},
{"lineNum":" 1083","line":"                  {"},
{"lineNum":" 1084","line":"                    yycount = 1;"},
{"lineNum":" 1085","line":"                    yysize = yysize0;"},
{"lineNum":" 1086","line":"                    break;"},
{"lineNum":" 1087","line":"                  }"},
{"lineNum":" 1088","line":"                yyarg[yycount++] = yytname[yyx];"},
{"lineNum":" 1089","line":"                {"},
{"lineNum":" 1090","line":"                  YYSIZE_T yysize1 = yysize + yytnamerr (YY_NULLPTR, yytname[yyx]);"},
{"lineNum":" 1091","line":"                  if (! (yysize <= yysize1"},
{"lineNum":" 1092","line":"                         && yysize1 <= YYSTACK_ALLOC_MAXIMUM))"},
{"lineNum":" 1093","line":"                    return 2;"},
{"lineNum":" 1094","line":"                  yysize = yysize1;"},
{"lineNum":" 1095","line":"                }"},
{"lineNum":" 1096","line":"              }"},
{"lineNum":" 1097","line":"        }"},
{"lineNum":" 1098","line":"    }"},
{"lineNum":" 1099","line":""},
{"lineNum":" 1100","line":"  switch (yycount)"},
{"lineNum":" 1101","line":"    {"},
{"lineNum":" 1102","line":"# define YYCASE_(N, S)                      \\"},
{"lineNum":" 1103","line":"      case N:                               \\"},
{"lineNum":" 1104","line":"        yyformat = S;                       \\"},
{"lineNum":" 1105","line":"      break"},
{"lineNum":" 1106","line":"      YYCASE_(0, YY_(\"syntax error\"));"},
{"lineNum":" 1107","line":"      YYCASE_(1, YY_(\"syntax error, unexpected %s\"));"},
{"lineNum":" 1108","line":"      YYCASE_(2, YY_(\"syntax error, unexpected %s, expecting %s\"));"},
{"lineNum":" 1109","line":"      YYCASE_(3, YY_(\"syntax error, unexpected %s, expecting %s or %s\"));"},
{"lineNum":" 1110","line":"      YYCASE_(4, YY_(\"syntax error, unexpected %s, expecting %s or %s or %s\"));"},
{"lineNum":" 1111","line":"      YYCASE_(5, YY_(\"syntax error, unexpected %s, expecting %s or %s or %s or %s\"));"},
{"lineNum":" 1112","line":"# undef YYCASE_"},
{"lineNum":" 1113","line":"    }"},
{"lineNum":" 1114","line":""},
{"lineNum":" 1115","line":"  {"},
{"lineNum":" 1116","line":"    YYSIZE_T yysize1 = yysize + yystrlen (yyformat);"},
{"lineNum":" 1117","line":"    if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))"},
{"lineNum":" 1118","line":"      return 2;"},
{"lineNum":" 1119","line":"    yysize = yysize1;"},
{"lineNum":" 1120","line":"  }"},
{"lineNum":" 1121","line":""},
{"lineNum":" 1122","line":"  if (*yymsg_alloc < yysize)"},
{"lineNum":" 1123","line":"    {"},
{"lineNum":" 1124","line":"      *yymsg_alloc = 2 * yysize;"},
{"lineNum":" 1125","line":"      if (! (yysize <= *yymsg_alloc"},
{"lineNum":" 1126","line":"             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))"},
{"lineNum":" 1127","line":"        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;"},
{"lineNum":" 1128","line":"      return 1;"},
{"lineNum":" 1129","line":"    }"},
{"lineNum":" 1130","line":""},
{"lineNum":" 1131","line":"  /* Avoid sprintf, as that infringes on the user\'s name space."},
{"lineNum":" 1132","line":"     Don\'t have undefined behavior even if the translation"},
{"lineNum":" 1133","line":"     produced a string with the wrong number of \"%s\"s.  */"},
{"lineNum":" 1134","line":"  {"},
{"lineNum":" 1135","line":"    char *yyp = *yymsg;"},
{"lineNum":" 1136","line":"    int yyi = 0;"},
{"lineNum":" 1137","line":"    while ((*yyp = *yyformat) != \'\\0\')"},
{"lineNum":" 1138","line":"      if (*yyp == \'%\' && yyformat[1] == \'s\' && yyi < yycount)"},
{"lineNum":" 1139","line":"        {"},
{"lineNum":" 1140","line":"          yyp += yytnamerr (yyp, yyarg[yyi++]);"},
{"lineNum":" 1141","line":"          yyformat += 2;"},
{"lineNum":" 1142","line":"        }"},
{"lineNum":" 1143","line":"      else"},
{"lineNum":" 1144","line":"        {"},
{"lineNum":" 1145","line":"          yyp++;"},
{"lineNum":" 1146","line":"          yyformat++;"},
{"lineNum":" 1147","line":"        }"},
{"lineNum":" 1148","line":"  }"},
{"lineNum":" 1149","line":"  return 0;"},
{"lineNum":" 1150","line":"}"},
{"lineNum":" 1151","line":"#endif /* YYERROR_VERBOSE */"},
{"lineNum":" 1152","line":""},
{"lineNum":" 1153","line":"/*-----------------------------------------------."},
{"lineNum":" 1154","line":"| Release the memory associated to this symbol.  |"},
{"lineNum":" 1155","line":"`-----------------------------------------------*/"},
{"lineNum":" 1156","line":""},
{"lineNum":" 1157","line":"static void"},
{"lineNum":" 1158","line":"yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep)"},
{"lineNum":" 1159","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1160","line":"  YYUSE (yyvaluep);"},
{"lineNum":" 1161","line":"  if (!yymsg)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1162","line":"    yymsg = \"Deleting\";","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1163","line":"  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);"},
{"lineNum":" 1164","line":""},
{"lineNum":" 1165","line":"  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN"},
{"lineNum":" 1166","line":"  YYUSE (yytype);"},
{"lineNum":" 1167","line":"  YY_IGNORE_MAYBE_UNINITIALIZED_END"},
{"lineNum":" 1168","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1169","line":""},
{"lineNum":" 1170","line":""},
{"lineNum":" 1171","line":""},
{"lineNum":" 1172","line":""},
{"lineNum":" 1173","line":"/* The lookahead symbol.  */"},
{"lineNum":" 1174","line":"int yychar;"},
{"lineNum":" 1175","line":""},
{"lineNum":" 1176","line":"/* The semantic value of the lookahead symbol.  */"},
{"lineNum":" 1177","line":"YYSTYPE yylval;"},
{"lineNum":" 1178","line":"/* Number of syntax errors so far.  */"},
{"lineNum":" 1179","line":"int yynerrs;"},
{"lineNum":" 1180","line":""},
{"lineNum":" 1181","line":""},
{"lineNum":" 1182","line":"/*----------."},
{"lineNum":" 1183","line":"| yyparse.  |"},
{"lineNum":" 1184","line":"`----------*/"},
{"lineNum":" 1185","line":""},
{"lineNum":" 1186","line":"int"},
{"lineNum":" 1187","line":"yyparse (void)"},
{"lineNum":" 1188","line":"{","class":"lineCov","hits":"2","order":"437","possible_hits":"2",},
{"lineNum":" 1189","line":"    int yystate;"},
{"lineNum":" 1190","line":"    /* Number of tokens to shift before error messages enabled.  */"},
{"lineNum":" 1191","line":"    int yyerrstatus;"},
{"lineNum":" 1192","line":""},
{"lineNum":" 1193","line":"    /* The stacks and their tools:"},
{"lineNum":" 1194","line":"       \'yyss\': related to states."},
{"lineNum":" 1195","line":"       \'yyvs\': related to semantic values."},
{"lineNum":" 1196","line":""},
{"lineNum":" 1197","line":"       Refer to the stacks through separate pointers, to allow yyoverflow"},
{"lineNum":" 1198","line":"       to reallocate them elsewhere.  */"},
{"lineNum":" 1199","line":""},
{"lineNum":" 1200","line":"    /* The state stack.  */"},
{"lineNum":" 1201","line":"    yytype_int16 yyssa[YYINITDEPTH];"},
{"lineNum":" 1202","line":"    yytype_int16 *yyss;"},
{"lineNum":" 1203","line":"    yytype_int16 *yyssp;"},
{"lineNum":" 1204","line":""},
{"lineNum":" 1205","line":"    /* The semantic value stack.  */"},
{"lineNum":" 1206","line":"    YYSTYPE yyvsa[YYINITDEPTH];"},
{"lineNum":" 1207","line":"    YYSTYPE *yyvs;"},
{"lineNum":" 1208","line":"    YYSTYPE *yyvsp;"},
{"lineNum":" 1209","line":""},
{"lineNum":" 1210","line":"    YYSIZE_T yystacksize;"},
{"lineNum":" 1211","line":""},
{"lineNum":" 1212","line":"  int yyn;"},
{"lineNum":" 1213","line":"  int yyresult;"},
{"lineNum":" 1214","line":"  /* Lookahead token as an internal (translated) token number.  */"},
{"lineNum":" 1215","line":"  int yytoken = 0;","class":"lineCov","hits":"1","order":"438","possible_hits":"1",},
{"lineNum":" 1216","line":"  /* The variables used to return semantic value and location from the"},
{"lineNum":" 1217","line":"     action routines.  */"},
{"lineNum":" 1218","line":"  YYSTYPE yyval;"},
{"lineNum":" 1219","line":""},
{"lineNum":" 1220","line":"#if YYERROR_VERBOSE"},
{"lineNum":" 1221","line":"  /* Buffer for error messages, and its allocated size.  */"},
{"lineNum":" 1222","line":"  char yymsgbuf[128];"},
{"lineNum":" 1223","line":"  char *yymsg = yymsgbuf;"},
{"lineNum":" 1224","line":"  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;"},
{"lineNum":" 1225","line":"#endif"},
{"lineNum":" 1226","line":""},
{"lineNum":" 1227","line":"#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))"},
{"lineNum":" 1228","line":""},
{"lineNum":" 1229","line":"  /* The number of symbols on the RHS of the reduced rule."},
{"lineNum":" 1230","line":"     Keep to zero when no symbol should be popped.  */"},
{"lineNum":" 1231","line":"  int yylen = 0;","class":"lineCov","hits":"1","order":"439","possible_hits":"1",},
{"lineNum":" 1232","line":""},
{"lineNum":" 1233","line":"  yyssp = yyss = yyssa;","class":"lineCov","hits":"1","order":"440","possible_hits":"1",},
{"lineNum":" 1234","line":"  yyvsp = yyvs = yyvsa;","class":"lineCov","hits":"1","order":"441","possible_hits":"1",},
{"lineNum":" 1235","line":"  yystacksize = YYINITDEPTH;","class":"lineCov","hits":"1","order":"442","possible_hits":"1",},
{"lineNum":" 1236","line":""},
{"lineNum":" 1237","line":"  YYDPRINTF ((stderr, \"Starting parse\\n\"));"},
{"lineNum":" 1238","line":""},
{"lineNum":" 1239","line":"  yystate = 0;","class":"lineCov","hits":"1","order":"443","possible_hits":"1",},
{"lineNum":" 1240","line":"  yyerrstatus = 0;","class":"lineCov","hits":"1","order":"444","possible_hits":"1",},
{"lineNum":" 1241","line":"  yynerrs = 0;","class":"lineCov","hits":"1","order":"445","possible_hits":"1",},
{"lineNum":" 1242","line":"  yychar = YYEMPTY; /* Cause a token to be read.  */","class":"lineCov","hits":"1","order":"446","possible_hits":"1",},
{"lineNum":" 1243","line":"  goto yysetstate;","class":"lineCov","hits":"1","order":"447","possible_hits":"1",},
{"lineNum":" 1244","line":""},
{"lineNum":" 1245","line":"/*------------------------------------------------------------."},
{"lineNum":" 1246","line":"| yynewstate -- Push a new state, which is found in yystate.  |"},
{"lineNum":" 1247","line":"`------------------------------------------------------------*/"},
{"lineNum":" 1248","line":" yynewstate:"},
{"lineNum":" 1249","line":"  /* In all cases, when you get here, the value and location stacks"},
{"lineNum":" 1250","line":"     have just been pushed.  So pushing a state here evens the stacks.  */"},
{"lineNum":" 1251","line":"  yyssp++;","class":"lineCov","hits":"1","order":"719","possible_hits":"1",},
{"lineNum":" 1252","line":""},
{"lineNum":" 1253","line":" yysetstate:"},
{"lineNum":" 1254","line":"  *yyssp = yystate;","class":"lineCov","hits":"1","order":"448","possible_hits":"1",},
{"lineNum":" 1255","line":""},
{"lineNum":" 1256","line":"  if (yyss + yystacksize - 1 <= yyssp)","class":"lineCov","hits":"1","order":"449","possible_hits":"1",},
{"lineNum":" 1257","line":"    {"},
{"lineNum":" 1258","line":"      /* Get the current used size of the three stacks, in elements.  */"},
{"lineNum":" 1259","line":"      YYSIZE_T yysize = yyssp - yyss + 1;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1260","line":""},
{"lineNum":" 1261","line":"#ifdef yyoverflow"},
{"lineNum":" 1262","line":"      {"},
{"lineNum":" 1263","line":"        /* Give user a chance to reallocate the stack.  Use copies of"},
{"lineNum":" 1264","line":"           these so that the &\'s don\'t force the real ones into"},
{"lineNum":" 1265","line":"           memory.  */"},
{"lineNum":" 1266","line":"        YYSTYPE *yyvs1 = yyvs;"},
{"lineNum":" 1267","line":"        yytype_int16 *yyss1 = yyss;"},
{"lineNum":" 1268","line":""},
{"lineNum":" 1269","line":"        /* Each stack pointer address is followed by the size of the"},
{"lineNum":" 1270","line":"           data in use in that stack, in bytes.  This used to be a"},
{"lineNum":" 1271","line":"           conditional around just the two extra args, but that might"},
{"lineNum":" 1272","line":"           be undefined if yyoverflow is a macro.  */"},
{"lineNum":" 1273","line":"        yyoverflow (YY_(\"memory exhausted\"),"},
{"lineNum":" 1274","line":"                    &yyss1, yysize * sizeof (*yyssp),"},
{"lineNum":" 1275","line":"                    &yyvs1, yysize * sizeof (*yyvsp),"},
{"lineNum":" 1276","line":"                    &yystacksize);"},
{"lineNum":" 1277","line":""},
{"lineNum":" 1278","line":"        yyss = yyss1;"},
{"lineNum":" 1279","line":"        yyvs = yyvs1;"},
{"lineNum":" 1280","line":"      }"},
{"lineNum":" 1281","line":"#else /* no yyoverflow */"},
{"lineNum":" 1282","line":"# ifndef YYSTACK_RELOCATE"},
{"lineNum":" 1283","line":"      goto yyexhaustedlab;"},
{"lineNum":" 1284","line":"# else"},
{"lineNum":" 1285","line":"      /* Extend the stack our own way.  */"},
{"lineNum":" 1286","line":"      if (YYMAXDEPTH <= yystacksize)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1287","line":"        goto yyexhaustedlab;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1288","line":"      yystacksize *= 2;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1289","line":"      if (YYMAXDEPTH < yystacksize)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1290","line":"        yystacksize = YYMAXDEPTH;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1291","line":""},
{"lineNum":" 1292","line":"      {"},
{"lineNum":" 1293","line":"        yytype_int16 *yyss1 = yyss;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1294","line":"        union yyalloc *yyptr ="},
{"lineNum":" 1295","line":"          (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1296","line":"        if (! yyptr)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1297","line":"          goto yyexhaustedlab;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1298","line":"        YYSTACK_RELOCATE (yyss_alloc, yyss);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1299","line":"        YYSTACK_RELOCATE (yyvs_alloc, yyvs);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1300","line":"#  undef YYSTACK_RELOCATE"},
{"lineNum":" 1301","line":"        if (yyss1 != yyssa)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1302","line":"          YYSTACK_FREE (yyss1);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1303","line":"      }"},
{"lineNum":" 1304","line":"# endif"},
{"lineNum":" 1305","line":"#endif /* no yyoverflow */"},
{"lineNum":" 1306","line":""},
{"lineNum":" 1307","line":"      yyssp = yyss + yysize - 1;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1308","line":"      yyvsp = yyvs + yysize - 1;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1309","line":""},
{"lineNum":" 1310","line":"      YYDPRINTF ((stderr, \"Stack size increased to %lu\\n\","},
{"lineNum":" 1311","line":"                  (unsigned long int) yystacksize));"},
{"lineNum":" 1312","line":""},
{"lineNum":" 1313","line":"      if (yyss + yystacksize - 1 <= yyssp)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1314","line":"        YYABORT;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1315","line":"    }"},
{"lineNum":" 1316","line":""},
{"lineNum":" 1317","line":"  YYDPRINTF ((stderr, \"Entering state %d\\n\", yystate));"},
{"lineNum":" 1318","line":""},
{"lineNum":" 1319","line":"  if (yystate == YYFINAL)","class":"lineCov","hits":"1","order":"450","possible_hits":"1",},
{"lineNum":" 1320","line":"    YYACCEPT;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1321","line":""},
{"lineNum":" 1322","line":"  goto yybackup;","class":"lineCov","hits":"1","order":"451","possible_hits":"1",},
{"lineNum":" 1323","line":""},
{"lineNum":" 1324","line":"/*-----------."},
{"lineNum":" 1325","line":"| yybackup.  |"},
{"lineNum":" 1326","line":"`-----------*/"},
{"lineNum":" 1327","line":"yybackup:"},
{"lineNum":" 1328","line":""},
{"lineNum":" 1329","line":"  /* Do appropriate processing given the current state.  Read a"},
{"lineNum":" 1330","line":"     lookahead token if we need one and don\'t already have one.  */"},
{"lineNum":" 1331","line":""},
{"lineNum":" 1332","line":"  /* First try to decide what to do without reference to lookahead token.  */"},
{"lineNum":" 1333","line":"  yyn = yypact[yystate];","class":"lineCov","hits":"1","order":"452","possible_hits":"1",},
{"lineNum":" 1334","line":"  if (yypact_value_is_default (yyn))","class":"lineCov","hits":"1","order":"453","possible_hits":"1",},
{"lineNum":" 1335","line":"    goto yydefault;","class":"lineCov","hits":"1","order":"720","possible_hits":"1",},
{"lineNum":" 1336","line":""},
{"lineNum":" 1337","line":"  /* Not known => get a lookahead token if don\'t already have one.  */"},
{"lineNum":" 1338","line":""},
{"lineNum":" 1339","line":"  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */"},
{"lineNum":" 1340","line":"  if (yychar == YYEMPTY)","class":"lineCov","hits":"1","order":"454","possible_hits":"1",},
{"lineNum":" 1341","line":"    {"},
{"lineNum":" 1342","line":"      YYDPRINTF ((stderr, \"Reading a token: \"));"},
{"lineNum":" 1343","line":"      yychar = yylex ();","class":"lineCov","hits":"1","order":"455","possible_hits":"1",},
{"lineNum":" 1344","line":"    }"},
{"lineNum":" 1345","line":""},
{"lineNum":" 1346","line":"  if (yychar <= YYEOF)","class":"lineCov","hits":"1","order":"708","possible_hits":"1",},
{"lineNum":" 1347","line":"    {"},
{"lineNum":" 1348","line":"      yychar = yytoken = YYEOF;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1349","line":"      YYDPRINTF ((stderr, \"Now at end of input.\\n\"));"},
{"lineNum":" 1350","line":"    }"},
{"lineNum":" 1351","line":"  else"},
{"lineNum":" 1352","line":"    {"},
{"lineNum":" 1353","line":"      yytoken = YYTRANSLATE (yychar);","class":"lineCov","hits":"1","order":"709","possible_hits":"1",},
{"lineNum":" 1354","line":"      YY_SYMBOL_PRINT (\"Next token is\", yytoken, &yylval, &yylloc);"},
{"lineNum":" 1355","line":"    }"},
{"lineNum":" 1356","line":""},
{"lineNum":" 1357","line":"  /* If the proper action on seeing token YYTOKEN is to reduce or to"},
{"lineNum":" 1358","line":"     detect an error, take that action.  */"},
{"lineNum":" 1359","line":"  yyn += yytoken;","class":"lineCov","hits":"1","order":"710","possible_hits":"1",},
{"lineNum":" 1360","line":"  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)","class":"lineCov","hits":"1","order":"711","possible_hits":"1",},
{"lineNum":" 1361","line":"    goto yydefault;"},
{"lineNum":" 1362","line":"  yyn = yytable[yyn];","class":"lineCov","hits":"1","order":"712","possible_hits":"1",},
{"lineNum":" 1363","line":"  if (yyn <= 0)","class":"lineCov","hits":"1","order":"713","possible_hits":"1",},
{"lineNum":" 1364","line":"    {"},
{"lineNum":" 1365","line":"      if (yytable_value_is_error (yyn))"},
{"lineNum":" 1366","line":"        goto yyerrlab;"},
{"lineNum":" 1367","line":"      yyn = -yyn;","class":"lineCov","hits":"1","order":"1372","possible_hits":"1",},
{"lineNum":" 1368","line":"      goto yyreduce;","class":"lineCov","hits":"1","order":"1373","possible_hits":"1",},
{"lineNum":" 1369","line":"    }"},
{"lineNum":" 1370","line":""},
{"lineNum":" 1371","line":"  /* Count tokens shifted since error; after three, turn off error"},
{"lineNum":" 1372","line":"     status.  */"},
{"lineNum":" 1373","line":"  if (yyerrstatus)","class":"lineCov","hits":"1","order":"714","possible_hits":"1",},
{"lineNum":" 1374","line":"    yyerrstatus--;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1375","line":""},
{"lineNum":" 1376","line":"  /* Shift the lookahead token.  */"},
{"lineNum":" 1377","line":"  YY_SYMBOL_PRINT (\"Shifting\", yytoken, &yylval, &yylloc);"},
{"lineNum":" 1378","line":""},
{"lineNum":" 1379","line":"  /* Discard the shifted token.  */"},
{"lineNum":" 1380","line":"  yychar = YYEMPTY;","class":"lineCov","hits":"1","order":"715","possible_hits":"1",},
{"lineNum":" 1381","line":""},
{"lineNum":" 1382","line":"  yystate = yyn;","class":"lineCov","hits":"1","order":"716","possible_hits":"1",},
{"lineNum":" 1383","line":"  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN"},
{"lineNum":" 1384","line":"  *++yyvsp = yylval;","class":"lineCov","hits":"1","order":"717","possible_hits":"1",},
{"lineNum":" 1385","line":"  YY_IGNORE_MAYBE_UNINITIALIZED_END"},
{"lineNum":" 1386","line":""},
{"lineNum":" 1387","line":"  goto yynewstate;","class":"lineCov","hits":"1","order":"718","possible_hits":"1",},
{"lineNum":" 1388","line":""},
{"lineNum":" 1389","line":""},
{"lineNum":" 1390","line":"/*-----------------------------------------------------------."},
{"lineNum":" 1391","line":"| yydefault -- do the default action for the current state.  |"},
{"lineNum":" 1392","line":"`-----------------------------------------------------------*/"},
{"lineNum":" 1393","line":"yydefault:","class":"lineCov","hits":"1","order":"967","possible_hits":"1",},
{"lineNum":" 1394","line":"  yyn = yydefact[yystate];","class":"lineCov","hits":"1","order":"721","possible_hits":"1",},
{"lineNum":" 1395","line":"  if (yyn == 0)","class":"lineCov","hits":"1","order":"722","possible_hits":"1",},
{"lineNum":" 1396","line":"    goto yyerrlab;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1397","line":"  goto yyreduce;","class":"lineCov","hits":"1","order":"723","possible_hits":"1",},
{"lineNum":" 1398","line":""},
{"lineNum":" 1399","line":""},
{"lineNum":" 1400","line":"/*-----------------------------."},
{"lineNum":" 1401","line":"| yyreduce -- Do a reduction.  |"},
{"lineNum":" 1402","line":"`-----------------------------*/"},
{"lineNum":" 1403","line":"yyreduce:"},
{"lineNum":" 1404","line":"  /* yyn is the number of a rule to reduce with.  */"},
{"lineNum":" 1405","line":"  yylen = yyr2[yyn];","class":"lineCov","hits":"1","order":"724","possible_hits":"1",},
{"lineNum":" 1406","line":""},
{"lineNum":" 1407","line":"  /* If YYLEN is nonzero, implement the default value of the action:"},
{"lineNum":" 1408","line":"     \'$$ = $1\'."},
{"lineNum":" 1409","line":""},
{"lineNum":" 1410","line":"     Otherwise, the following line sets YYVAL to garbage."},
{"lineNum":" 1411","line":"     This behavior is undocumented and Bison"},
{"lineNum":" 1412","line":"     users should not rely upon it.  Assigning to YYVAL"},
{"lineNum":" 1413","line":"     unconditionally makes the parser a bit smaller, and it avoids a"},
{"lineNum":" 1414","line":"     GCC warning that YYVAL may be used uninitialized.  */"},
{"lineNum":" 1415","line":"  yyval = yyvsp[1-yylen];","class":"lineCov","hits":"1","order":"725","possible_hits":"1",},
{"lineNum":" 1416","line":""},
{"lineNum":" 1417","line":""},
{"lineNum":" 1418","line":"  YY_REDUCE_PRINT (yyn);"},
{"lineNum":" 1419","line":"  switch (yyn)","class":"lineCov","hits":"1","order":"726","possible_hits":"1",},
{"lineNum":" 1420","line":"    {"},
{"lineNum":" 1421","line":"        case 2:"},
{"lineNum":" 1422","line":"#line 116 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 1423","line":"    {"},
{"lineNum":" 1424","line":"                    prRule(\"N_START\", \"N_PROG\");"},
{"lineNum":" 1425","line":"\t\t\t    printf(\"\\n---- Completed parsing ----\\n\\n\");"},
{"lineNum":" 1426","line":"\t\t\t    return 0;"},
{"lineNum":" 1427","line":"                    }"},
{"lineNum":" 1428","line":"#line 1429 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 1429","line":"    break;"},
{"lineNum":" 1430","line":""},
{"lineNum":" 1431","line":"  case 3:"},
{"lineNum":" 1432","line":"#line 138 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 1433","line":"    {"},
{"lineNum":" 1434","line":"                    prRule(\"N_ADDOPLST\", \"epsilon\");"},
{"lineNum":" 1435","line":"                    }"},
{"lineNum":" 1436","line":"#line 1437 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 1437","line":"    break;","class":"lineCov","hits":"1","order":"1315","possible_hits":"1",},
{"lineNum":" 1438","line":""},
{"lineNum":" 1439","line":"  case 4:"},
{"lineNum":" 1440","line":"#line 142 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 1441","line":"    {"},
{"lineNum":" 1442","line":"                    prRule(\"N_ADDOPLST\","},
{"lineNum":" 1443","line":"                           \"N_ADDOP N_TERM N_ADDOPLST\");"},
{"lineNum":" 1444","line":"                    }"},
{"lineNum":" 1445","line":"#line 1446 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 1446","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1447","line":""},
{"lineNum":" 1448","line":"  case 5:"},
{"lineNum":" 1449","line":"#line 149 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 1450","line":"    {"},
{"lineNum":" 1451","line":"                    \tprRule(\"N_ARRAY\","},
{"lineNum":" 1452","line":"                        \"T_ARRAY T_LBRACK N_IDXRANGE T_RBRACK T_OF N_SIMPLE\");"},
{"lineNum":" 1453","line":"\t\t\t\t(yyval.typeInfo).type = ARRAY;"},
{"lineNum":" 1454","line":"                      (yyval.typeInfo).startIndex = (yyvsp[-3].typeInfo).startIndex;"},
{"lineNum":" 1455","line":"                      (yyval.typeInfo).endIndex = (yyvsp[-3].typeInfo).endIndex;"},
{"lineNum":" 1456","line":"\t\t        \t(yyval.typeInfo).baseType = (yyvsp[0].typeInfo).type;"},
{"lineNum":" 1457","line":"                    }"},
{"lineNum":" 1458","line":"#line 1459 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 1459","line":"    break;","class":"lineCov","hits":"1","order":"1213","possible_hits":"1",},
{"lineNum":" 1460","line":""},
{"lineNum":" 1461","line":"  case 6:"},
{"lineNum":" 1462","line":"#line 159 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 1463","line":"    {"},
{"lineNum":" 1464","line":"                    prRule(\"N_ARRAYVAR\", \"N_ENTIREVAR\");"},
{"lineNum":" 1465","line":"\t\t\t    (yyval.typeInfo).type = (yyvsp[0].typeInfo).type;"},
{"lineNum":" 1466","line":"                    (yyval.typeInfo).startIndex = (yyvsp[0].typeInfo).startIndex;"},
{"lineNum":" 1467","line":"                    (yyval.typeInfo).endIndex = (yyvsp[0].typeInfo).endIndex;"},
{"lineNum":" 1468","line":"\t\t         (yyval.typeInfo).baseType = (yyvsp[0].typeInfo).baseType;"},
{"lineNum":" 1469","line":"                    }"},
{"lineNum":" 1470","line":"#line 1471 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 1471","line":"    break;","class":"lineCov","hits":"1","order":"1425","possible_hits":"1",},
{"lineNum":" 1472","line":""},
{"lineNum":" 1473","line":"  case 7:"},
{"lineNum":" 1474","line":"#line 168 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 1475","line":"    {"},
{"lineNum":" 1476","line":"                    prRule(\"N_ASSIGN\","},
{"lineNum":" 1477","line":"                           \"N_VARIABLE T_ASSIGN N_EXPR\");"},
{"lineNum":" 1478","line":""},
{"lineNum":" 1479","line":"\t                    // If variable is array => error"},
{"lineNum":" 1480","line":"\t                    if((yyvsp[-2].typeInfo).type == ARRAY && (yyvsp[-2].typeInfo).entireVar == true) {"},
{"lineNum":" 1481","line":"\t                    \tyyerror(\"Cannot make assignment to an array\");"},
{"lineNum":" 1482","line":"\t                    }"},
{"lineNum":" 1483","line":""},
{"lineNum":" 1484","line":"\t                    //printf(\"%d\\n\", $3.type);"},
{"lineNum":" 1485","line":"\t                    if((yyvsp[0].typeInfo).type == PROCEDURE || (yyvsp[-2].typeInfo).type == PROCEDURE) {"},
{"lineNum":" 1486","line":"\t                    \tyyerror(\"Procedure/variable mismatch\");"},
{"lineNum":" 1487","line":"\t                    }"},
{"lineNum":" 1488","line":""},
{"lineNum":" 1489","line":"\t                    // If arrays of different types"},
{"lineNum":" 1490","line":"\t                    if((yyvsp[-2].typeInfo).type == (yyvsp[0].typeInfo).type && (yyvsp[-2].typeInfo).type == ARRAY) {"},
{"lineNum":" 1491","line":"\t                    \t// If array of different base types, throw error"},
{"lineNum":" 1492","line":"\t                    \tif((yyvsp[-2].typeInfo).baseType != (yyvsp[0].typeInfo).baseType) {"},
{"lineNum":" 1493","line":"\t                    \t\tyyerror(\"Expression must be of same type as variable\");"},
{"lineNum":" 1494","line":"\t                    \t}"},
{"lineNum":" 1495","line":"\t                    }"},
{"lineNum":" 1496","line":""},
{"lineNum":" 1497","line":"\t                    // LHS is array of different type than RHS"},
{"lineNum":" 1498","line":"\t                    if((yyvsp[-2].typeInfo).type == ARRAY && (yyvsp[0].typeInfo).type != ARRAY && (yyvsp[-2].typeInfo).baseType != (yyvsp[0].typeInfo).type) {"},
{"lineNum":" 1499","line":"\t                    \tyyerror(\"Expression must be of same type as variable\");"},
{"lineNum":" 1500","line":"\t                    }"},
{"lineNum":" 1501","line":""},
{"lineNum":" 1502","line":"\t                    // RHS is array of different type than LHS"},
{"lineNum":" 1503","line":"\t                    if((yyvsp[0].typeInfo).type == ARRAY && (yyvsp[-2].typeInfo).type != ARRAY && (yyvsp[0].typeInfo).baseType != (yyvsp[-2].typeInfo).type) {"},
{"lineNum":" 1504","line":"\t                    \tyyerror(\"Expression must be of same type as variable\");"},
{"lineNum":" 1505","line":"\t                    }"},
{"lineNum":" 1506","line":""},
{"lineNum":" 1507","line":"\t                    // --- N_var and N_expr must match --- //"},
{"lineNum":" 1508","line":"\t                    if((yyvsp[-2].typeInfo).type != (yyvsp[0].typeInfo).type && (yyvsp[-2].typeInfo).type != ARRAY && (yyvsp[0].typeInfo).type != ARRAY) { // If array and different base types"},
{"lineNum":" 1509","line":"\t                    \tyyerror(\"Expression must be of same type as variable\");"},
{"lineNum":" 1510","line":"\t                    }"},
{"lineNum":" 1511","line":"                    }"},
{"lineNum":" 1512","line":"#line 1513 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 1513","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":" 1514","line":""},
{"lineNum":" 1515","line":"  case 8:"},
{"lineNum":" 1516","line":"#line 207 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 1517","line":"    {"},
{"lineNum":" 1518","line":"                    prRule(\"N_BLOCK\","},
{"lineNum":" 1519","line":"                        \"N_VARDECPART N_PROCDECPART N_STMTPART\");"},
{"lineNum":" 1520","line":"                    endScope();"},
{"lineNum":" 1521","line":"                    }"},
{"lineNum":" 1522","line":"#line 1523 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 1523","line":"    break;","class":"lineCov","hits":"1","order":"1367","possible_hits":"1",},
{"lineNum":" 1524","line":""},
{"lineNum":" 1525","line":"  case 9:"},
{"lineNum":" 1526","line":"#line 214 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 1527","line":"    {"},
{"lineNum":" 1528","line":"                    prRule(\"N_BOOLCONST\", \"T_TRUE\");"},
{"lineNum":" 1529","line":"\t\t\t    (yyval.typeInfo).type = BOOL;"},
{"lineNum":" 1530","line":"                    (yyval.typeInfo).startIndex = NOT_APPLICABLE;"},
{"lineNum":" 1531","line":"\t\t\t    (yyval.typeInfo).endIndex = NOT_APPLICABLE;"},
{"lineNum":" 1532","line":"\t\t         (yyval.typeInfo).baseType = NOT_APPLICABLE;"},
{"lineNum":" 1533","line":"                    }"},
{"lineNum":" 1534","line":"#line 1535 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 1535","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1536","line":""},
{"lineNum":" 1537","line":"  case 10:"},
{"lineNum":" 1538","line":"#line 222 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 1539","line":"    {"},
{"lineNum":" 1540","line":"                    prRule(\"N_BOOLCONST\", \"T_FALSE\");"},
{"lineNum":" 1541","line":"\t\t\t    (yyval.typeInfo).type = BOOL;"},
{"lineNum":" 1542","line":"                    (yyval.typeInfo).startIndex = NOT_APPLICABLE;"},
{"lineNum":" 1543","line":"                    (yyval.typeInfo).endIndex = NOT_APPLICABLE;"},
{"lineNum":" 1544","line":"\t\t         (yyval.typeInfo).baseType = NOT_APPLICABLE;"},
{"lineNum":" 1545","line":"                    }"},
{"lineNum":" 1546","line":"#line 1547 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 1547","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1548","line":""},
{"lineNum":" 1549","line":"  case 11:"},
{"lineNum":" 1550","line":"#line 231 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 1551","line":"    {"},
{"lineNum":" 1552","line":"                    prRule(\"N_COMPOUND\","},
{"lineNum":" 1553","line":"                           \"T_BEGIN N_STMT N_STMTLST T_END\");"},
{"lineNum":" 1554","line":"                    }"},
{"lineNum":" 1555","line":"#line 1556 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 1556","line":"    break;","class":"lineCov","hits":"1","order":"1350","possible_hits":"1",},
{"lineNum":" 1557","line":""},
{"lineNum":" 1558","line":"  case 12:"},
{"lineNum":" 1559","line":"#line 237 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 1560","line":"    {"},
{"lineNum":" 1561","line":"                    prRule(\"N_CONDITION\","},
{"lineNum":" 1562","line":"                           \"T_IF N_EXPR T_THEN N_STMT\");"},
{"lineNum":" 1563","line":""},
{"lineNum":" 1564","line":"                    if((yyvsp[-2].typeInfo).type != BOOL) {"},
{"lineNum":" 1565","line":"\t\t\t\t\t\t\tyyerror(\"Expression must be of type boolean\");"},
{"lineNum":" 1566","line":"\t\t\t\t\t\t}"},
{"lineNum":" 1567","line":"                    }"},
{"lineNum":" 1568","line":"#line 1569 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 1569","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":" 1570","line":""},
{"lineNum":" 1571","line":"  case 13:"},
{"lineNum":" 1572","line":"#line 246 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 1573","line":"    {"},
{"lineNum":" 1574","line":"                    prRule(\"N_CONDITION\","},
{"lineNum":" 1575","line":"                      \"T_IF N_EXPR T_THEN N_STMT T_ELSE N_STMT\");"},
{"lineNum":" 1576","line":""},
{"lineNum":" 1577","line":"                    if((yyvsp[-4].typeInfo).type != BOOL) {"},
{"lineNum":" 1578","line":"\t\t\t\t\t\t\tyyerror(\"Expression must be of type boolean\");"},
{"lineNum":" 1579","line":"\t\t\t\t\t\t}"},
{"lineNum":" 1580","line":"                    }"},
{"lineNum":" 1581","line":"#line 1582 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 1582","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":" 1583","line":""},
{"lineNum":" 1584","line":"  case 14:"},
{"lineNum":" 1585","line":"#line 256 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 1586","line":"    {"},
{"lineNum":" 1587","line":"                    prRule(\"N_CONST\", \"N_INTCONST\");"},
{"lineNum":" 1588","line":"\t\t\t    (yyval.typeInfo).type = INT;"},
{"lineNum":" 1589","line":"                    (yyval.typeInfo).startIndex = NOT_APPLICABLE;"},
{"lineNum":" 1590","line":"                    (yyval.typeInfo).endIndex = NOT_APPLICABLE;"},
{"lineNum":" 1591","line":"\t\t         (yyval.typeInfo).baseType = NOT_APPLICABLE;"},
{"lineNum":" 1592","line":"                    }"},
{"lineNum":" 1593","line":"#line 1594 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 1594","line":"    break;","class":"lineCov","hits":"1","order":"1431","possible_hits":"1",},
{"lineNum":" 1595","line":""},
{"lineNum":" 1596","line":"  case 15:"},
{"lineNum":" 1597","line":"#line 264 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 1598","line":"    {"},
{"lineNum":" 1599","line":"                    prRule(\"N_CONST\", \"T_CHARCONST\");"},
{"lineNum":" 1600","line":"\t\t\t    (yyval.typeInfo).type = CHAR;"},
{"lineNum":" 1601","line":"                    (yyval.typeInfo).startIndex = NOT_APPLICABLE;"},
{"lineNum":" 1602","line":"                    (yyval.typeInfo).endIndex = NOT_APPLICABLE;"},
{"lineNum":" 1603","line":"\t\t         (yyval.typeInfo).baseType = NOT_APPLICABLE;"},
{"lineNum":" 1604","line":"                    }"},
{"lineNum":" 1605","line":"#line 1606 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 1606","line":"    break;","class":"lineCov","hits":"1","order":"1297","possible_hits":"1",},
{"lineNum":" 1607","line":""},
{"lineNum":" 1608","line":"  case 16:"},
{"lineNum":" 1609","line":"#line 272 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 1610","line":"    {"},
{"lineNum":" 1611","line":"                    prRule(\"N_CONST\", \"N_BOOLCONST\");"},
{"lineNum":" 1612","line":"\t\t\t    (yyval.typeInfo).type = BOOL;"},
{"lineNum":" 1613","line":"                    (yyval.typeInfo).startIndex = NOT_APPLICABLE;"},
{"lineNum":" 1614","line":"                    (yyval.typeInfo).endIndex = NOT_APPLICABLE;"},
{"lineNum":" 1615","line":"\t\t         (yyval.typeInfo).baseType = NOT_APPLICABLE;"},
{"lineNum":" 1616","line":"                    }"},
{"lineNum":" 1617","line":"#line 1618 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 1618","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1619","line":""},
{"lineNum":" 1620","line":"  case 17:"},
{"lineNum":" 1621","line":"#line 281 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 1622","line":"    {"},
{"lineNum":" 1623","line":"                    prRule(\"N_ENTIREVAR\", \"N_VARIDENT\");"},
{"lineNum":" 1624","line":"                    (yyval.typeInfo).type = (yyvsp[0].typeInfo).type;"},
{"lineNum":" 1625","line":"                    (yyval.typeInfo).startIndex = (yyvsp[0].typeInfo).startIndex;"},
{"lineNum":" 1626","line":"                    (yyval.typeInfo).endIndex = (yyvsp[0].typeInfo).endIndex;"},
{"lineNum":" 1627","line":"\t\t         (yyval.typeInfo).baseType = (yyvsp[0].typeInfo).baseType;"},
{"lineNum":" 1628","line":"                    }"},
{"lineNum":" 1629","line":"#line 1630 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 1630","line":"    break;","class":"lineCov","hits":"1","order":"1419","possible_hits":"1",},
{"lineNum":" 1631","line":""},
{"lineNum":" 1632","line":"  case 18:"},
{"lineNum":" 1633","line":"#line 290 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 1634","line":"    {"},
{"lineNum":" 1635","line":"                    prRule(\"N_EXPR\", \"N_SIMPLEEXPR\");"},
{"lineNum":" 1636","line":"\t\t\t    \t\t(yyval.typeInfo).type = (yyvsp[0].typeInfo).type;"},
{"lineNum":" 1637","line":"                    \t(yyval.typeInfo).startIndex = (yyvsp[0].typeInfo).startIndex;"},
{"lineNum":" 1638","line":"                    \t(yyval.typeInfo).endIndex = (yyvsp[0].typeInfo).endIndex;"},
{"lineNum":" 1639","line":"\t\t         \t\t(yyval.typeInfo).baseType = (yyvsp[0].typeInfo).baseType;"},
{"lineNum":" 1640","line":"                    }"},
{"lineNum":" 1641","line":"#line 1642 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 1642","line":"    break;","class":"lineCov","hits":"1","order":"1327","possible_hits":"1",},
{"lineNum":" 1643","line":""},
{"lineNum":" 1644","line":"  case 19:"},
{"lineNum":" 1645","line":"#line 298 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 1646","line":"    {"},
{"lineNum":" 1647","line":"                    prRule(\"N_EXPR\","},
{"lineNum":" 1648","line":"                           \"N_SIMPLEEXPR N_RELOP N_SIMPLEEXPR\");"},
{"lineNum":" 1649","line":""},
{"lineNum":" 1650","line":"                    \t// If arrays of different types"},
{"lineNum":" 1651","line":"\t                    if((yyvsp[-2].typeInfo).type == (yyvsp[0].typeInfo).type && (yyvsp[-2].typeInfo).type == ARRAY) {"},
{"lineNum":" 1652","line":"\t                    \t// If array of different base types, throw error"},
{"lineNum":" 1653","line":"\t                    \tif((yyvsp[-2].typeInfo).baseType != (yyvsp[0].typeInfo).baseType) {"},
{"lineNum":" 1654","line":"\t                    \t\tyyerror(\"Expressions must both be int, or both char, or both boolean\");"},
{"lineNum":" 1655","line":"\t                    \t}"},
{"lineNum":" 1656","line":"\t                    }"},
{"lineNum":" 1657","line":""},
{"lineNum":" 1658","line":"\t                    // LHS is array of different type than RHS"},
{"lineNum":" 1659","line":"\t                    if((yyvsp[-2].typeInfo).type == ARRAY && (yyvsp[0].typeInfo).type != ARRAY && (yyvsp[-2].typeInfo).baseType != (yyvsp[0].typeInfo).type) {"},
{"lineNum":" 1660","line":"\t                    \tyyerror(\"Expressions must both be int, or both char, or both boolean\");"},
{"lineNum":" 1661","line":"\t                    }"},
{"lineNum":" 1662","line":""},
{"lineNum":" 1663","line":"\t                    // RHS is array of different type than LHS"},
{"lineNum":" 1664","line":"\t                    if((yyvsp[0].typeInfo).type == ARRAY && (yyvsp[-2].typeInfo).type != ARRAY && (yyvsp[0].typeInfo).baseType != (yyvsp[-2].typeInfo).type) {"},
{"lineNum":" 1665","line":"\t                    \tyyerror(\"Expressions must both be int, or both char, or both boolean\");"},
{"lineNum":" 1666","line":"\t                    }"},
{"lineNum":" 1667","line":""},
{"lineNum":" 1668","line":"\t                    // --- N_var and N_expr must match --- //"},
{"lineNum":" 1669","line":"\t                    if((yyvsp[-2].typeInfo).type != (yyvsp[0].typeInfo).type && (yyvsp[-2].typeInfo).type != ARRAY && (yyvsp[0].typeInfo).type != ARRAY) { // If array and different base types"},
{"lineNum":" 1670","line":"\t                    \tyyerror(\"Expressions must both be int, or both char, or both boolean\");"},
{"lineNum":" 1671","line":"\t                    }"},
{"lineNum":" 1672","line":""},
{"lineNum":" 1673","line":"\t\t\t    \t\t(yyval.typeInfo).type = BOOL;"},
{"lineNum":" 1674","line":"                    \t(yyval.typeInfo).startIndex = NOT_APPLICABLE;"},
{"lineNum":" 1675","line":"                    \t(yyval.typeInfo).endIndex = NOT_APPLICABLE;"},
{"lineNum":" 1676","line":"\t\t         \t\t(yyval.typeInfo).baseType = NOT_APPLICABLE;"},
{"lineNum":" 1677","line":"                    }"},
{"lineNum":" 1678","line":"#line 1679 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 1679","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1680","line":""},
{"lineNum":" 1681","line":"  case 20:"},
{"lineNum":" 1682","line":"#line 332 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 1683","line":"    {"},
{"lineNum":" 1684","line":"                    prRule(\"N_FACTOR\", \"N_SIGN N_VARIABLE\");"},
{"lineNum":" 1685","line":"                    \tif((yyvsp[0].typeInfo).type == CHAR && (yyvsp[-1].num) == NEGATIVE) {"},
{"lineNum":" 1686","line":"                    \t\tyyerror(\"Expression must be of type integer\");"},
{"lineNum":" 1687","line":"                    \t}"},
{"lineNum":" 1688","line":""},
{"lineNum":" 1689","line":"      \t\t    (yyval.typeInfo).type = (yyvsp[0].typeInfo).type;"},
{"lineNum":" 1690","line":"                    (yyval.typeInfo).startIndex = (yyvsp[0].typeInfo).startIndex;"},
{"lineNum":" 1691","line":"                    (yyval.typeInfo).endIndex = (yyvsp[0].typeInfo).endIndex;"},
{"lineNum":" 1692","line":"\t\t         (yyval.typeInfo).baseType = (yyvsp[0].typeInfo).baseType;"},
{"lineNum":" 1693","line":"                    }"},
{"lineNum":" 1694","line":"#line 1695 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 1695","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1696","line":""},
{"lineNum":" 1697","line":"  case 21:"},
{"lineNum":" 1698","line":"#line 344 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 1699","line":"    {"},
{"lineNum":" 1700","line":"                    prRule(\"N_FACTOR\", \"N_CONST\");"},
{"lineNum":" 1701","line":"\t\t\t    (yyval.typeInfo).type = (yyvsp[0].typeInfo).type;"},
{"lineNum":" 1702","line":"                    (yyval.typeInfo).startIndex = (yyvsp[0].typeInfo).startIndex;"},
{"lineNum":" 1703","line":"                    (yyval.typeInfo).endIndex = (yyvsp[0].typeInfo).endIndex;"},
{"lineNum":" 1704","line":"\t\t         (yyval.typeInfo).baseType = (yyvsp[0].typeInfo).baseType;"},
{"lineNum":" 1705","line":"                    }"},
{"lineNum":" 1706","line":"#line 1707 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 1707","line":"    break;","class":"lineCov","hits":"1","order":"1303","possible_hits":"1",},
{"lineNum":" 1708","line":""},
{"lineNum":" 1709","line":"  case 22:"},
{"lineNum":" 1710","line":"#line 352 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 1711","line":"    {"},
{"lineNum":" 1712","line":"                    prRule(\"N_FACTOR\","},
{"lineNum":" 1713","line":"                          \"T_LPAREN N_EXPR T_RPAREN\");"},
{"lineNum":" 1714","line":"\t\t\t    (yyval.typeInfo).type = (yyvsp[-1].typeInfo).type;"},
{"lineNum":" 1715","line":"                    (yyval.typeInfo).startIndex = (yyvsp[-1].typeInfo).startIndex;"},
{"lineNum":" 1716","line":"                    (yyval.typeInfo).endIndex = (yyvsp[-1].typeInfo).endIndex;"},
{"lineNum":" 1717","line":"\t\t         (yyval.typeInfo).baseType = (yyvsp[-1].typeInfo).baseType;"},
{"lineNum":" 1718","line":"                    }"},
{"lineNum":" 1719","line":"#line 1720 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 1720","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1721","line":""},
{"lineNum":" 1722","line":"  case 23:"},
{"lineNum":" 1723","line":"#line 361 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 1724","line":"    {"},
{"lineNum":" 1725","line":"                    prRule(\"N_FACTOR\", \"T_NOT N_FACTOR\");"},
{"lineNum":" 1726","line":""},
{"lineNum":" 1727","line":"                    if((yyvsp[0].typeInfo).type != BOOL) {"},
{"lineNum":" 1728","line":"                    \tyyerror(\"Expression must be of type boolean\");"},
{"lineNum":" 1729","line":"                    }"},
{"lineNum":" 1730","line":""},
{"lineNum":" 1731","line":"\t\t\t    \t(yyval.typeInfo).type = BOOL;"},
{"lineNum":" 1732","line":"                    (yyval.typeInfo).startIndex = NOT_APPLICABLE;"},
{"lineNum":" 1733","line":"                    (yyval.typeInfo).endIndex = NOT_APPLICABLE;"},
{"lineNum":" 1734","line":"\t\t         \t(yyval.typeInfo).baseType = NOT_APPLICABLE;"},
{"lineNum":" 1735","line":"                    }"},
{"lineNum":" 1736","line":"#line 1737 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 1737","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1738","line":""},
{"lineNum":" 1739","line":"  case 24:"},
{"lineNum":" 1740","line":"#line 375 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 1741","line":"    {"},
{"lineNum":" 1742","line":"                    prRule(\"N_IDENT\", \"T_IDENT\");"},
{"lineNum":" 1743","line":"                    (yyval.text) = (yyvsp[0].text);"},
{"lineNum":" 1744","line":"                    }"},
{"lineNum":" 1745","line":"#line 1746 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 1746","line":"    break;","class":"lineCov","hits":"1","order":"964","possible_hits":"1",},
{"lineNum":" 1747","line":""},
{"lineNum":" 1748","line":"  case 25:"},
{"lineNum":" 1749","line":"#line 381 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 1750","line":"    {"},
{"lineNum":" 1751","line":"                    prRule(\"N_IDENTLST\", \"epsilon\");"},
{"lineNum":" 1752","line":"                    }"},
{"lineNum":" 1753","line":"#line 1754 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 1754","line":"    break;","class":"lineCov","hits":"1","order":"969","possible_hits":"1",},
{"lineNum":" 1755","line":""},
{"lineNum":" 1756","line":"  case 26:"},
{"lineNum":" 1757","line":"#line 385 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 1758","line":"    {"},
{"lineNum":" 1759","line":"                    prRule(\"N_IDENTLST\","},
{"lineNum":" 1760","line":"                           \"T_COMMA N_IDENT N_IDENTLST\");"},
{"lineNum":" 1761","line":"\t\t\t    string varName = string((yyvsp[-1].text));"},
{"lineNum":" 1762","line":"\t\t\t    variableNames.push_front(varName);"},
{"lineNum":" 1763","line":"                    }"},
{"lineNum":" 1764","line":"#line 1765 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 1765","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1766","line":""},
{"lineNum":" 1767","line":"  case 27:"},
{"lineNum":" 1768","line":"#line 393 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 1769","line":"    {"},
{"lineNum":" 1770","line":"                    prRule(\"N_IDX\", \"N_INTCONST\");"},
{"lineNum":" 1771","line":"                    (yyval.num) = (yyvsp[0].num);"},
{"lineNum":" 1772","line":"                    }"},
{"lineNum":" 1773","line":"#line 1774 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 1774","line":"    break;","class":"lineCov","hits":"1","order":"1194","possible_hits":"1",},
{"lineNum":" 1775","line":""},
{"lineNum":" 1776","line":"  case 28:"},
{"lineNum":" 1777","line":"#line 399 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 1778","line":"    {"},
{"lineNum":" 1779","line":"                    prRule(\"N_IDXRANGE\", \"N_IDX T_DOTDOT N_IDX\");"},
{"lineNum":" 1780","line":"                    \tif((yyvsp[-2].num) > (yyvsp[0].num)) {"},
{"lineNum":" 1781","line":"                    \t\tyyerror(\"Start index must be less than or equal to end index of array\");"},
{"lineNum":" 1782","line":"                    \t}"},
{"lineNum":" 1783","line":""},
{"lineNum":" 1784","line":"\t\t\t         \t(yyval.typeInfo).type = INDEX_RANGE;"},
{"lineNum":" 1785","line":"\t                    (yyval.typeInfo).startIndex = (yyvsp[-2].num);"},
{"lineNum":" 1786","line":"\t                    (yyval.typeInfo).endIndex = (yyvsp[0].num);"},
{"lineNum":" 1787","line":"\t\t\t         \t(yyval.typeInfo).baseType = NOT_APPLICABLE;"},
{"lineNum":" 1788","line":"                    }"},
{"lineNum":" 1789","line":"#line 1790 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 1790","line":"    break;","class":"lineCov","hits":"1","order":"1203","possible_hits":"1",},
{"lineNum":" 1791","line":""},
{"lineNum":" 1792","line":"  case 29:"},
{"lineNum":" 1793","line":"#line 412 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 1794","line":"    {"},
{"lineNum":" 1795","line":"                    prRule(\"N_IDXVAR\","},
{"lineNum":" 1796","line":"                          \"N_ARRAYVAR T_LBRACK N_EXPR T_RBRACK\");"},
{"lineNum":" 1797","line":""},
{"lineNum":" 1798","line":"                    \t// N_expr cannot be a proceduce"},
{"lineNum":" 1799","line":"                    \tif((yyvsp[-1].typeInfo).type == PROCEDURE || (yyvsp[-3].typeInfo).type == PROCEDURE) {"},
{"lineNum":" 1800","line":"                    \t\tyyerror(\"Procedure/variable mismatch\");"},
{"lineNum":" 1801","line":"                    \t}"},
{"lineNum":" 1802","line":""},
{"lineNum":" 1803","line":"\t                    if((yyvsp[-1].typeInfo).type != INT) {"},
{"lineNum":" 1804","line":"\t                    \t// Allow nested arrays"},
{"lineNum":" 1805","line":"\t                    \tif(!((yyvsp[-1].typeInfo).type == ARRAY && (yyvsp[-1].typeInfo).entireVar == false && (yyvsp[-1].typeInfo).baseType == INT)) {"},
{"lineNum":" 1806","line":"\t                    \t\tyyerror(\"Index expression must be of type integer\");"},
{"lineNum":" 1807","line":"\t                    \t}"},
{"lineNum":" 1808","line":"\t                    }"},
{"lineNum":" 1809","line":""},
{"lineNum":" 1810","line":"\t                    if((yyvsp[-3].typeInfo).type != ARRAY) {"},
{"lineNum":" 1811","line":"\t                    \tyyerror(\"Indexed variable must be of array type\");"},
{"lineNum":" 1812","line":"\t                    }"},
{"lineNum":" 1813","line":"                    }"},
{"lineNum":" 1814","line":"#line 1815 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 1815","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":" 1816","line":""},
{"lineNum":" 1817","line":"  case 30:"},
{"lineNum":" 1818","line":"#line 434 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 1819","line":"    {"},
{"lineNum":" 1820","line":"                    prRule(\"N_INPUTLST\", \"epsilon\");"},
{"lineNum":" 1821","line":"                    }"},
{"lineNum":" 1822","line":"#line 1823 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 1823","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1824","line":""},
{"lineNum":" 1825","line":"  case 31:"},
{"lineNum":" 1826","line":"#line 438 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 1827","line":"    {"},
{"lineNum":" 1828","line":"                    prRule(\"N_INPUTLST\","},
{"lineNum":" 1829","line":"                           \"T_COMMA N_INPUTVAR N_INPUTLST\");"},
{"lineNum":" 1830","line":"                    }"},
{"lineNum":" 1831","line":"#line 1832 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 1832","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1833","line":""},
{"lineNum":" 1834","line":"  case 32:"},
{"lineNum":" 1835","line":"#line 444 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 1836","line":"    {"},
{"lineNum":" 1837","line":"                    prRule(\"N_INPUTVAR\", \"N_VARIABLE\");"},
{"lineNum":" 1838","line":""},
{"lineNum":" 1839","line":"                    \tif((yyvsp[0].typeInfo).type != INT && (yyvsp[0].typeInfo).type != CHAR) {"},
{"lineNum":" 1840","line":"                    \t\t// Handle not int or char arrays"},
{"lineNum":" 1841","line":"                    \t\tif(!((yyvsp[0].typeInfo).entireVar == false && (yyvsp[0].typeInfo).type == ARRAY && (((yyvsp[0].typeInfo).baseType == INT || (yyvsp[0].typeInfo).baseType == CHAR)))) {"},
{"lineNum":" 1842","line":"                    \t\t\tyyerror(\"Input variable must be of type integer or char\");"},
{"lineNum":" 1843","line":"                    \t\t}"},
{"lineNum":" 1844","line":"                    \t\tif((yyvsp[0].typeInfo).type != ARRAY) {"},
{"lineNum":" 1845","line":"                    \t\t\tyyerror(\"Input variable must be of type integer or char\");"},
{"lineNum":" 1846","line":"                    \t\t}"},
{"lineNum":" 1847","line":"                    \t}"},
{"lineNum":" 1848","line":"\t\t\t\t    \t(yyval.typeInfo).type = (yyvsp[0].typeInfo).type;"},
{"lineNum":" 1849","line":"\t                    (yyval.typeInfo).startIndex = (yyvsp[0].typeInfo).startIndex;"},
{"lineNum":" 1850","line":"\t                    (yyval.typeInfo).endIndex = (yyvsp[0].typeInfo).endIndex;"},
{"lineNum":" 1851","line":"\t\t\t         \t(yyval.typeInfo).baseType = (yyvsp[0].typeInfo).baseType;"},
{"lineNum":" 1852","line":"\t\t\t         \t(yyval.typeInfo).entireVar = (yyvsp[0].typeInfo).entireVar;"},
{"lineNum":" 1853","line":"                    }"},
{"lineNum":" 1854","line":"#line 1855 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 1855","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1856","line":""},
{"lineNum":" 1857","line":"  case 33:"},
{"lineNum":" 1858","line":"#line 464 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 1859","line":"    {"},
{"lineNum":" 1860","line":"                    prRule(\"N_INTCONST\", \"N_SIGN T_INTCONST\");"},
{"lineNum":" 1861","line":"\t\t\t    (yyval.num) = (yyvsp[-1].num) * (yyvsp[0].num);"},
{"lineNum":" 1862","line":"                    }"},
{"lineNum":" 1863","line":"#line 1864 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 1864","line":"    break;","class":"lineCov","hits":"1","order":"1191","possible_hits":"1",},
{"lineNum":" 1865","line":""},
{"lineNum":" 1866","line":"  case 34:"},
{"lineNum":" 1867","line":"#line 485 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 1868","line":"    {"},
{"lineNum":" 1869","line":"                    prRule(\"N_MULTOPLST\", \"epsilon\");"},
{"lineNum":" 1870","line":"                    }"},
{"lineNum":" 1871","line":"#line 1872 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 1872","line":"    break;","class":"lineCov","hits":"1","order":"1307","possible_hits":"1",},
{"lineNum":" 1873","line":""},
{"lineNum":" 1874","line":"  case 35:"},
{"lineNum":" 1875","line":"#line 489 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 1876","line":"    {"},
{"lineNum":" 1877","line":"                    prRule(\"N_MULTOPLST\", \"N_MULTOP N_FACTOR N_MULTOPLST\");"},
{"lineNum":" 1878","line":""},
{"lineNum":" 1879","line":"                    \tif((yyvsp[-2].intValue) == ARITHMETIC_OP) {"},
{"lineNum":" 1880","line":"                    \t\tif((yyvsp[-1].typeInfo).type != INT) {"},
{"lineNum":" 1881","line":"                    \t\t\tyyerror(\"Expression must be of type integer\");"},
{"lineNum":" 1882","line":"                    \t\t}"},
{"lineNum":" 1883","line":"                    \t}"},
{"lineNum":" 1884","line":"                    }"},
{"lineNum":" 1885","line":"#line 1886 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 1886","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":" 1887","line":""},
{"lineNum":" 1888","line":"  case 36:"},
{"lineNum":" 1889","line":"#line 500 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 1890","line":"    {"},
{"lineNum":" 1891","line":"                    prRule(\"N_OUTPUT\", \"N_EXPR\");"},
{"lineNum":" 1892","line":""},
{"lineNum":" 1893","line":"                    \tif((yyvsp[0].typeInfo).type != INT && (yyvsp[0].typeInfo).type != CHAR) {"},
{"lineNum":" 1894","line":"                    \t\t// Handle not int or char arrays"},
{"lineNum":" 1895","line":"                    \t\tif(!((yyvsp[0].typeInfo).entireVar == false && (yyvsp[0].typeInfo).type == ARRAY && (((yyvsp[0].typeInfo).baseType == INT || (yyvsp[0].typeInfo).baseType == CHAR)))) {"},
{"lineNum":" 1896","line":"                    \t\t\tyyerror(\"Output expression must be of type integer or char\");"},
{"lineNum":" 1897","line":"                    \t\t}"},
{"lineNum":" 1898","line":"                    \t\tif((yyvsp[0].typeInfo).type != ARRAY) {"},
{"lineNum":" 1899","line":"                    \t\t\tyyerror(\"Output expression must be of type integer or char\");"},
{"lineNum":" 1900","line":"                    \t\t}"},
{"lineNum":" 1901","line":"                    \t}"},
{"lineNum":" 1902","line":""},
{"lineNum":" 1903","line":""},
{"lineNum":" 1904","line":"                    \t(yyval.typeInfo).type = (yyvsp[0].typeInfo).type;"},
{"lineNum":" 1905","line":"                    \t(yyval.typeInfo).startIndex = (yyvsp[0].typeInfo).startIndex;"},
{"lineNum":" 1906","line":"                    \t(yyval.typeInfo).endIndex = (yyvsp[0].typeInfo).endIndex;"},
{"lineNum":" 1907","line":"\t\t         \t\t(yyval.typeInfo).baseType = (yyvsp[0].typeInfo).baseType;"},
{"lineNum":" 1908","line":"                    }"},
{"lineNum":" 1909","line":"#line 1910 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 1910","line":"    break;","class":"lineCov","hits":"1","order":"1334","possible_hits":"1",},
{"lineNum":" 1911","line":""},
{"lineNum":" 1912","line":"  case 37:"},
{"lineNum":" 1913","line":"#line 521 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 1914","line":"    {"},
{"lineNum":" 1915","line":"                    prRule(\"N_OUTPUTLST\", \"epsilon\");"},
{"lineNum":" 1916","line":"                    }"},
{"lineNum":" 1917","line":"#line 1918 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 1918","line":"    break;","class":"lineCov","hits":"1","order":"1338","possible_hits":"1",},
{"lineNum":" 1919","line":""},
{"lineNum":" 1920","line":"  case 38:"},
{"lineNum":" 1921","line":"#line 525 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 1922","line":"    {"},
{"lineNum":" 1923","line":"                    prRule(\"N_OUTPUTLST\", \"T_COMMA N_OUTPUT N_OUTPUTLST\");"},
{"lineNum":" 1924","line":"                    }"},
{"lineNum":" 1925","line":"#line 1926 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 1926","line":"    break;","class":"lineCov","hits":"1","order":"1340","possible_hits":"1",},
{"lineNum":" 1927","line":""},
{"lineNum":" 1928","line":"  case 39:"},
{"lineNum":" 1929","line":"#line 530 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 1930","line":"    {"},
{"lineNum":" 1931","line":"                    prRule(\"N_PROCDEC\", \"N_PROCHDR N_BLOCK\");"},
{"lineNum":" 1932","line":"                    }"},
{"lineNum":" 1933","line":"#line 1934 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 1934","line":"    break;","class":"lineCov","hits":"1","order":"1369","possible_hits":"1",},
{"lineNum":" 1935","line":""},
{"lineNum":" 1936","line":"  case 40:"},
{"lineNum":" 1937","line":"#line 535 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 1938","line":"    {"},
{"lineNum":" 1939","line":"                    prRule(\"N_PROCHDR\","},
{"lineNum":" 1940","line":"                           \"T_PROC T_IDENT T_SCOLON\");"},
{"lineNum":" 1941","line":"\t\t\t    string lexeme = string((yyvsp[-1].text));"},
{"lineNum":" 1942","line":"\t\t\t    TYPE_INFO info = {PROCEDURE, NOT_APPLICABLE,"},
{"lineNum":" 1943","line":"\t\t\t\t           NOT_APPLICABLE, NOT_APPLICABLE};"},
{"lineNum":" 1944","line":"\t\t\t    prSymbolTableAddition(lexeme, info);"},
{"lineNum":" 1945","line":"                    bool success = scopeStack.top().addEntry"},
{"lineNum":" 1946","line":"                               (SYMBOL_TABLE_ENTRY(lexeme,info));"},
{"lineNum":" 1947","line":"                \t    if (! success) {"},
{"lineNum":" 1948","line":"                      yyerror(\"Multiply defined identifier\");"},
{"lineNum":" 1949","line":"                      return(0);"},
{"lineNum":" 1950","line":"                    }"},
{"lineNum":" 1951","line":""},
{"lineNum":" 1952","line":"\t\t\t    beginScope();"},
{"lineNum":" 1953","line":"                    }"},
{"lineNum":" 1954","line":"#line 1955 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 1955","line":"    break;","class":"lineCov","hits":"1","order":"1278","possible_hits":"1",},
{"lineNum":" 1956","line":""},
{"lineNum":" 1957","line":"  case 41:"},
{"lineNum":" 1958","line":"#line 553 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 1959","line":"    {"},
{"lineNum":" 1960","line":"                    prRule(\"N_PROCDECPART\", \"epsilon\");"},
{"lineNum":" 1961","line":"                    }"},
{"lineNum":" 1962","line":"#line 1963 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 1963","line":"    break;","class":"lineCov","hits":"1","order":"1284","possible_hits":"1",},
{"lineNum":" 1964","line":""},
{"lineNum":" 1965","line":"  case 42:"},
{"lineNum":" 1966","line":"#line 557 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 1967","line":"    {"},
{"lineNum":" 1968","line":"                    prRule(\"N_PROCDECPART\","},
{"lineNum":" 1969","line":"                           \"N_PROCDEC T_SCOLON N_PROCDECPART\");"},
{"lineNum":" 1970","line":"                    }"},
{"lineNum":" 1971","line":"#line 1972 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 1972","line":"    break;","class":"lineCov","hits":"1","order":"1371","possible_hits":"1",},
{"lineNum":" 1973","line":""},
{"lineNum":" 1974","line":"  case 43:"},
{"lineNum":" 1975","line":"#line 563 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 1976","line":"    {"},
{"lineNum":" 1977","line":"                    prRule(\"N_PROCIDENT\", \"T_IDENT\");"},
{"lineNum":" 1978","line":"\t\t\t    string ident = string((yyvsp[0].text));"},
{"lineNum":" 1979","line":"                \t    TYPE_INFO typeInfo ="},
{"lineNum":" 1980","line":"\t\t\t\t\t\tfindEntryInAnyScope(ident);"},
{"lineNum":" 1981","line":"                \t    if (typeInfo.type == UNDEFINED) {"},
{"lineNum":" 1982","line":"                \t      yyerror(\"Undefined identifier\");"},
{"lineNum":" 1983","line":"                \t      return(0);"},
{"lineNum":" 1984","line":"               \t    }"},
{"lineNum":" 1985","line":"\t\t\t    (yyval.typeInfo).type = typeInfo.type;"},
{"lineNum":" 1986","line":"\t\t\t    (yyval.typeInfo).startIndex = typeInfo.startIndex;"},
{"lineNum":" 1987","line":"\t\t\t    (yyval.typeInfo).endIndex = typeInfo.endIndex;"},
{"lineNum":" 1988","line":"\t\t\t    (yyval.typeInfo).baseType = typeInfo.baseType;"},
{"lineNum":" 1989","line":"                    }"},
{"lineNum":" 1990","line":"#line 1991 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 1991","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1992","line":""},
{"lineNum":" 1993","line":"  case 44:"},
{"lineNum":" 1994","line":"#line 579 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 1995","line":"    {"},
{"lineNum":" 1996","line":"                    prRule(\"N_PROCSTMT\", \"N_PROCIDENT\");"},
{"lineNum":" 1997","line":"\t\t\t    (yyval.typeInfo).type = (yyvsp[0].typeInfo).type;"},
{"lineNum":" 1998","line":"\t\t\t    (yyval.typeInfo).startIndex = (yyvsp[0].typeInfo).startIndex;"},
{"lineNum":" 1999","line":"\t\t\t    (yyval.typeInfo).endIndex = (yyvsp[0].typeInfo).endIndex;"},
{"lineNum":" 2000","line":"\t\t\t    (yyval.typeInfo).baseType = (yyvsp[0].typeInfo).baseType;"},
{"lineNum":" 2001","line":"                    }"},
{"lineNum":" 2002","line":"#line 2003 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2003","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2004","line":""},
{"lineNum":" 2005","line":"  case 45:"},
{"lineNum":" 2006","line":"#line 588 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2007","line":"    {"},
{"lineNum":" 2008","line":"                    prRule(\"N_PROG\","},
{"lineNum":" 2009","line":"                     \"N_PROGLBL T_IDENT T_SCOLON N_BLOCK T_DOT\");"},
{"lineNum":" 2010","line":"\t\t\t    string lexeme = string((yyvsp[-1].text));"},
{"lineNum":" 2011","line":"\t\t\t    TYPE_INFO info = {PROGRAM, NOT_APPLICABLE,"},
{"lineNum":" 2012","line":"\t\t\t\t           NOT_APPLICABLE, NOT_APPLICABLE};"},
{"lineNum":" 2013","line":"\t\t\t    prSymbolTableAddition(lexeme, info);"},
{"lineNum":" 2014","line":"                    bool success = scopeStack.top().addEntry"},
{"lineNum":" 2015","line":"                               (SYMBOL_TABLE_ENTRY(lexeme,info));"},
{"lineNum":" 2016","line":"\t\t\t    }"},
{"lineNum":" 2017","line":"#line 2018 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2018","line":"    break;","class":"lineCov","hits":"1","order":"959","possible_hits":"1",},
{"lineNum":" 2019","line":""},
{"lineNum":" 2020","line":"  case 46:"},
{"lineNum":" 2021","line":"#line 599 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2022","line":"    { }"},
{"lineNum":" 2023","line":"#line 2024 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2024","line":"    break;"},
{"lineNum":" 2025","line":""},
{"lineNum":" 2026","line":"  case 47:"},
{"lineNum":" 2027","line":"#line 602 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2028","line":"    {"},
{"lineNum":" 2029","line":"                    prRule(\"N_PROGLBL\", \"T_PROG\");"},
{"lineNum":" 2030","line":"\t\t\t    beginScope();"},
{"lineNum":" 2031","line":"                    }"},
{"lineNum":" 2032","line":"#line 2033 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2033","line":"    break;","class":"lineCov","hits":"1","order":"793","possible_hits":"1",},
{"lineNum":" 2034","line":""},
{"lineNum":" 2035","line":"  case 48:"},
{"lineNum":" 2036","line":"#line 608 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2037","line":"    {"},
{"lineNum":" 2038","line":"                    prRule(\"N_READ\","},
{"lineNum":" 2039","line":"                        \"T_READ T_LPAREN N_INPUTVAR N_INPUTLST T_RPAREN\");"},
{"lineNum":" 2040","line":"\t\t\t   }"},
{"lineNum":" 2041","line":"#line 2042 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2042","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2043","line":""},
{"lineNum":" 2044","line":"  case 49:"},
{"lineNum":" 2045","line":"#line 614 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2046","line":"    {"},
{"lineNum":" 2047","line":"                    prRule(\"N_RELOP\", \"T_LT\");"},
{"lineNum":" 2048","line":"                    }"},
{"lineNum":" 2049","line":"#line 2050 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2050","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2051","line":""},
{"lineNum":" 2052","line":"  case 50:"},
{"lineNum":" 2053","line":"#line 618 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2054","line":"    {"},
{"lineNum":" 2055","line":"                    prRule(\"N_RELOP\", \"T_GT\");"},
{"lineNum":" 2056","line":"                    }"},
{"lineNum":" 2057","line":"#line 2058 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2058","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2059","line":""},
{"lineNum":" 2060","line":"  case 51:"},
{"lineNum":" 2061","line":"#line 622 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2062","line":"    {"},
{"lineNum":" 2063","line":"                    prRule(\"N_RELOP\", \"T_LE\");"},
{"lineNum":" 2064","line":"                    }"},
{"lineNum":" 2065","line":"#line 2066 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2066","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2067","line":""},
{"lineNum":" 2068","line":"  case 52:"},
{"lineNum":" 2069","line":"#line 626 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2070","line":"    {"},
{"lineNum":" 2071","line":"                    prRule(\"N_RELOP\", \"T_GE\");"},
{"lineNum":" 2072","line":"                    }"},
{"lineNum":" 2073","line":"#line 2074 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2074","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2075","line":""},
{"lineNum":" 2076","line":"  case 53:"},
{"lineNum":" 2077","line":"#line 630 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2078","line":"    {"},
{"lineNum":" 2079","line":"                    prRule(\"N_RELOP\", \"T_EQ\");"},
{"lineNum":" 2080","line":"                    }"},
{"lineNum":" 2081","line":"#line 2082 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2082","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2083","line":""},
{"lineNum":" 2084","line":"  case 54:"},
{"lineNum":" 2085","line":"#line 634 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2086","line":"    {"},
{"lineNum":" 2087","line":"                    prRule(\"N_RELOP\", \"T_NE\");"},
{"lineNum":" 2088","line":"                    }"},
{"lineNum":" 2089","line":"#line 2090 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2090","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2091","line":""},
{"lineNum":" 2092","line":"  case 55:"},
{"lineNum":" 2093","line":"#line 639 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2094","line":"    {"},
{"lineNum":" 2095","line":"                    prRule(\"N_SIGN\", \"epsilon\");"},
{"lineNum":" 2096","line":"\t\t\t    (yyval.num) = POSITIVE;"},
{"lineNum":" 2097","line":"                    }"},
{"lineNum":" 2098","line":"#line 2099 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2099","line":"    break;","class":"lineCov","hits":"1","order":"1188","possible_hits":"1",},
{"lineNum":" 2100","line":""},
{"lineNum":" 2101","line":"  case 56:"},
{"lineNum":" 2102","line":"#line 644 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2103","line":"    {"},
{"lineNum":" 2104","line":"                    prRule(\"N_SIGN\", \"T_PLUS\");"},
{"lineNum":" 2105","line":"\t\t\t    (yyval.num) = POSITIVE;"},
{"lineNum":" 2106","line":"                    }"},
{"lineNum":" 2107","line":"#line 2108 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2108","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2109","line":""},
{"lineNum":" 2110","line":"  case 57:"},
{"lineNum":" 2111","line":"#line 649 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2112","line":"    {"},
{"lineNum":" 2113","line":"                    prRule(\"N_SIGN\", \"T_MINUS\");"},
{"lineNum":" 2114","line":"\t\t\t    (yyval.num) = NEGATIVE;"},
{"lineNum":" 2115","line":"                    }"},
{"lineNum":" 2116","line":"#line 2117 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2117","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2118","line":""},
{"lineNum":" 2119","line":"  case 58:"},
{"lineNum":" 2120","line":"#line 655 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2121","line":"    {"},
{"lineNum":" 2122","line":"                    prRule(\"N_SIMPLE\", \"T_INT\");"},
{"lineNum":" 2123","line":"\t\t\t    (yyval.typeInfo).type = INT;"},
{"lineNum":" 2124","line":"                    (yyval.typeInfo).startIndex = NOT_APPLICABLE;"},
{"lineNum":" 2125","line":"                    (yyval.typeInfo).endIndex = NOT_APPLICABLE;"},
{"lineNum":" 2126","line":"\t\t         (yyval.typeInfo).baseType = NOT_APPLICABLE;"},
{"lineNum":" 2127","line":"                    }"},
{"lineNum":" 2128","line":"#line 2129 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2129","line":"    break;","class":"lineCov","hits":"1","order":"977","possible_hits":"1",},
{"lineNum":" 2130","line":""},
{"lineNum":" 2131","line":"  case 59:"},
{"lineNum":" 2132","line":"#line 663 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2133","line":"    {"},
{"lineNum":" 2134","line":"                    prRule(\"N_SIMPLE\", \"T_CHAR\");"},
{"lineNum":" 2135","line":"\t\t\t    (yyval.typeInfo).type = CHAR;"},
{"lineNum":" 2136","line":"                    (yyval.typeInfo).startIndex = NOT_APPLICABLE;"},
{"lineNum":" 2137","line":"                    (yyval.typeInfo).endIndex = NOT_APPLICABLE;"},
{"lineNum":" 2138","line":"\t\t         (yyval.typeInfo).baseType = NOT_APPLICABLE;"},
{"lineNum":" 2139","line":"                    }"},
{"lineNum":" 2140","line":"#line 2141 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2141","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2142","line":""},
{"lineNum":" 2143","line":"  case 60:"},
{"lineNum":" 2144","line":"#line 671 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2145","line":"    {"},
{"lineNum":" 2146","line":"                    prRule(\"N_SIMPLE\", \"T_BOOL\");"},
{"lineNum":" 2147","line":"\t\t\t    (yyval.typeInfo).type = BOOL;"},
{"lineNum":" 2148","line":"                    (yyval.typeInfo).startIndex = NOT_APPLICABLE;"},
{"lineNum":" 2149","line":"                    (yyval.typeInfo).endIndex = NOT_APPLICABLE;"},
{"lineNum":" 2150","line":"\t\t         (yyval.typeInfo).baseType = NOT_APPLICABLE;"},
{"lineNum":" 2151","line":"                    }"},
{"lineNum":" 2152","line":"#line 2153 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2153","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2154","line":""},
{"lineNum":" 2155","line":"  case 61:"},
{"lineNum":" 2156","line":"#line 680 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2157","line":"    {"},
{"lineNum":" 2158","line":"                    prRule(\"N_SIMPLEEXPR\","},
{"lineNum":" 2159","line":"                           \"N_TERM N_ADDOPLST\");"},
{"lineNum":" 2160","line":"\t\t\t    (yyval.typeInfo).type = (yyvsp[-1].typeInfo).type;"},
{"lineNum":" 2161","line":"                    (yyval.typeInfo).startIndex = (yyvsp[-1].typeInfo).startIndex;"},
{"lineNum":" 2162","line":"                    (yyval.typeInfo).endIndex = (yyvsp[-1].typeInfo).endIndex;"},
{"lineNum":" 2163","line":"\t\t         (yyval.typeInfo).baseType = (yyvsp[-1].typeInfo).baseType;"},
{"lineNum":" 2164","line":"                    }"},
{"lineNum":" 2165","line":"#line 2166 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2166","line":"    break;","class":"lineCov","hits":"1","order":"1321","possible_hits":"1",},
{"lineNum":" 2167","line":""},
{"lineNum":" 2168","line":"  case 62:"},
{"lineNum":" 2169","line":"#line 690 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2170","line":"    {"},
{"lineNum":" 2171","line":"                    prRule(\"N_STMT\", \"N_ASSIGN\");"},
{"lineNum":" 2172","line":"                    }"},
{"lineNum":" 2173","line":"#line 2174 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2174","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2175","line":""},
{"lineNum":" 2176","line":"  case 63:"},
{"lineNum":" 2177","line":"#line 694 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2178","line":"    {"},
{"lineNum":" 2179","line":"                    prRule(\"N_STMT\", \"N_PROCSTMT\");"},
{"lineNum":" 2180","line":"                    }"},
{"lineNum":" 2181","line":"#line 2182 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2182","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2183","line":""},
{"lineNum":" 2184","line":"  case 64:"},
{"lineNum":" 2185","line":"#line 698 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2186","line":"    {"},
{"lineNum":" 2187","line":"                    prRule(\"N_STMT\", \"N_READ\");"},
{"lineNum":" 2188","line":"                    }"},
{"lineNum":" 2189","line":"#line 2190 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2190","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2191","line":""},
{"lineNum":" 2192","line":"  case 65:"},
{"lineNum":" 2193","line":"#line 702 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2194","line":"    {"},
{"lineNum":" 2195","line":"                    prRule(\"N_STMT\", \"N_WRITE\");"},
{"lineNum":" 2196","line":"                    }"},
{"lineNum":" 2197","line":"#line 2198 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2198","line":"    break;","class":"lineCov","hits":"1","order":"1344","possible_hits":"1",},
{"lineNum":" 2199","line":""},
{"lineNum":" 2200","line":"  case 66:"},
{"lineNum":" 2201","line":"#line 706 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2202","line":"    {"},
{"lineNum":" 2203","line":"                    prRule(\"N_STMT\", \"N_CONDITION\");"},
{"lineNum":" 2204","line":"                    }"},
{"lineNum":" 2205","line":"#line 2206 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2206","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2207","line":""},
{"lineNum":" 2208","line":"  case 67:"},
{"lineNum":" 2209","line":"#line 710 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2210","line":"    {"},
{"lineNum":" 2211","line":"                    prRule(\"N_STMT\", \"N_WHILE\");"},
{"lineNum":" 2212","line":"                    }"},
{"lineNum":" 2213","line":"#line 2214 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2214","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2215","line":""},
{"lineNum":" 2216","line":"  case 68:"},
{"lineNum":" 2217","line":"#line 714 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2218","line":"    {"},
{"lineNum":" 2219","line":"                    prRule(\"N_STMT\", \"N_COMPOUND\");"},
{"lineNum":" 2220","line":"                    }"},
{"lineNum":" 2221","line":"#line 2222 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2222","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2223","line":""},
{"lineNum":" 2224","line":"  case 69:"},
{"lineNum":" 2225","line":"#line 719 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2226","line":"    {"},
{"lineNum":" 2227","line":"                    prRule(\"N_STMTLST\", \"epsilon\");"},
{"lineNum":" 2228","line":"                    }"},
{"lineNum":" 2229","line":"#line 2230 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2230","line":"    break;","class":"lineCov","hits":"1","order":"1348","possible_hits":"1",},
{"lineNum":" 2231","line":""},
{"lineNum":" 2232","line":"  case 70:"},
{"lineNum":" 2233","line":"#line 723 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2234","line":"    {"},
{"lineNum":" 2235","line":"                    prRule(\"N_STMTLST\","},
{"lineNum":" 2236","line":"                           \"T_SCOLON N_STMT N_STMTLST\");"},
{"lineNum":" 2237","line":"                    }"},
{"lineNum":" 2238","line":"#line 2239 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2239","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2240","line":""},
{"lineNum":" 2241","line":"  case 71:"},
{"lineNum":" 2242","line":"#line 729 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2243","line":"    {"},
{"lineNum":" 2244","line":"                    prRule(\"N_STMTPART\", \"N_COMPOUND\");"},
{"lineNum":" 2245","line":"                    }"},
{"lineNum":" 2246","line":"#line 2247 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2247","line":"    break;","class":"lineCov","hits":"1","order":"1352","possible_hits":"1",},
{"lineNum":" 2248","line":""},
{"lineNum":" 2249","line":"  case 72:"},
{"lineNum":" 2250","line":"#line 734 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2251","line":"    {"},
{"lineNum":" 2252","line":"                    prRule(\"N_TERM\", \"N_FACTOR N_MULTOPLST\");"},
{"lineNum":" 2253","line":"\t\t\t    (yyval.typeInfo).type = (yyvsp[-1].typeInfo).type;"},
{"lineNum":" 2254","line":"                    (yyval.typeInfo).startIndex = (yyvsp[-1].typeInfo).startIndex;"},
{"lineNum":" 2255","line":"                    (yyval.typeInfo).endIndex = (yyvsp[-1].typeInfo).endIndex;"},
{"lineNum":" 2256","line":"\t\t         (yyval.typeInfo).baseType = (yyvsp[-1].typeInfo).baseType;"},
{"lineNum":" 2257","line":"                    }"},
{"lineNum":" 2258","line":"#line 2259 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2259","line":"    break;","class":"lineCov","hits":"1","order":"1313","possible_hits":"1",},
{"lineNum":" 2260","line":""},
{"lineNum":" 2261","line":"  case 73:"},
{"lineNum":" 2262","line":"#line 743 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2263","line":"    {"},
{"lineNum":" 2264","line":"                    prRule(\"N_TYPE\", \"N_SIMPLE\");"},
{"lineNum":" 2265","line":"\t\t\t    (yyval.typeInfo).type = (yyvsp[0].typeInfo).type;"},
{"lineNum":" 2266","line":"                    (yyval.typeInfo).startIndex = (yyvsp[0].typeInfo).startIndex;"},
{"lineNum":" 2267","line":"                    (yyval.typeInfo).endIndex = (yyvsp[0].typeInfo).endIndex;"},
{"lineNum":" 2268","line":"\t\t         (yyval.typeInfo).baseType = (yyvsp[0].typeInfo).baseType;"},
{"lineNum":" 2269","line":"                    }"},
{"lineNum":" 2270","line":"#line 2271 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2271","line":"    break;","class":"lineCov","hits":"1","order":"983","possible_hits":"1",},
{"lineNum":" 2272","line":""},
{"lineNum":" 2273","line":"  case 74:"},
{"lineNum":" 2274","line":"#line 751 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2275","line":"    {"},
{"lineNum":" 2276","line":"                    prRule(\"N_TYPE\", \"N_ARRAY\");"},
{"lineNum":" 2277","line":"\t\t\t    (yyval.typeInfo).type = (yyvsp[0].typeInfo).type;"},
{"lineNum":" 2278","line":"                    (yyval.typeInfo).startIndex = (yyvsp[0].typeInfo).startIndex;"},
{"lineNum":" 2279","line":"                    (yyval.typeInfo).endIndex = (yyvsp[0].typeInfo).endIndex;"},
{"lineNum":" 2280","line":"\t\t         (yyval.typeInfo).baseType = (yyvsp[0].typeInfo).baseType;"},
{"lineNum":" 2281","line":"                    }"},
{"lineNum":" 2282","line":"#line 2283 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2283","line":"    break;","class":"lineCov","hits":"1","order":"1219","possible_hits":"1",},
{"lineNum":" 2284","line":""},
{"lineNum":" 2285","line":"  case 75:"},
{"lineNum":" 2286","line":"#line 760 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2287","line":"    {"},
{"lineNum":" 2288","line":"                    prRule(\"N_VARDEC\","},
{"lineNum":" 2289","line":"                           \"N_IDENT N_IDENTLST T_COLON N_TYPE\");"},
{"lineNum":" 2290","line":"\t\t\t    string varName = string((yyvsp[-3].text));"},
{"lineNum":" 2291","line":"\t\t\t    variableNames.push_front(varName);"},
{"lineNum":" 2292","line":""},
{"lineNum":" 2293","line":"\t\t\t    for (std::list<string>::iterator"},
{"lineNum":" 2294","line":"                          it=variableNames.begin();"},
{"lineNum":" 2295","line":"\t\t\t          it != variableNames.end(); it++) {"},
{"lineNum":" 2296","line":"\t\t\t\t string varName = string(*it);"},
{"lineNum":" 2297","line":"\t\t\t       prSymbolTableAddition(varName, (yyvsp[0].typeInfo));"},
{"lineNum":" 2298","line":"                       bool success = scopeStack.top().addEntry"},
{"lineNum":" 2299","line":"                               (SYMBOL_TABLE_ENTRY(varName, (yyvsp[0].typeInfo)));"},
{"lineNum":" 2300","line":"                \t       if (! success) {"},
{"lineNum":" 2301","line":"                         yyerror(\"Multiply defined identifier\");"},
{"lineNum":" 2302","line":"                         return(0);"},
{"lineNum":" 2303","line":"               \t       }"},
{"lineNum":" 2304","line":"\t\t\t\t}"},
{"lineNum":" 2305","line":"                     variableNames.clear();"},
{"lineNum":" 2306","line":"                    }"},
{"lineNum":" 2307","line":"#line 2308 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2308","line":"    break;","class":"lineCov","hits":"1","order":"1140","possible_hits":"1",},
{"lineNum":" 2309","line":""},
{"lineNum":" 2310","line":"  case 76:"},
{"lineNum":" 2311","line":"#line 782 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2312","line":"    {"},
{"lineNum":" 2313","line":"                    prRule(\"N_VARDECLST\", \"epsilon\");"},
{"lineNum":" 2314","line":"                    }"},
{"lineNum":" 2315","line":"#line 2316 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2316","line":"    break;","class":"lineCov","hits":"1","order":"1231","possible_hits":"1",},
{"lineNum":" 2317","line":""},
{"lineNum":" 2318","line":"  case 77:"},
{"lineNum":" 2319","line":"#line 786 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2320","line":"    {"},
{"lineNum":" 2321","line":"                    prRule(\"N_VARDECLST\","},
{"lineNum":" 2322","line":"                           \"N_VARDEC T_SCOLON N_VARDECLST\");"},
{"lineNum":" 2323","line":"                   }"},
{"lineNum":" 2324","line":"#line 2325 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2325","line":"    break;","class":"lineCov","hits":"1","order":"1233","possible_hits":"1",},
{"lineNum":" 2326","line":""},
{"lineNum":" 2327","line":"  case 78:"},
{"lineNum":" 2328","line":"#line 792 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2329","line":"    {"},
{"lineNum":" 2330","line":"                    prRule(\"N_VARDECPART\", \"epsilon\");"},
{"lineNum":" 2331","line":"                    }"},
{"lineNum":" 2332","line":"#line 2333 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2333","line":"    break;","class":"lineCov","hits":"1","order":"1282","possible_hits":"1",},
{"lineNum":" 2334","line":""},
{"lineNum":" 2335","line":"  case 79:"},
{"lineNum":" 2336","line":"#line 796 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2337","line":"    {"},
{"lineNum":" 2338","line":"                    prRule(\"N_VARDECPART\","},
{"lineNum":" 2339","line":"                        \"T_VAR N_VARDEC T_SCOLON N_VARDECLST\");"},
{"lineNum":" 2340","line":"                    }"},
{"lineNum":" 2341","line":"#line 2342 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2342","line":"    break;","class":"lineCov","hits":"1","order":"1235","possible_hits":"1",},
{"lineNum":" 2343","line":""},
{"lineNum":" 2344","line":"  case 80:"},
{"lineNum":" 2345","line":"#line 802 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2346","line":"    {"},
{"lineNum":" 2347","line":"                    prRule(\"N_VARIABLE\", \"N_ENTIREVAR\");"},
{"lineNum":" 2348","line":"\t\t\t    (yyval.typeInfo).type = (yyvsp[0].typeInfo).type;"},
{"lineNum":" 2349","line":"\t\t\t    (yyval.typeInfo).startIndex = (yyvsp[0].typeInfo).startIndex;"},
{"lineNum":" 2350","line":"\t\t\t    (yyval.typeInfo).endIndex = (yyvsp[0].typeInfo).endIndex;"},
{"lineNum":" 2351","line":"\t\t\t    (yyval.typeInfo).baseType = (yyvsp[0].typeInfo).baseType;"},
{"lineNum":" 2352","line":"\t\t\t    (yyval.typeInfo).entireVar = true;"},
{"lineNum":" 2353","line":"                    }"},
{"lineNum":" 2354","line":"#line 2355 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2355","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2356","line":""},
{"lineNum":" 2357","line":"  case 81:"},
{"lineNum":" 2358","line":"#line 811 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2359","line":"    {"},
{"lineNum":" 2360","line":"                    prRule(\"N_VARIABLE\", \"N_IDXVAR\");"},
{"lineNum":" 2361","line":"\t\t\t    (yyval.typeInfo).type = (yyvsp[0].typeInfo).type;"},
{"lineNum":" 2362","line":"\t\t\t    (yyval.typeInfo).startIndex = (yyvsp[0].typeInfo).startIndex;"},
{"lineNum":" 2363","line":"\t\t\t    (yyval.typeInfo).endIndex = (yyvsp[0].typeInfo).endIndex;"},
{"lineNum":" 2364","line":"\t\t\t    (yyval.typeInfo).baseType = (yyvsp[0].typeInfo).baseType;"},
{"lineNum":" 2365","line":"\t\t\t    (yyval.typeInfo).entireVar = false;"},
{"lineNum":" 2366","line":"                    }"},
{"lineNum":" 2367","line":"#line 2368 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2368","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2369","line":""},
{"lineNum":" 2370","line":"  case 82:"},
{"lineNum":" 2371","line":"#line 821 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2372","line":"    {"},
{"lineNum":" 2373","line":"                    prRule(\"N_VARIDENT\", \"T_IDENT\");"},
{"lineNum":" 2374","line":"\t\t\t    string ident = string((yyvsp[0].text));"},
{"lineNum":" 2375","line":"                \t    TYPE_INFO typeInfo ="},
{"lineNum":" 2376","line":"\t\t\t\t\t\tfindEntryInAnyScope(ident);"},
{"lineNum":" 2377","line":"                \t    if (typeInfo.type == UNDEFINED) {"},
{"lineNum":" 2378","line":"                \t      yyerror(\"Undefined identifier\");"},
{"lineNum":" 2379","line":"                \t      return(0);"},
{"lineNum":" 2380","line":"               \t    }"},
{"lineNum":" 2381","line":"\t\t\t    (yyval.typeInfo).type = typeInfo.type;"},
{"lineNum":" 2382","line":"\t\t\t    (yyval.typeInfo).startIndex = typeInfo.startIndex;"},
{"lineNum":" 2383","line":"\t\t\t    (yyval.typeInfo).endIndex = typeInfo.endIndex;"},
{"lineNum":" 2384","line":"\t\t\t    (yyval.typeInfo).baseType = typeInfo.baseType;"},
{"lineNum":" 2385","line":"\t\t\t    }"},
{"lineNum":" 2386","line":"#line 2387 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2387","line":"    break;","class":"lineCov","hits":"1","order":"1413","possible_hits":"1",},
{"lineNum":" 2388","line":""},
{"lineNum":" 2389","line":"  case 83:"},
{"lineNum":" 2390","line":"#line 836 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2391","line":"    {"},
{"lineNum":" 2392","line":"\t\t\t\t\t\tif((yyvsp[0].typeInfo).type != BOOL) {"},
{"lineNum":" 2393","line":"\t                    \tyyerror(\"Expression must be of type boolean\");"},
{"lineNum":" 2394","line":"\t                    }"},
{"lineNum":" 2395","line":"\t\t\t\t\t}"},
{"lineNum":" 2396","line":"#line 2397 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2397","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":" 2398","line":""},
{"lineNum":" 2399","line":"  case 84:"},
{"lineNum":" 2400","line":"#line 842 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2401","line":"    {"},
{"lineNum":" 2402","line":"                    prRule(\"N_WHILE\","},
{"lineNum":" 2403","line":"                           \"T_WHILE N_EXPR T_DO N_STMT\");"},
{"lineNum":" 2404","line":"                    }"},
{"lineNum":" 2405","line":"#line 2406 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2406","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2407","line":""},
{"lineNum":" 2408","line":"  case 85:"},
{"lineNum":" 2409","line":"#line 848 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2410","line":"    {"},
{"lineNum":" 2411","line":"                    prRule(\"N_WRITE\","},
{"lineNum":" 2412","line":"                      \"T_WRITE T_LPAREN N_OUTPUT N_OUTPUTLST T_RPAREN\");"},
{"lineNum":" 2413","line":""},
{"lineNum":" 2414","line":"                    }"},
{"lineNum":" 2415","line":"#line 2416 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2416","line":"    break;","class":"lineCov","hits":"1","order":"1342","possible_hits":"1",},
{"lineNum":" 2417","line":""},
{"lineNum":" 2418","line":"  case 86:"},
{"lineNum":" 2419","line":"#line 855 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2420","line":"    {"},
{"lineNum":" 2421","line":"\t\t\t\t\t\tprRule(\"N_ADD_OP\", \"N_ADD_OP_LOGICAL\");"},
{"lineNum":" 2422","line":"\t\t\t\t\t\t(yyval.intValue) = LOGICAL_OP;"},
{"lineNum":" 2423","line":"\t\t\t\t\t}"},
{"lineNum":" 2424","line":"#line 2425 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2425","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2426","line":""},
{"lineNum":" 2427","line":"  case 87:"},
{"lineNum":" 2428","line":"#line 860 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2429","line":"    {"},
{"lineNum":" 2430","line":"\t\t\t\t\t\tprRule(\"N_ADD_OP\", \"N_ADD_OP_ARITHMETIC\");"},
{"lineNum":" 2431","line":"\t\t\t\t\t\t(yyval.intValue) = ARITHMETIC_OP;"},
{"lineNum":" 2432","line":"\t\t\t\t\t}"},
{"lineNum":" 2433","line":"#line 2434 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2434","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2435","line":""},
{"lineNum":" 2436","line":"  case 88:"},
{"lineNum":" 2437","line":"#line 866 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2438","line":"    {"},
{"lineNum":" 2439","line":"\t\t\t\t\t\tprRule(\"N_ADD_OP_LOGICAL\", \"T_OR\");"},
{"lineNum":" 2440","line":"\t\t\t\t\t}"},
{"lineNum":" 2441","line":"#line 2442 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2442","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2443","line":""},
{"lineNum":" 2444","line":"  case 89:"},
{"lineNum":" 2445","line":"#line 871 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2446","line":"    {"},
{"lineNum":" 2447","line":"\t\t\t\t\t\tprRule(\"N_ADD_OP_ARITHMETIC\", \"T_PLUS\");"},
{"lineNum":" 2448","line":"\t\t\t\t\t}"},
{"lineNum":" 2449","line":"#line 2450 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2450","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2451","line":""},
{"lineNum":" 2452","line":"  case 90:"},
{"lineNum":" 2453","line":"#line 875 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2454","line":"    {"},
{"lineNum":" 2455","line":"\t\t\t\t\t\tprRule(\"N_ADD_OP_ARITHMETIC\", \"T_MINUS\");"},
{"lineNum":" 2456","line":"\t\t\t\t\t}"},
{"lineNum":" 2457","line":"#line 2458 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2458","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2459","line":""},
{"lineNum":" 2460","line":"  case 91:"},
{"lineNum":" 2461","line":"#line 880 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2462","line":"    {"},
{"lineNum":" 2463","line":"\t\t\t\t\t\tprRule(\"N_MULT_OP\", \"N_MULT_OP_LOGICAL\");"},
{"lineNum":" 2464","line":"\t\t\t\t\t\t(yyval.intValue) = LOGICAL_OP;"},
{"lineNum":" 2465","line":"\t\t\t\t\t}"},
{"lineNum":" 2466","line":"#line 2467 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2467","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2468","line":""},
{"lineNum":" 2469","line":"  case 92:"},
{"lineNum":" 2470","line":"#line 885 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2471","line":"    {"},
{"lineNum":" 2472","line":"\t\t\t\t\t\tprRule(\"N_MULT_OP\", \"N_MULT_OP_ARITHMETIC\");"},
{"lineNum":" 2473","line":"\t\t\t\t\t\t(yyval.intValue) = ARITHMETIC_OP;"},
{"lineNum":" 2474","line":"\t\t\t\t\t}"},
{"lineNum":" 2475","line":"#line 2476 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2476","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2477","line":""},
{"lineNum":" 2478","line":"  case 93:"},
{"lineNum":" 2479","line":"#line 891 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2480","line":"    {"},
{"lineNum":" 2481","line":"\t\t\t\t\t\tprRule(\"N_MULT_OP_LOGICAL\", \"T_AND\");"},
{"lineNum":" 2482","line":"\t\t\t\t\t}"},
{"lineNum":" 2483","line":"#line 2484 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2484","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2485","line":""},
{"lineNum":" 2486","line":"  case 94:"},
{"lineNum":" 2487","line":"#line 896 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2488","line":"    {"},
{"lineNum":" 2489","line":"\t\t\t\t\t\tprRule(\"N_MULT_OP_ARITHMETIC\", \"T_MULT\");"},
{"lineNum":" 2490","line":"\t\t\t\t\t}"},
{"lineNum":" 2491","line":"#line 2492 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2492","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2493","line":""},
{"lineNum":" 2494","line":"  case 95:"},
{"lineNum":" 2495","line":"#line 900 \"mipl.y\" /* yacc.c:1646  */"},
{"lineNum":" 2496","line":"    {"},
{"lineNum":" 2497","line":"\t\t\t\t\t\tprRule(\"N_MULT_OP_ARITHMETIC\", \"T_DIV\");"},
{"lineNum":" 2498","line":"\t\t\t\t\t}"},
{"lineNum":" 2499","line":"#line 2500 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2500","line":"    break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2501","line":""},
{"lineNum":" 2502","line":""},
{"lineNum":" 2503","line":"#line 2504 \"mipl.tab.c\" /* yacc.c:1646  */"},
{"lineNum":" 2504","line":"      default: break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2505","line":"    }"},
{"lineNum":" 2506","line":"  /* User semantic actions sometimes alter yychar, and that requires"},
{"lineNum":" 2507","line":"     that yytoken be updated with the new translation.  We take the"},
{"lineNum":" 2508","line":"     approach of translating immediately before every use of yytoken."},
{"lineNum":" 2509","line":"     One alternative is translating here after every semantic action,"},
{"lineNum":" 2510","line":"     but that translation would be missed if the semantic action invokes"},
{"lineNum":" 2511","line":"     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or"},
{"lineNum":" 2512","line":"     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an"},
{"lineNum":" 2513","line":"     incorrect destructor might then be invoked immediately.  In the"},
{"lineNum":" 2514","line":"     case of YYERROR or YYBACKUP, subsequent parser actions might lead"},
{"lineNum":" 2515","line":"     to an incorrect destructor call or verbose syntax error message"},
{"lineNum":" 2516","line":"     before the lookahead is translated.  */"},
{"lineNum":" 2517","line":"  YY_SYMBOL_PRINT (\"-> $$ =\", yyr1[yyn], &yyval, &yyloc);"},
{"lineNum":" 2518","line":""},
{"lineNum":" 2519","line":"  YYPOPSTACK (yylen);","class":"lineCov","hits":"1","order":"794","possible_hits":"1",},
{"lineNum":" 2520","line":"  yylen = 0;","class":"lineCov","hits":"1","order":"795","possible_hits":"1",},
{"lineNum":" 2521","line":"  YY_STACK_PRINT (yyss, yyssp);"},
{"lineNum":" 2522","line":""},
{"lineNum":" 2523","line":"  *++yyvsp = yyval;","class":"lineCov","hits":"1","order":"796","possible_hits":"1",},
{"lineNum":" 2524","line":""},
{"lineNum":" 2525","line":"  /* Now \'shift\' the result of the reduction.  Determine what state"},
{"lineNum":" 2526","line":"     that goes to, based on the state we popped back to and the rule"},
{"lineNum":" 2527","line":"     number reduced by.  */"},
{"lineNum":" 2528","line":""},
{"lineNum":" 2529","line":"  yyn = yyr1[yyn];","class":"lineCov","hits":"1","order":"797","possible_hits":"1",},
{"lineNum":" 2530","line":""},
{"lineNum":" 2531","line":"  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;","class":"lineCov","hits":"1","order":"798","possible_hits":"1",},
{"lineNum":" 2532","line":"  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)","class":"lineCov","hits":"1","order":"799","possible_hits":"1",},
{"lineNum":" 2533","line":"    yystate = yytable[yystate];","class":"lineCov","hits":"1","order":"1141","possible_hits":"1",},
{"lineNum":" 2534","line":"  else"},
{"lineNum":" 2535","line":"    yystate = yydefgoto[yyn - YYNTOKENS];","class":"lineCov","hits":"1","order":"800","possible_hits":"1",},
{"lineNum":" 2536","line":""},
{"lineNum":" 2537","line":"  goto yynewstate;","class":"lineCov","hits":"2","order":"801","possible_hits":"2",},
{"lineNum":" 2538","line":""},
{"lineNum":" 2539","line":""},
{"lineNum":" 2540","line":"/*--------------------------------------."},
{"lineNum":" 2541","line":"| yyerrlab -- here on detecting error.  |"},
{"lineNum":" 2542","line":"`--------------------------------------*/"},
{"lineNum":" 2543","line":"yyerrlab:"},
{"lineNum":" 2544","line":"  /* Make sure we have latest lookahead translation.  See comments at"},
{"lineNum":" 2545","line":"     user semantic actions for why this is necessary.  */"},
{"lineNum":" 2546","line":"  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2547","line":""},
{"lineNum":" 2548","line":"  /* If not already recovering from an error, report this error.  */"},
{"lineNum":" 2549","line":"  if (!yyerrstatus)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2550","line":"    {"},
{"lineNum":" 2551","line":"      ++yynerrs;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2552","line":"#if ! YYERROR_VERBOSE"},
{"lineNum":" 2553","line":"      yyerror (YY_(\"syntax error\"));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2554","line":"#else"},
{"lineNum":" 2555","line":"# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \\"},
{"lineNum":" 2556","line":"                                        yyssp, yytoken)"},
{"lineNum":" 2557","line":"      {"},
{"lineNum":" 2558","line":"        char const *yymsgp = YY_(\"syntax error\");"},
{"lineNum":" 2559","line":"        int yysyntax_error_status;"},
{"lineNum":" 2560","line":"        yysyntax_error_status = YYSYNTAX_ERROR;"},
{"lineNum":" 2561","line":"        if (yysyntax_error_status == 0)"},
{"lineNum":" 2562","line":"          yymsgp = yymsg;"},
{"lineNum":" 2563","line":"        else if (yysyntax_error_status == 1)"},
{"lineNum":" 2564","line":"          {"},
{"lineNum":" 2565","line":"            if (yymsg != yymsgbuf)"},
{"lineNum":" 2566","line":"              YYSTACK_FREE (yymsg);"},
{"lineNum":" 2567","line":"            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);"},
{"lineNum":" 2568","line":"            if (!yymsg)"},
{"lineNum":" 2569","line":"              {"},
{"lineNum":" 2570","line":"                yymsg = yymsgbuf;"},
{"lineNum":" 2571","line":"                yymsg_alloc = sizeof yymsgbuf;"},
{"lineNum":" 2572","line":"                yysyntax_error_status = 2;"},
{"lineNum":" 2573","line":"              }"},
{"lineNum":" 2574","line":"            else"},
{"lineNum":" 2575","line":"              {"},
{"lineNum":" 2576","line":"                yysyntax_error_status = YYSYNTAX_ERROR;"},
{"lineNum":" 2577","line":"                yymsgp = yymsg;"},
{"lineNum":" 2578","line":"              }"},
{"lineNum":" 2579","line":"          }"},
{"lineNum":" 2580","line":"        yyerror (yymsgp);"},
{"lineNum":" 2581","line":"        if (yysyntax_error_status == 2)"},
{"lineNum":" 2582","line":"          goto yyexhaustedlab;"},
{"lineNum":" 2583","line":"      }"},
{"lineNum":" 2584","line":"# undef YYSYNTAX_ERROR"},
{"lineNum":" 2585","line":"#endif"},
{"lineNum":" 2586","line":"    }"},
{"lineNum":" 2587","line":""},
{"lineNum":" 2588","line":""},
{"lineNum":" 2589","line":""},
{"lineNum":" 2590","line":"  if (yyerrstatus == 3)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2591","line":"    {"},
{"lineNum":" 2592","line":"      /* If just tried and failed to reuse lookahead token after an"},
{"lineNum":" 2593","line":"         error, discard it.  */"},
{"lineNum":" 2594","line":""},
{"lineNum":" 2595","line":"      if (yychar <= YYEOF)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2596","line":"        {"},
{"lineNum":" 2597","line":"          /* Return failure if at end of input.  */"},
{"lineNum":" 2598","line":"          if (yychar == YYEOF)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2599","line":"            YYABORT;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2600","line":"        }"},
{"lineNum":" 2601","line":"      else"},
{"lineNum":" 2602","line":"        {"},
{"lineNum":" 2603","line":"          yydestruct (\"Error: discarding\",","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2604","line":"                      yytoken, &yylval);"},
{"lineNum":" 2605","line":"          yychar = YYEMPTY;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2606","line":"        }"},
{"lineNum":" 2607","line":"    }"},
{"lineNum":" 2608","line":""},
{"lineNum":" 2609","line":"  /* Else will try to reuse lookahead token after shifting the error"},
{"lineNum":" 2610","line":"     token.  */"},
{"lineNum":" 2611","line":"  goto yyerrlab1;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2612","line":""},
{"lineNum":" 2613","line":""},
{"lineNum":" 2614","line":"/*---------------------------------------------------."},
{"lineNum":" 2615","line":"| yyerrorlab -- error raised explicitly by YYERROR.  |"},
{"lineNum":" 2616","line":"`---------------------------------------------------*/"},
{"lineNum":" 2617","line":"yyerrorlab:"},
{"lineNum":" 2618","line":""},
{"lineNum":" 2619","line":"  /* Pacify compilers like GCC when the user code never invokes"},
{"lineNum":" 2620","line":"     YYERROR and the label yyerrorlab therefore never appears in user"},
{"lineNum":" 2621","line":"     code.  */"},
{"lineNum":" 2622","line":"  if (/*CONSTCOND*/ 0)"},
{"lineNum":" 2623","line":"     goto yyerrorlab;"},
{"lineNum":" 2624","line":""},
{"lineNum":" 2625","line":"  /* Do not reclaim the symbols of the rule whose action triggered"},
{"lineNum":" 2626","line":"     this YYERROR.  */"},
{"lineNum":" 2627","line":"  YYPOPSTACK (yylen);"},
{"lineNum":" 2628","line":"  yylen = 0;"},
{"lineNum":" 2629","line":"  YY_STACK_PRINT (yyss, yyssp);"},
{"lineNum":" 2630","line":"  yystate = *yyssp;"},
{"lineNum":" 2631","line":"  goto yyerrlab1;"},
{"lineNum":" 2632","line":""},
{"lineNum":" 2633","line":""},
{"lineNum":" 2634","line":"/*-------------------------------------------------------------."},
{"lineNum":" 2635","line":"| yyerrlab1 -- common code for both syntax error and YYERROR.  |"},
{"lineNum":" 2636","line":"`-------------------------------------------------------------*/"},
{"lineNum":" 2637","line":"yyerrlab1:"},
{"lineNum":" 2638","line":"  yyerrstatus = 3;      /* Each real token shifted decrements this.  */","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2639","line":""},
{"lineNum":" 2640","line":"  for (;;)"},
{"lineNum":" 2641","line":"    {"},
{"lineNum":" 2642","line":"      yyn = yypact[yystate];","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":" 2643","line":"      if (!yypact_value_is_default (yyn))","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2644","line":"        {"},
{"lineNum":" 2645","line":"          yyn += YYTERROR;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2646","line":"          if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2647","line":"            {"},
{"lineNum":" 2648","line":"              yyn = yytable[yyn];","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2649","line":"              if (0 < yyn)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2650","line":"                break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2651","line":"            }"},
{"lineNum":" 2652","line":"        }"},
{"lineNum":" 2653","line":""},
{"lineNum":" 2654","line":"      /* Pop the current state because it cannot handle the error token.  */"},
{"lineNum":" 2655","line":"      if (yyssp == yyss)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2656","line":"        YYABORT;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2657","line":""},
{"lineNum":" 2658","line":""},
{"lineNum":" 2659","line":"      yydestruct (\"Error: popping\",","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2660","line":"                  yystos[yystate], yyvsp);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2661","line":"      YYPOPSTACK (1);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2662","line":"      yystate = *yyssp;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2663","line":"      YY_STACK_PRINT (yyss, yyssp);"},
{"lineNum":" 2664","line":"    }"},
{"lineNum":" 2665","line":""},
{"lineNum":" 2666","line":"  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN"},
{"lineNum":" 2667","line":"  *++yyvsp = yylval;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2668","line":"  YY_IGNORE_MAYBE_UNINITIALIZED_END"},
{"lineNum":" 2669","line":""},
{"lineNum":" 2670","line":""},
{"lineNum":" 2671","line":"  /* Shift the error token.  */"},
{"lineNum":" 2672","line":"  YY_SYMBOL_PRINT (\"Shifting\", yystos[yyn], yyvsp, yylsp);"},
{"lineNum":" 2673","line":""},
{"lineNum":" 2674","line":"  yystate = yyn;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2675","line":"  goto yynewstate;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2676","line":""},
{"lineNum":" 2677","line":""},
{"lineNum":" 2678","line":"/*-------------------------------------."},
{"lineNum":" 2679","line":"| yyacceptlab -- YYACCEPT comes here.  |"},
{"lineNum":" 2680","line":"`-------------------------------------*/"},
{"lineNum":" 2681","line":"yyacceptlab:"},
{"lineNum":" 2682","line":"  yyresult = 0;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2683","line":"  goto yyreturn;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2684","line":""},
{"lineNum":" 2685","line":"/*-----------------------------------."},
{"lineNum":" 2686","line":"| yyabortlab -- YYABORT comes here.  |"},
{"lineNum":" 2687","line":"`-----------------------------------*/"},
{"lineNum":" 2688","line":"yyabortlab:"},
{"lineNum":" 2689","line":"  yyresult = 1;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2690","line":"  goto yyreturn;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2691","line":""},
{"lineNum":" 2692","line":"#if !defined yyoverflow || YYERROR_VERBOSE"},
{"lineNum":" 2693","line":"/*-------------------------------------------------."},
{"lineNum":" 2694","line":"| yyexhaustedlab -- memory exhaustion comes here.  |"},
{"lineNum":" 2695","line":"`-------------------------------------------------*/"},
{"lineNum":" 2696","line":"yyexhaustedlab:"},
{"lineNum":" 2697","line":"  yyerror (YY_(\"memory exhausted\"));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2698","line":"  yyresult = 2;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2699","line":"  /* Fall through.  */"},
{"lineNum":" 2700","line":"#endif"},
{"lineNum":" 2701","line":""},
{"lineNum":" 2702","line":"yyreturn:"},
{"lineNum":" 2703","line":"  if (yychar != YYEMPTY)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2704","line":"    {"},
{"lineNum":" 2705","line":"      /* Make sure we have latest lookahead translation.  See comments at"},
{"lineNum":" 2706","line":"         user semantic actions for why this is necessary.  */"},
{"lineNum":" 2707","line":"      yytoken = YYTRANSLATE (yychar);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2708","line":"      yydestruct (\"Cleanup: discarding lookahead\",","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2709","line":"                  yytoken, &yylval);"},
{"lineNum":" 2710","line":"    }"},
{"lineNum":" 2711","line":"  /* Do not reclaim the symbols of the rule whose action triggered"},
{"lineNum":" 2712","line":"     this YYABORT or YYACCEPT.  */"},
{"lineNum":" 2713","line":"  YYPOPSTACK (yylen);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2714","line":"  YY_STACK_PRINT (yyss, yyssp);"},
{"lineNum":" 2715","line":"  while (yyssp != yyss)","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":" 2716","line":"    {"},
{"lineNum":" 2717","line":"      yydestruct (\"Cleanup: popping\",","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2718","line":"                  yystos[*yyssp], yyvsp);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2719","line":"      YYPOPSTACK (1);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2720","line":"    }"},
{"lineNum":" 2721","line":"#ifndef yyoverflow"},
{"lineNum":" 2722","line":"  if (yyss != yyssa)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2723","line":"    YYSTACK_FREE (yyss);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2724","line":"#endif"},
{"lineNum":" 2725","line":"#if YYERROR_VERBOSE"},
{"lineNum":" 2726","line":"  if (yymsg != yymsgbuf)"},
{"lineNum":" 2727","line":"    YYSTACK_FREE (yymsg);"},
{"lineNum":" 2728","line":"#endif"},
{"lineNum":" 2729","line":"  return yyresult;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2730","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":" 2731","line":"#line 905 \"mipl.y\" /* yacc.c:1906  */"},
{"lineNum":" 2732","line":""},
{"lineNum":" 2733","line":""},
{"lineNum":" 2734","line":"#include    \"lex.yy.c\""},
{"lineNum":" 2735","line":"extern FILE *yyin;"},
{"lineNum":" 2736","line":""},
{"lineNum":" 2737","line":"void prRule(const char *lhs, const char *rhs)"},
{"lineNum":" 2738","line":"{"},
{"lineNum":" 2739","line":"  if (OUTPUT_PRODUCTIONS)"},
{"lineNum":" 2740","line":"    printf(\"%s -> %s\\n\", lhs, rhs);"},
{"lineNum":" 2741","line":"  return;"},
{"lineNum":" 2742","line":"}"},
{"lineNum":" 2743","line":""},
{"lineNum":" 2744","line":"int yyerror(const char *s)"},
{"lineNum":" 2745","line":"{"},
{"lineNum":" 2746","line":"  printf(\"Line %d: %s\\n\", lineNum, s);"},
{"lineNum":" 2747","line":"  cleanUp();"},
{"lineNum":" 2748","line":"  exit(1);"},
{"lineNum":" 2749","line":"}"},
{"lineNum":" 2750","line":""},
{"lineNum":" 2751","line":"int ckInt()"},
{"lineNum":" 2752","line":"{"},
{"lineNum":" 2753","line":"  char *ptr;"},
{"lineNum":" 2754","line":"  int\trc = 0;"},
{"lineNum":" 2755","line":"  ptr = yytext;"},
{"lineNum":" 2756","line":""},
{"lineNum":" 2757","line":"  /* ignore sign and leading zeroes */"},
{"lineNum":" 2758","line":"  if (*ptr == \'-\' || *ptr == \'+\')"},
{"lineNum":" 2759","line":"    ++ptr;"},
{"lineNum":" 2760","line":"  while (*ptr == \'0\')"},
{"lineNum":" 2761","line":"    ++ptr;"},
{"lineNum":" 2762","line":""},
{"lineNum":" 2763","line":"  switch (*ptr)"},
{"lineNum":" 2764","line":"  {"},
{"lineNum":" 2765","line":"  case \'1\':\t/* ALL are valid */"},
{"lineNum":" 2766","line":"\t\t\tbreak;"},
{"lineNum":" 2767","line":""},
{"lineNum":" 2768","line":"  case \'2\':\t/* it depends */"},
{"lineNum":" 2769","line":"\t\t\tif (strcmp(MAX_INT, ptr) < 0)"},
{"lineNum":" 2770","line":"\t\t\t  rc = 1;"},
{"lineNum":" 2771","line":"\t\t\tbreak;"},
{"lineNum":" 2772","line":""},
{"lineNum":" 2773","line":"  default:\t     /* ALL are invalid */"},
{"lineNum":" 2774","line":"\t\t\trc = 1;"},
{"lineNum":" 2775","line":"\t\t\tbreak;"},
{"lineNum":" 2776","line":"  }"},
{"lineNum":" 2777","line":"  return rc;"},
{"lineNum":" 2778","line":"}"},
{"lineNum":" 2779","line":""},
{"lineNum":" 2780","line":"void ignoreComment()"},
{"lineNum":" 2781","line":"{"},
{"lineNum":" 2782","line":"  char c, pc = 0;"},
{"lineNum":" 2783","line":""},
{"lineNum":" 2784","line":"  /* read and ignore input until you get an ending token */"},
{"lineNum":" 2785","line":"  while (((c = yyinput()) != \')\' || pc != \'*\') && c != 0) {"},
{"lineNum":" 2786","line":"    pc = c;"},
{"lineNum":" 2787","line":"    if (c == \'\\n\') lineNum++;"},
{"lineNum":" 2788","line":"  }"},
{"lineNum":" 2789","line":""},
{"lineNum":" 2790","line":"  return;"},
{"lineNum":" 2791","line":"}"},
{"lineNum":" 2792","line":""},
{"lineNum":" 2793","line":"void printTokenInfo(const char* tokenType,"},
{"lineNum":" 2794","line":"                    const char* lexeme)"},
{"lineNum":" 2795","line":"{"},
{"lineNum":" 2796","line":"  if (OUTPUT_TOKENS)"},
{"lineNum":" 2797","line":"    printf(\"TOKEN: %-15s  LEXEME: %s\\n\", tokenType, lexeme);"},
{"lineNum":" 2798","line":"}"},
{"lineNum":" 2799","line":""},
{"lineNum":" 2800","line":"void beginScope()"},
{"lineNum":" 2801","line":"{"},
{"lineNum":" 2802","line":"  scopeStack.push(SYMBOL_TABLE());"},
{"lineNum":" 2803","line":"  if (OUTPUT_ST_MGT)"},
{"lineNum":" 2804","line":"    printf(\"\\n___Entering new scope...\\n\\n\");"},
{"lineNum":" 2805","line":"}"},
{"lineNum":" 2806","line":""},
{"lineNum":" 2807","line":"void endScope()"},
{"lineNum":" 2808","line":"{"},
{"lineNum":" 2809","line":"  scopeStack.pop();"},
{"lineNum":" 2810","line":"  if (OUTPUT_ST_MGT)"},
{"lineNum":" 2811","line":"    printf(\"\\n___Exiting scope...\\n\\n\");"},
{"lineNum":" 2812","line":"}"},
{"lineNum":" 2813","line":""},
{"lineNum":" 2814","line":"void prSymbolTableAddition(const string identName,"},
{"lineNum":" 2815","line":"                           const TYPE_INFO typeInfo)"},
{"lineNum":" 2816","line":"{"},
{"lineNum":" 2817","line":"  if (OUTPUT_ST_MGT)"},
{"lineNum":" 2818","line":"  {"},
{"lineNum":" 2819","line":"   char *cstr = new char[identName.length() + 1];"},
{"lineNum":" 2820","line":"   strcpy(cstr, identName.c_str());"},
{"lineNum":" 2821","line":"   printf(\"___Adding %s to symbol table with type \", cstr);"},
{"lineNum":" 2822","line":"   delete [] cstr;"},
{"lineNum":" 2823","line":"   switch (typeInfo.type) {"},
{"lineNum":" 2824","line":"\tcase PROGRAM\t: printf(\"PROGRAM\\n\"); break;"},
{"lineNum":" 2825","line":"\tcase PROCEDURE\t: printf(\"PROCEDURE\\n\"); break;"},
{"lineNum":" 2826","line":"\tcase INT\t\t: printf(\"INTEGER\\n\"); break;"},
{"lineNum":" 2827","line":"\tcase CHAR\t\t: printf(\"CHAR\\n\"); break;"},
{"lineNum":" 2828","line":"\tcase BOOL\t\t: printf(\"BOOLEAN\\n\"); break;"},
{"lineNum":" 2829","line":"\tcase ARRAY\t\t: printf(\"ARRAY \");"},
{"lineNum":" 2830","line":"\t\t\t\t  printf(\"%d .. %d OF \","},
{"lineNum":" 2831","line":"\t\t\t\t         typeInfo.startIndex,"},
{"lineNum":" 2832","line":"\t\t\t\t         typeInfo.endIndex);"},
{"lineNum":" 2833","line":"\t\t\t\t  switch (typeInfo.baseType) {"},
{"lineNum":" 2834","line":"\t\t\t\t    case INT : printf(\"INTEGER\\n\");"},
{"lineNum":" 2835","line":"                                     break;"},
{"lineNum":" 2836","line":"\t\t\t\t    case CHAR: printf(\"CHAR\\n\");"},
{"lineNum":" 2837","line":"                                     break;"},
{"lineNum":" 2838","line":"\t\t\t\t    case BOOL: printf(\"BOOLEAN\\n\");"},
{"lineNum":" 2839","line":"                                     break;"},
{"lineNum":" 2840","line":"\t\t\t\t    default  : printf(\"UNKNOWN\\n\");"},
{"lineNum":" 2841","line":"                                     break;"},
{"lineNum":" 2842","line":"\t\t\t\t  }"},
{"lineNum":" 2843","line":"\t\t\t\t  break;"},
{"lineNum":" 2844","line":"\tdefault \t\t: printf(\"UNKNOWN\\n\"); break;"},
{"lineNum":" 2845","line":"   }"},
{"lineNum":" 2846","line":"  }"},
{"lineNum":" 2847","line":"}"},
{"lineNum":" 2848","line":""},
{"lineNum":" 2849","line":"TYPE_INFO findEntryInAnyScope(const string theName)"},
{"lineNum":" 2850","line":"{"},
{"lineNum":" 2851","line":"  TYPE_INFO info = {UNDEFINED, NOT_APPLICABLE, NOT_APPLICABLE,"},
{"lineNum":" 2852","line":"                    NOT_APPLICABLE};"},
{"lineNum":" 2853","line":"  if (scopeStack.empty( )) return(info);"},
{"lineNum":" 2854","line":"  info = scopeStack.top().findEntry(theName);"},
{"lineNum":" 2855","line":"  if (info.type != UNDEFINED)"},
{"lineNum":" 2856","line":"    return(info);"},
{"lineNum":" 2857","line":"  else { // check in \"next higher\" scope"},
{"lineNum":" 2858","line":"\t   SYMBOL_TABLE symbolTable = scopeStack.top( );"},
{"lineNum":" 2859","line":"\t   scopeStack.pop( );"},
{"lineNum":" 2860","line":"\t   info = findEntryInAnyScope(theName);"},
{"lineNum":" 2861","line":"\t   scopeStack.push(symbolTable); // restore the stack"},
{"lineNum":" 2862","line":"\t   return(info);"},
{"lineNum":" 2863","line":"  }"},
{"lineNum":" 2864","line":"}"},
{"lineNum":" 2865","line":""},
{"lineNum":" 2866","line":"void cleanUp()"},
{"lineNum":" 2867","line":"{"},
{"lineNum":" 2868","line":"  if (scopeStack.empty())"},
{"lineNum":" 2869","line":"    return;"},
{"lineNum":" 2870","line":"  else {"},
{"lineNum":" 2871","line":"        scopeStack.pop();"},
{"lineNum":" 2872","line":"        cleanUp();"},
{"lineNum":" 2873","line":"  }"},
{"lineNum":" 2874","line":"}"},
{"lineNum":" 2875","line":""},
{"lineNum":" 2876","line":"int main(int argc, char** argv) {"},
{"lineNum":" 2877","line":"  if (argc < 2) {"},
{"lineNum":" 2878","line":"    printf(\"You must specify a file in the command line!\\n\");"},
{"lineNum":" 2879","line":"    exit(1);"},
{"lineNum":" 2880","line":"  }"},
{"lineNum":" 2881","line":""},
{"lineNum":" 2882","line":"  // Parse the input file, and generate instructions vector"},
{"lineNum":" 2883","line":"  yyin = fopen(argv[1], \"r\");"},
{"lineNum":" 2884","line":"  do {"},
{"lineNum":" 2885","line":"    yyparse();"},
{"lineNum":" 2886","line":"  } while (!feof(yyin));"},
{"lineNum":" 2887","line":""},
{"lineNum":" 2888","line":"  cleanUp();"},
{"lineNum":" 2889","line":"  return 0;"},
{"lineNum":" 2890","line":"}"},
{"lineNum":" 2891","line":""},
{"lineNum":" 2892","line":""},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "mipl_parser", "date" : "2018-11-28 14:11:04", "instrumented" : 215, "covered" : 91,};
var merged_data = [];
